{"mappings":"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","sources":["src/settings.ts","src/deep-clone.ts","src/metadata.ts","src/path-listener.ts","src/make-error.ts","src/by-path.ts","src/xin.ts","src/bind.ts","src/dom.ts","src/throttle.ts","src/list-binding.ts","src/bindings.ts","src/more-math.ts","src/color.ts","src/string-case.ts","src/elements.ts","src/css.ts","src/component.ts","src/hot-reload.ts","src/xin-proxy.ts"],"sourcesContent":["export const settings = {\n  debug: false,\n  perf: false\n}\n","import { XinObject, XinArray } from './xin-types'\n\ntype Scalar = string | boolean | number | Function\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone (obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    // @ts-expect-error-error\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","import { XinObject, XinProxy, XinBinding, XinEventHandler } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T extends {}> (x: T): T {\n  // eslint-disable-next-line\n  return (typeof x === 'object' && x !== null ? (x as unknown as XinProxy)[XIN_VALUE] || x : x) as T\n}\n\nexport interface DataBinding<T = HTMLElement> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> = new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element)\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: Function\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction) {\n    const callbackDescription = typeof callback === 'string' ? `\"${callback}\"` : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = t => typeof t === 'string' && t !== '' && (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter(listener => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(`Listener ${listener.description} threw \"${e as string}\" at \"${path}\"`)\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach(listener => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(`Listener ${listener.description} threw \"${e as string}\" handling \"${path}\"`)\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise(resolve => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (touchedPaths.find(touchedPath => path.startsWith(touchedPath)) == null) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (test: string | RegExp | PathTestFunction, callback: ObserverCallbackFunction): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error => new Error(messages.map(stringify).join(' '))\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string => new Date(parseInt('1000000000', 36) + Date.now()).valueOf().toString(36).slice(1)\nlet _seq = 0\nconst seq = (): string => (parseInt('10000', 36) + (++_seq)).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts (path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[item._auto_ as string + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[getByPath(item, idPath) as string + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined || idPathMaps.get(array)[idPath] === undefined) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex (array: XinObject[], idPath: string, idValue: any): number {\n  idValue = idValue as string + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (idx === undefined || getByPath(array[idx], idPath) as string + '' !== idValue) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey (obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath (array: any[], idPath: string, idValue: string, valueToInsert?: any): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (idPath !== '' && getByPath(valueToInsert, idPath) as string + '' === idValue + '') {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray (obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject (obj: any): void {\n  if ((obj == null) || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath (obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath (orig: XinObject | XinArray, path: string, val: any): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while ((obj != null) && (parts.length > 0)) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(obj as any[], idPath, idValue, (parts.length > 0) ? _newObject_ : val)\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            (obj as XinArray)[idx] = val\n          } else {\n            (obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && (part.length > 0)) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if ((part.length > 0) || (parts.length > 0)) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey((obj as XinObject), key, (part.length > 0) ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            (obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath (orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","import { XinProxyObject, XinProxyTarget, XinObject, XinArray, XinValue, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { settings } from './settings'\nimport { Listener, touch, observe as _observe, unobserve, updates, observerShouldBeRemoved } from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { xinValue, xinPath, XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>,\n  ) => { proxy: P, revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(target: T, handler: ProxyHandler<P>): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = ['sort', 'splice', 'copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'unshift']\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst regHandler = (path = ''): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get (target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      while (xinPath(target) !== undefined) {\n        target = xinValue(target)\n      }\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      // @ts-expect-error\n      return target[_prop]\n    }\n    let prop = _prop\n    const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n                        prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n                        prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n                        prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object' ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[subPath] : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) => `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath)) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error\n            const result = (Array.prototype[prop]).apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n          ? new Proxy<XinProxyTarget, XinObject>(value, regHandler(extendPath(path, prop)))\n          : value\n    } else {\n      return target[prop]\n    }\n  },\n  set (_, prop: string, value: any) {\n    // eslint-disable-next-line\n    value = xinValue(value)\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    const existing = xinValue(xin[fullPath])\n    // eslint-disable-next-line\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  }\n})\n\nconst observe = (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction): Listener => {\n  const func = typeof callback === 'function' ? callback : (xin)[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(`observe expects a function or path to a function, ${callback as string} is neither`)\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings\n}\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem, elementToBindings, elementToHandlers, DataBindings, BOUND_CLASS, BOUND_SELECTOR,\n  EVENT_CLASS, EVENT_SELECTOR, XinEventBindings, XIN_PATH, XIN_VALUE\n} from './metadata'\nimport { XinObject, XinProxy, XinEventHandler, XinTouchableType, XinBinding, XinBindingSpec } from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: HTMLElement, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    return\n  }\n  for (const dataBinding of dataBindings) {\n    let { path, binding, options } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${(dataSource as XinProxy)[XIN_PATH]}${path.substring(1)}`\n        } else {\n          console.error(`Cannot resolve relative binding ${path}`, element, 'is not part of a list')\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      [...mutation.addedNodes].forEach(node => {\n        if (node instanceof HTMLElement) {\n          [...node.querySelectorAll(BOUND_SELECTOR)].forEach(element => touchElement(element as HTMLElement))\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(() => true, (changedPath: string) => {\n  const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n  for (const element of boundElements) {\n    touchElement(element as HTMLElement, changedPath)\n  }\n})\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            // @ts-expect-error-error\n            const existingActual = existing[XIN_PATH] != null ? (existing as XinProxy)[XIN_VALUE] : existing\n            const valueActual = value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends HTMLElement> (element: T, what: XinTouchableType | XinBindingSpec, binding: XinBinding<T>, options?: XinObject): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (typeof what === 'object' && (what as XinProxy)[XIN_PATH] === undefined && options === undefined) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({ path, binding: binding as XinBinding<HTMLElement>, options })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get (target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    }\n  })\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    // eslint-disable-next-line\n    const handlers = eventBindings[event.type] || [] as XinEventHandler[]\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        // eslint-disable-next-line\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target = target.parentElement != null ? target.parentElement.closest(EVENT_SELECTOR) : null\n  }\n}\n\nexport const on = (element: HTMLElement, eventType: string, eventHandler: XinEventHandler): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  // eslint-disable-next-line\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (element instanceof HTMLSelectElement && element.hasAttribute('multiple')) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      // @ts-expect-error\n      element.checked = element.value === newValue\n      break\n    case 'checkbox':\n      // @ts-expect-error\n      element.checked = newValue\n      break\n    case 'date':\n      // @ts-expect-error\n      element.valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [...element.querySelectorAll('option')] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      // @ts-expect-error\n      element.value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio':\n    {\n      const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      // @ts-expect-error\n      return element.checked\n    case 'date':\n      // @ts-expect-error\n      return element.valueAsDate.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')]\n        .reduce((map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        }, {})\n    default:\n      return element.value\n  }\n}\n\n/* global ResizeObserver */\nconst { ResizeObserver } = globalThis\nexport const resizeObserver = ResizeObserver != null\n  ? new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const element = entry.target\n      dispatch(element, 'resize')\n    }\n  })\n  : {\n      observe () {},\n      unobserve () {}\n    }\n\nexport const appendContentToElement = (elt: Element | ShadowRoot | null | undefined, content: ContentType | null | undefined, cloneElements = true): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach(node => {\n        elt.append(node instanceof Node && cloneElements ? cloneWithBindings(node) : node)\n      })\n    } else if (content instanceof HTMLElement || content instanceof DocumentFragment) {\n      elt.append(cloneElements ? cloneWithBindings(content) : content)\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport { cloneWithBindings, elementToItem, elementToBindings, BOUND_SELECTOR, DataBinding, xinValue, xinPath } from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number, width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings (element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor (boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error('ListBinding expects an element with exactly one child element')\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error('ListBinding expects a template with exactly one child element')\n      }\n      this.template = cloneWithBindings(template.content.children[0]) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice (): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter(item => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0)\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer\n    }\n  }\n\n  update (array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance, hiddenProp, visibleProp } = this.options\n    // @ts-expect-error\n    const arrayPath: string = xinPath(array)\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle('-xin-empty-list', slice.items.length === 0)\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(element, insertionPoint.nextElementSibling)\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\nexport const getListBinding = (boundElement: HTMLElement, options?: ListBindingOptions): ListBinding => {\n  // @ts-expect-error\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding == null) {\n    listBinding = new ListBinding(boundElement, options)\n    // @ts-expect-error\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM (element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM (element: HTMLElement) {\n      return getValue(element as ValueElement)\n    }\n  },\n\n  text: {\n    toDOM (element: HTMLElement, value: any) {\n      element.textContent = value\n    }\n  },\n\n  enabled: {\n    toDOM (element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      (element as HTMLInputElement).disabled = !value\n    }\n  },\n\n  disabled: {\n    toDOM (element: HTMLElement, value: any) {\n      (element as HTMLInputElement).disabled = Boolean(value)\n    }\n  },\n\n  style: {\n    toDOM (element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    }\n  },\n\n  list: {\n    toDOM (element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    }\n  }\n}\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp (min: number, v: number, max: number): number {\n  return v < min ? min : (v > max ? max : v)\n}\n\nexport function lerp (a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp\n}\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string => ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor (r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h = s !== 0\n      ? l === r\n        ? (g - b) / s\n        : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n      : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span = globalThis.document !== undefined ? globalThis.document.createElement('span') : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss (spec: string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl (h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`)\n  }\n\n  constructor (r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : a = 1\n  }\n\n  get inverse (): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance (): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb (): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba (): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`\n  }\n\n  get RGBA (): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB (): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl (): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl (): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`\n  }\n\n  get hsla (): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono (): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness (): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html (): string {\n    return this.a === 1 ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) : '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) + hex2(Math.floor(255 * this.a))\n  }\n\n  brighten (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  darken (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  saturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  desaturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  rotate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    h = (h + 360 + amount) % 360\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  opacity (alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch (): void {\n    const { r, g, b, a } = this\n    console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, 'background-color: #eee')\n  }\n\n  blend (otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","export function camelToKabob (s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel (s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport { ElementPart, ElementProps, ElementCreator, SwissArmyElement } from './xin-types'\nimport { camelToKabob } from './string-case'\n\nconst MATH = 'http://www.w3.org/1998/Math/MathML'\nconst SVG = 'http://www.w3.org/2000/svg'\n\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: Element } = {}\n\nconst create = (tagType: string, ...contents: ElementPart[]): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    const [tag, namespace] = tagType.split('|')\n    if (namespace === undefined) {\n      templates[tagType] = globalThis.document.createElement(tag)\n    } else {\n      templates[tagType] = globalThis.document.createElementNS(namespace, tag)\n    }\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (item instanceof Element || item instanceof DocumentFragment || typeof item === 'string' || typeof item === 'number') {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // @ts-expect-error\n            elt.style[prop] = value[prop]\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`)\n      }\n    // @ts-expect-error\n    } else if (elt[key] !== undefined) {\n      if (elt instanceof SVGElement || elt instanceof MathMLElement) {\n        elt.setAttribute(key, value)\n      } else {\n        // @ts-expect-error\n        elt[key] = value\n      }\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      // @ts-expect-error-error\n      } else if (elt[attr] !== undefined) {\n        // @ts-expect-error-error\n        elt[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (...contents: ElementPart[]) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creatres <my-element> elements.\n */\nexport const elements = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    tagName = tagName.replace(/[A-Z]/g, c => `-${c.toLocaleLowerCase()}`)\n    // @ts-expect-error\n    if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(tagName, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as ElementsProxy\n\ninterface SVGElementsProxy {\n  [key: string]: ElementCreator<SVGElement>\n}\n\nexport const svgElements = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    // @ts-expect-error\n    if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(`${tagName}|${SVG}`, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as SVGElementsProxy\n\ninterface MathMLElementsProxy {\n  [key: string]: ElementCreator<MathMLElement>\n}\n\nexport const mathML = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    // @ts-expect-error\n    if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(`${tagName}|${MATH}`, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as MathMLElementsProxy\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule, XinStyleMap } from './css-types'\n\nexport function StyleNode (styleSheet: XinStyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet))\n}\n\nconst numericProps = [\n  'animation-iteration-count', 'flex', 'flex-base', 'flex-grow', 'flex-shrink', 'gap', 'opacity', 'order',\n  'tab-size', 'widows', 'z-index', 'zoom'\n]\nconst renderProp = (indentation: string, cssProp: string, value: string | number | undefined): string => {\n  if (value === undefined) {\n    return ''\n  } else if (typeof value === 'string' || numericProps.includes(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value};`\n  } else {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n}\n\nconst renderStatement = (key: string, value: string | number | XinStyleRule | undefined, indentation = ''): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value).map(innerKey => renderStatement(innerKey, value[innerKey], `${indentation}  `)).join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (obj: XinStyleSheet | XinStyleMap, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map(prop => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: { [key: string]: string | number }): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] = typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (typeof value === 'string' && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>({}, {\n  get (target, prop: string) {\n    if (target[prop] == null) {\n      prop = prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)\n      let [,varName,, isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/) as string[]\n      varName = `--${varName}`\n      if (scaleText != null) {\n        const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100\n        switch (method) {\n          case 'b': // brighten\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).brighten(scale).rgba : Color.fromCss(baseColor).darken(-scale).rgba\n            }\n            break\n          case 's': // saturate\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).saturate(scale).rgba : Color.fromCss(baseColor).desaturate(-scale).rgba\n            }\n            break\n          case 'h': // hue\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n              console.log(Color.fromCss(baseColor).hsla, Color.fromCss(baseColor).rotate(scale).hsla)\n            }\n            break\n          case 'o': // alpha\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n            }\n            break\n          case '':\n            target[prop] = `calc(var(${varName}) * ${scale})`\n            break\n          default:\n            console.error(method)\n            throw new Error(`Unrecognized method ${method} for css variable ${varName}`)\n        }\n      } else {\n        target[prop] = `var(${varName})`\n      }\n    }\n    return target[prop]\n  }\n})\n\ntype CssVarBuilder = (val: string | number) => string\n\nexport const varDefault = new Proxy<{ [key: string]: CssVarBuilder }>({}, {\n  get (target, prop: string) {\n    if (target[prop] === undefined) {\n      const varName = `--${prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)}`\n      target[prop] = (val: string | number) => `var(${varName}, ${val})`\n    }\n    return target[prop]\n  }\n})\n","import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nlet anonymousElementCount = 0\n\nfunction anonElementTag (): string {\n  return `custom-elt${(anonymousElementCount++).toString(36)}`\n}\nlet instanceCount = 0\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  value?: any\n  isSlotted?: boolean\n  [key: string]: any\n\n  static StyleNode (styleSpec: XinStyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator (options?: ElementDefinitionOptions & { tag?: string }): ElementCreator {\n    if (this._elementCreator == null) {\n      let tagName = options != null ? options.tag : null\n      if (tagName == null) {\n        if (typeof this.name === 'string' && this.name !== '') {\n          tagName = camelToKabob(this.name)\n          if (tagName.startsWith('-')) {\n            tagName = tagName.slice(1)\n          }\n        } else {\n          tagName = anonElementTag()\n        }\n      }\n      if (customElements.get(tagName) != null) {\n        console.warn(`${tagName} is already defined`)\n      }\n      while (customElements.get(tagName) !== undefined) {\n        tagName = anonElementTag()\n      }\n      window.customElements.define(tagName, this as unknown as CustomElementConstructor, options)\n      this._elementCreator = elements[tagName]\n    }\n    return this._elementCreator\n  }\n\n  initAttributes (...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        // eslint-disable-next-line\n        triggerRender = !!(mutation.attributeName && attributeNames.includes(kabobToCamel(mutation.attributeName)))\n      })\n      if (triggerRender && this.queueRender !== undefined) this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach(attributeName => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get () {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            // eslint-disable-next-line\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            // @ts-expect-error\n            } else if (attributeValues[attributeName] !== undefined) {\n            // @ts-expect-error\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set (value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              // eslint-disable-next-line\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (typeof value === 'object' || `${value as string}` !== `${this[attributeName] as string}`) {\n              if (value === null || value === undefined || typeof value === 'object') {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              // @ts-expect-error\n              attributeValues[attributeName] = value\n            }\n          }\n        }\n      })\n    })\n  }\n\n  private initValue (): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) {\n      return\n    }\n    let value = this.hasAttribute('value') ? this.getAttribute('value') : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get () {\n        return value\n      },\n      set (newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      }\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs (): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy({}, {\n        get (target: { [key: string]: SwissArmyElement }, ref: string) {\n          if (target[ref] === undefined) {\n            let element = root.querySelector(`[data-ref=\"${ref}\"]`)\n            if (element == null) {\n              element = root.querySelector(ref)\n            }\n            if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`)\n            element.removeAttribute('data-ref')\n            target[ref] = element as SwissArmyElement\n          }\n          return target[ref]\n        }\n      })\n    }\n    return this._refs\n  }\n\n  constructor () {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback (): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback (): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender (triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate (): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const cloneElements = typeof this.content !== 'function'\n      const _content: ContentType | null = typeof this.content === 'function' ? this.content() : this.content\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, _content, cloneElements)\n      } else if (_content !== null) {\n        const existingChildren = [...this.childNodes]\n        appendContentToElement(this as HTMLElement, _content, cloneElements)\n        this.isSlotted = this.querySelector('slot,xin-slot') !== undefined\n        const slots = [...this.querySelectorAll('slot')]\n        if (slots.length > 0) {\n          slots.forEach(XinSlot.replaceSlot)\n        }\n        if (existingChildren.length > 0) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          ;[...this.querySelectorAll('xin-slot')].forEach((slot) => {\n            slotMap[(slot as XinSlot).name] = slot\n          })\n          existingChildren.forEach(child => {\n            const defaultSlot = slotMap['']\n            const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render (): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  static replaceSlot (slot: HTMLSlotElement): void {\n    const _slot = document.createElement('xin-slot')\n    if (slot.name !== '') {\n      _slot.setAttribute('name', slot.name)\n    }\n    slot.replaceWith(_slot)\n  }\n\n  constructor () {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport { XinObject, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { XinProxyObject } from './xin-types'\nimport { xin } from './xin'\n\nexport function xinProxy<T extends {}> (obj: T): T {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    // eslint-disable-next-line\n    xin[key] = (obj as {[key: string]: any})[key]\n    registered[key] = xin[key] as XinProxyObject\n  })\n  return registered as T\n}\n"],"names":["$431d87cffae1b706$export$a5a6e0b888b2c992","debug","perf","$324ad9265fd7ec5b$export$b7d58db314e0ac27","obj","Array","isArray","map","clone","key","val","$fc871d27afcbf39a$export$c6592bbc1eebb717","$fc871d27afcbf39a$export$4c0223f67078aeac","$fc871d27afcbf39a$export$6a7099543a9795c7","$fc871d27afcbf39a$export$21d9322c3477441b","$fc871d27afcbf39a$export$a3622eb3b5dd592a","Symbol","$fc871d27afcbf39a$export$bdd0d039ad781534","$fc871d27afcbf39a$export$40700dafb97c3799","x","$fc871d27afcbf39a$export$5dcba2d45033d435","$fc871d27afcbf39a$export$fe712848e6e66613","WeakMap","$fc871d27afcbf39a$export$1f922de8d0ecbb7e","$fc871d27afcbf39a$export$fa8cc6a36b1ccd7f","element","cloned","cloneNode","HTMLElement","dataBindings","get","eventHandlers","set","node","HTMLTemplateElement","content","childNodes","DocumentFragment","appendChild","$fc871d27afcbf39a$export$86caed35dd837d06","$fc871d27afcbf39a$export$4c309843c07ce679","html","document","body","parentElement","item","$de0f84e31db1d985$export$253d09664e30b967","$de0f84e31db1d985$export$58bed631278dbc67","$de0f84e31db1d985$var$touchedPaths","$de0f84e31db1d985$var$updatePromise","$de0f84e31db1d985$var$resolveUpdate","$de0f84e31db1d985$var$updateTriggered","$de0f84e31db1d985$export$c92b1d5f43586026","constructor","test","callback","callbackDescription","name","testDescription","this","t","startsWith","RegExp","bind","toString","Function","Error","description","push","$de0f84e31db1d985$var$update","console","time","paths","path","filter","listener","heard","e","$de0f84e31db1d985$export$23a2283368c55ea2","forEach","outcome","error","splice","timeEnd","$de0f84e31db1d985$export$d0b7ea69ab6056df","touchable","undefined","Promise","resolve","setTimeout","find","touchedPath","$de0f84e31db1d985$export$d1203567a167490e","index","indexOf","$9c8ee0b1e1b7d62b$var$stringify","JSON","stringify","_","$9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7","messages","join","$90757103be394558$var$_seq","$90757103be394558$var$id","Date","parseInt","now","valueOf","slice","$90757103be394558$var$_delete_","$90757103be394558$var$_newObject_","$90757103be394558$export$f5d2dd4cfd729958","parts","length","search","split","part","$90757103be394558$var$idPathMaps","$90757103be394558$var$buildIdPathValueMap","array","idPath","idx","_auto_","$90757103be394558$export$44b5bed83342a92f","$90757103be394558$var$keyToIndex","idValue","$90757103be394558$var$getIdPathMap","$90757103be394558$var$byKey","valueToInsert","$90757103be394558$var$byIdPath","delete","$90757103be394558$var$expectArray","$90757103be394558$var$expectObject","Object","i","iMax","j","jMax","found","includes","tail","$90757103be394558$export$f65a19d15516795e","orig","shift","equalsOffset","prototype","hasOwnProperty","call","$5d68f8b093886143$var$ARRAY_MUTATIONS","$5d68f8b093886143$var$registry","$5d68f8b093886143$var$validPath","$5d68f8b093886143$var$extendPath","prop","match","$5d68f8b093886143$var$regHandler","target","_prop","compoundProp","basePath","subPath","currentPath","value","Proxy","endsWith","substring","needle","candidate","items","result","apply","fullPath","$5d68f8b093886143$export$a678af82bf766611","$5d68f8b093886143$export$966034e6c6823eb0","$5d68f8b093886143$export$d1203567a167490e","func","$d165020245160cdf$var$document","MutationObserver","$d165020245160cdf$var$MutationObserver","globalThis","$d165020245160cdf$export$80bf2f765c31be6a","changedPath","dataBinding","binding","options","toDOM","dataSource","mutationsList","mutation","addedNodes","querySelectorAll","observe","subtree","childList","boundElements","$d165020245160cdf$var$handleChange","event","closest","fromDOM","existing","existingActual","valueActual","$d165020245160cdf$export$2385a24977818dd0","what","classList","add","addEventListener","$d165020245160cdf$var$handledEventTypes","Set","$d165020245160cdf$var$handleBoundEvent","propagationStopped","wrappedEvent","stopPropagation","handlers","type","handler","$d165020245160cdf$export$af631764ddc44097","eventType","eventHandler","eventBindings","has","$4f9ba97dad88433d$export$635e15bbd66f01ea","Event","dispatchEvent","$4f9ba97dad88433d$var$valueType","HTMLInputElement","HTMLSelectElement","hasAttribute","$4f9ba97dad88433d$export$80746c6bc6142fc8","newValue","checked","valueAsDate","option","selected","$4f9ba97dad88433d$export$bf7199a9ebcb84a9","radio","querySelector","toISOString","reduce","ResizeObserver","$4f9ba97dad88433d$var$ResizeObserver","$4f9ba97dad88433d$export$b13421f1ae71d316","entries","entry","unobserve","$4f9ba97dad88433d$export$6bb13967611cdb1","elt","cloneElements","textContent","append","Node","$4a3ba1b45110c477$export$61fc7d43ac8f84b0","origFn","minInterval","debounceId","args","clearTimeout","$4a3ba1b45110c477$export$de363e709c412c8a","previousCall","inFlight","async","$01a9fd6c1733697a$var$listBindingRef","$01a9fd6c1733697a$var$updateRelativeBindings","matches","unshift","boundElement","bindings","$01a9fd6c1733697a$var$ListBinding","_array","itemToElement","children","template","remove","listTop","createElement","listBottom","virtual","_update","update","visibleSlice","hiddenProp","visibleProp","visibleArray","firstItem","lastItem","topBuffer","bottomBuffer","width","offsetWidth","height","offsetHeight","visibleColumns","Math","max","floor","visibleRows","ceil","totalRows","visibleItems","topRow","scrollTop","isSlice","initInstance","updateInstance","arrayPath","toggle","previousSlice","_previousSlice","removed","moved","created","proxy","style","String","elements","insertBefore","insertionPoint","previousElementSibling","nextElementSibling","log","$01a9fd6c1733697a$export$b0eb386be3b9fed8","listBinding","$3a4453529c7602e5$export$97a1a3e6f39778d2","text","enabled","disabled","Boolean","keys","setAttribute","list","PI","$35ded60743a49eea$export$7d15b64cf5a3a4c4","min","v","$35ded60743a49eea$export$3a89f8d6f6bf6c9f","a","b","$35ded60743a49eea$export$5e0dd9fd5d74e0c5","$ebe12b957d7ffb42$var$hex2","n","round","Number","$ebe12b957d7ffb42$var$HslColor","r","g","l","s","h","$ebe12b957d7ffb42$var$span","$ebe12b957d7ffb42$export$892596cec99bc70e","static","spec","converted","HTMLSpanElement","color","getComputedStyle","fromCss","toFixed","inverse","inverseLuminance","_hsl","fromHsl","rgb","rgba","RGBA","ARGB","_hslCached","hsl","hsla","mono","brightness","brighten","amount","darken","saturate","desaturate","rotate","opacity","alpha","swatch","blend","otherColor","$8287b4a0c42d6d79$export$87ae551bf60f4bb","replace","c","toLocaleLowerCase","$1fadd05c13944ca9$var$templates","$1fadd05c13944ca9$var$create","tagType","contents","tag","namespace","createElementNS","elementProps","Element","assign","setProperty","toLowerCase","bindingType","SVGElement","MathMLElement","attr","className","removeAttribute","$1fadd05c13944ca9$var$fragment","frag","createDocumentFragment","$1fadd05c13944ca9$export$7a5d735b2ab6389d","tagName","$1fadd05c13944ca9$export$cf20112a1bc148da","$1fadd05c13944ca9$export$8ec252cfdd664597","$4d116130f980647c$var$numericProps","$4d116130f980647c$var$renderStatement","indentation","cssProp","renderedRule","innerKey","$4d116130f980647c$var$renderProp","$4d116130f980647c$export$dbf350e5966cf602","selector","rule","$4d116130f980647c$export$90d0ea046136e3ed","$4d116130f980647c$export$808aaf1b460dc9af","$4d116130f980647c$export$3cb96c9f6c8d16a4","varName","isNegative","scaleText","method","scale","baseColor","getPropertyValue","$4d116130f980647c$export$75c0e6adb3e38f31","$065ec34f90b90178$var$anonymousElementCount","$065ec34f90b90178$var$anonElementTag","$065ec34f90b90178$var$instanceCount","$065ec34f90b90178$export$16fa2f45be04daa8","slot","styleSpec","_elementCreator","customElements","warn","window","define","initAttributes","attributeNames","attributes","attributeValues","triggerRender","attributeName","toLocaleUpperCase","queueRender","attributeKabob","defineProperty","enumerable","parseFloat","getAttribute","initValue","valueDescriptor","getOwnPropertyDescriptor","refs","root","shadowRoot","_refs","ref","super","instanceId","_value","defaultValue","connectedCallback","hydrate","role","onResize","_onResize","disconnectedCallback","_changeQueued","_renderQueued","triggerChangeEvent","_hydrated","requestAnimationFrame","render","_content","styleNode","shadow","attachShadow","mode","existingChildren","isSlotted","slots","$065ec34f90b90178$var$XinSlot","replaceSlot","slotMap","child","defaultSlot","destSlot","_slot","replaceWith","elementCreator","$b71156193afa7077$export$93b87f7746612069","savedState","localStorage","getItem","state","parse","saveState","setItem","$7c408001ca0a23f8$export$95a552d2395ab4c4","registered"],"version":3,"file":"index.js.map"}