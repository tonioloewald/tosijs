{"mappings":"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","sources":["src/more-math.ts","src/xin-types.ts","src/settings.ts","src/path-listener.ts","src/make-error.ts","src/by-path.ts","src/xin.ts","src/throttle.ts","src/hot-reload.ts","src/color.ts","src/deep-clone.ts","src/metadata.ts","src/bind.ts","src/dom.ts","src/list-binding.ts","src/bindings.ts","src/string-case.ts","src/elements.ts","src/css.ts","src/component.ts","src/index.ts"],"sourcesContent":["/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp (min: number, v: number, max: number): number {\n  return v < min ? min : (v > max ? max : v)\n}\n\nexport function lerp (a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n","export type XinScalar = string | boolean | number | Function\n\nexport type XinArray = XinObject[] | XinScalar[]\n\nexport interface XinObject {\n  [key: string]: XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport const xinPath = Symbol('xin-path')\nexport const xinValue = Symbol('xin-value')\n\nexport interface XinProps {\n  [xinValue]: XinObject | XinObject | XinScalar\n  [xinPath]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]: XinProxyObject | XinProxyArray | XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (XinProxyObject[] | XinScalar[])\n\nexport type XinProxy = XinProps & (XinObject | XinArray)\n\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\n\nexport type XinTouchableType = string | XinProps\n\nexport type XinEventHandler<T=Event> = ((evt: T) => void) | string\n\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | Symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = Symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction = ((path: string) => void) | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType\n  [key: string]: any\n}\n\nexport interface XinBinding {\n  toDOM?: (element: HTMLElement, value: any, options?: XinObject) => void\n  fromDOM?: (element: HTMLElement, options?: XinObject) => any\n}\n\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  [key: string]: any\n}\n\nexport type ValueElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\nexport type SwissArmyElement = HTMLInputElement & HTMLCanvasElement\nexport type ElementPart = SwissArmyElement | DocumentFragment | ElementProps | string | number\nexport type HTMLElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type ContentPart = HTMLElement | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n","export const settings = {\n  debug: false,\n  perf: false\n}\n","import { PathTestFunction, ObserverCallbackFunction, XinTouchableType, xinPath } from './xin-types'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: Function\n\nconst getPath = (what: string | XinTouchableType): string => {\n  return typeof what === 'object' ? what[xinPath] : what\n}\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction) {\n    const callbackDescription = typeof callback === 'string' ? `\"${callback}\"` : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = t => typeof t === 'string' && t !== '' && (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter(listener => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(`Listener ${listener.description} threw \"${e as string}\" at \"${path}\"`)\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach(listener => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(`Listener ${listener.description} threw \"${e as string}\" handling \"${path}\"`)\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (what: XinTouchableType): void => {\n  const path = getPath(what)\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise(resolve => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (touchedPaths.find(touchedPath => path.startsWith(touchedPath)) == null) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (test: string | RegExp | PathTestFunction, callback: ObserverCallbackFunction): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error => new Error(messages.map(stringify).join(' '))\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string => new Date(parseInt('1000000000', 36) + Date.now()).valueOf().toString(36).slice(1)\nlet _seq = 0\nconst seq = (): string => (parseInt('10000', 36) + (++_seq)).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts (path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[item._auto_ as string + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[getByPath(item, idPath) as string + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined || idPathMaps.get(array)[idPath] === undefined) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex (array: XinObject[], idPath: string, idValue: any): number {\n  idValue = idValue as string + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (idx === undefined || getByPath(array[idx], idPath) as string + '' !== idValue) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey (obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath (array: any[], idPath: string, idValue: string, valueToInsert?: any): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (idPath !== '' && getByPath(valueToInsert, idPath) as string + '' === idValue + '') {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray (obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject (obj: any): void {\n  if ((obj == null) || obj.constructor !== Object) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath (obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath (orig: XinObject | XinArray, path: string, val: any): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while ((obj != null) && (parts.length > 0)) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(obj as any[], idPath, idValue, (parts.length > 0) ? _newObject_ : val)\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            (obj as XinArray)[idx] = val\n          } else {\n            (obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && (part.length > 0)) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if ((part.length > 0) || (parts.length > 0)) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey((obj as XinObject), key, (part.length > 0) ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            (obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath (orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","import { XinProxyObject, XinProxy, XinProxyTarget, XinObject, XinArray, XinValue, PathTestFunction, ObserverCallbackFunction, xinValue, xinPath } from './xin-types'\nimport { settings } from './settings'\nimport { Listener, touch, observe as _observe, unobserve, updates, observerShouldBeRemoved } from './path-listener'\nimport { getByPath, setByPath } from './by-path'\n\nexport { xinValue, xinPath }\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>,\n  ) => { proxy: P, revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(target: T, handler: ProxyHandler<P>): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = ['sort', 'splice', 'copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'unshift']\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\ninterface XinProxyHandler {\n  get: (target: XinObject | XinArray, prop: string) => XinValue\n  set: (target: XinObject | XinArray, prop: string, newValue: XinValue) => boolean\n}\n\nconst regHandler = (path = ''): XinProxyHandler => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get (target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === xinPath) {\n      return path\n    } else if (_prop === xinValue) {\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      // @ts-expect-error\n      return target[_prop]\n    }\n    let prop = _prop\n    const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n                        prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n                        prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n                        prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object' ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[subPath] : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) => `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath)) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error\n            const result = (Array.prototype[prop]).apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n          ? new Proxy<XinProxyTarget, XinProxy>(value, regHandler(extendPath(path, prop)))\n          : value\n    } else {\n      return target[prop]\n    }\n  },\n  set (_, prop: string, value: any) {\n    // eslint-disable-next-line\n    if (value != null && value[xinPath]) {\n      value = value[xinValue]\n    }\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    let existing = xin[fullPath] as XinProxy\n    // eslint-disable-next-line\n    if (existing != null && existing[xinValue] != null) {\n      existing = existing[xinValue] as XinProxy\n    }\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  }\n})\n\nconst observe = (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction): Listener => {\n  const func = typeof callback === 'function' ? callback : (xin)[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(`observe expects a function or path to a function, ${callback as string} is neither`)\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { xin, observe, xinValue } from './xin'\nimport { XinObject, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[xinValue] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string => ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nconst span = globalThis.document != null ? globalThis.document.createElement('span') : { style: { color: '' } }\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor (r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h = s !== 0\n      ? l === r\n        ? (g - b) / s\n        : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n      : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss (spec: string): Color {\n    span.style.color = spec\n    const converted = span.style.color\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl (h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`)\n  }\n\n  constructor (r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : a = 1\n  }\n\n  get inverse (): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance (): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb (): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba (): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`\n  }\n\n  get RGBA (): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB (): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl (): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl (): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`\n  }\n\n  get hsla (): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono (): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness (): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html (): string {\n    return this.a === 1 ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) : '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) + hex2(Math.floor(255 * this.a))\n  }\n\n  brighten (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  darken (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  saturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  desaturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  rotate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    h = (h + 360 + amount) % 360\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  opacity (alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch (): void {\n    const { r, g, b, a } = this\n    console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, 'background-color: #eee')\n  }\n\n  blend (otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","import { XinObject, XinArray } from './xin-types'\n\ntype Scalar = string | boolean | number | Function\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone (obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    // @ts-expect-error-error\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","import { XinBinding, XinObject } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport interface DataBinding {\n  path: string\n  binding: XinBinding\n  options?: XinObject\n}\n\nexport type XinEventHandler = ((event: Event) => void) | string\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> = new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element)\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { xin, touch, observe, xinPath, xinValue } from './xin'\nimport { getListItem, elementToBindings, elementToHandlers, DataBindings, BOUND_CLASS, BOUND_SELECTOR, EVENT_CLASS, EVENT_SELECTOR, XinEventBindings, XinEventHandler } from './metadata'\nimport { XinObject, XinTouchableType, XinBinding, XinProxy, XinBindingSpec } from './xin-types'\n\nconst { document } = globalThis\n\nobserve(() => true, (changedPath: string) => {\n  const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n  for (const element of boundElements) {\n    const dataBindings = elementToBindings.get(element) as DataBindings\n    for (const dataBinding of dataBindings) {\n      let { path, binding, options } = dataBinding\n      const { toDOM } = binding\n      if (toDOM != null) {\n        if (path.startsWith('^')) {\n          const dataSource = getListItem(element as HTMLElement)\n          if (dataSource != null && (dataSource as XinProxy)[xinPath] != null) {\n            path = dataBinding.path = `${(dataSource as XinProxy)[xinPath]}${path.substring(1)}`\n          } else {\n            console.error(`Cannot resolve relative binding ${path}`, element, 'is not part of a list')\n            throw new Error(`Cannot resolve relative binding ${path}`)\n          }\n        }\n        if (path.startsWith(changedPath)) {\n          toDOM(element as HTMLElement, xin[path], options)\n        }\n      }\n    }\n  }\n})\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            // @ts-expect-error-error\n            const existingActual = existing[xinPath] != null ? (existing as XinProxy)[xinValue] : existing\n            const valueActual = value[xinPath] != null ? value[xinValue] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport const bind = (element: HTMLElement | DocumentFragment, what: XinTouchableType | XinBindingSpec, binding: XinBinding, options?: XinObject): HTMLElement => {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (typeof what === 'object' && (what as XinProxy)[xinPath] === undefined && options === undefined) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[xinPath]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[xinPath]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({ path, binding, options })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get (target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    }\n  })\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    // eslint-disable-next-line\n    const handlers = eventBindings[event.type] || [] as XinEventHandler[]\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target = target.parentElement.closest(EVENT_SELECTOR)\n  }\n}\n\nexport const on = (element: HTMLElement, eventType: string, eventHandler: XinEventHandler): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  // eslint-disable-next-line\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (element instanceof HTMLSelectElement && element.hasAttribute('multiple')) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      // @ts-expect-error\n      element.checked = element.value === newValue\n      break\n    case 'checkbox':\n      // @ts-expect-error\n      element.checked = newValue\n      break\n    case 'date':\n      // @ts-expect-error\n      element.valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [...element.querySelectorAll('option')] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      // @ts-expect-error\n      element.value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio':\n    {\n      const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      // @ts-expect-error\n      return element.checked\n    case 'date':\n      // @ts-expect-error\n      return element.valueAsDate.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')]\n        .reduce((map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        }, {})\n    default:\n      return element.value\n  }\n}\n\n/* global ResizeObserver */\nconst { ResizeObserver } = globalThis\nexport const resizeObserver = ResizeObserver != null\n  ? new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const element = entry.target\n      dispatch(element, 'resize')\n    }\n  })\n  : {\n      observe () {},\n      unobserve () {}\n    }\n\nexport const appendContentToElement = (elt: Element | ShadowRoot | null | undefined, content: ContentType | null | undefined): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach(node => {\n        elt.append(node instanceof Node ? cloneWithBindings(node) : node)\n      })\n    } else if (content instanceof HTMLElement) {\n      elt.append(cloneWithBindings(content))\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin, xinValue, xinPath } from './xin'\nimport { cloneWithBindings, elementToItem, elementToBindings, BOUND_SELECTOR, DataBinding } from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ndeclare global {\n  interface HTMLElement {\n    [listBindingRef]?: ListBinding\n  }\n}\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number, width?: number }\n}\n\ninterface VirtualListSlice {\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings (element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor (boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error('ListBinding expects an element with exactly one child element')\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error('ListBinding expects a template with exactly one child element')\n      }\n      this.template = cloneWithBindings(template.content.children[0]) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice (): VirtualListSlice {\n    const { virtual } = this.options\n    let firstItem = 0\n    let lastItem = this._array.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(this._array.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = totalRows * virtual.height - height - topBuffer\n    }\n\n    return {\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer\n    }\n  }\n\n  update (array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance } = this.options\n    // @ts-expect-error\n    const arrayPath: string = array[xinPath]\n\n    const slice = this.visibleSlice()\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = array.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = array[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(item[xinValue])\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(item[xinValue], element)\n          elementToItem.set(element, item[xinValue])\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(element, insertionPoint.nextElementSibling)\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\nexport const getListBinding = (boundElement: HTMLElement, options?: ListBindingOptions): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding == null) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM (element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM (element: HTMLElement) {\n      return getValue(element as ValueElement)\n    }\n  },\n\n  text: {\n    toDOM (element: HTMLElement, value: any) {\n      element.textContent = value\n    }\n  },\n\n  enabled: {\n    toDOM (element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      (element as HTMLInputElement).disabled = !value\n    }\n  },\n\n  disabled: {\n    toDOM (element: HTMLElement, value: any) {\n      (element as HTMLInputElement).disabled = Boolean(value)\n    }\n  },\n\n  style: {\n    toDOM (element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    }\n  },\n\n  list: {\n    toDOM (element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    }\n  }\n}\n","export function camelToKabob (s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel (s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport { ElementPart, ElementProps, ElementCreator, SwissArmyElement } from '../src/xin-types'\nimport { camelToKabob } from './string-case'\n\nconst templates: { [key: string]: HTMLElement } = {}\n\nexport const makeComponent = (...componentParts: ElementPart[]) => {\n  return (...args: ElementPart[]) => elements.div(...args, ...componentParts)\n}\n\nexport const create = (tagType: string, ...contents: ElementPart[]): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    templates[tagType] = globalThis.document.createElement(tagType)\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (item instanceof Element || item instanceof DocumentFragment || typeof item === 'string' || typeof item === 'number') {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // @ts-expect-error\n            elt.style[prop] = value[prop]\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`)\n      }\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      // @ts-expect-error-error\n      } else if (elt[attr] !== undefined) {\n        // @ts-expect-error-error\n        elt[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (...contents: ElementPart[]) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\nconst _elements: { [key: string | symbol]: ElementCreator<any> } = { fragment }\n\nexport const elements = new Proxy(_elements, {\n  get (target, tagName: string) {\n    tagName = tagName.replace(/[A-Z]/g, c => `-${c.toLocaleLowerCase()}`)\n    if (tagName.match(/^\\w+(-\\w+)*$/) == null) {\n      throw new Error(`${tagName} does not appear to be a valid element tagName`)\n    } else if (target[tagName] === undefined) {\n      target[tagName] = (...contents: ElementPart[]) => create(tagName, ...contents)\n    }\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n})\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\n\nexport interface StyleRule {\n  [key: string]: string | number\n}\n\nexport interface StyleMap {\n  [key: string]: StyleRule\n}\n\nexport interface StyleSheet {\n  [key: string]: StyleRule | StyleMap | string\n}\n\nexport function StyleNode (styleSheet: StyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet)) as HTMLStyleElement\n}\n\nconst dimensionalProps = ['left', 'right', 'top', 'bottom', 'gap']\nconst isDimensional = (cssProp: string): boolean => {\n  return (cssProp.match(/(width|height|size|margin|padding|radius|spacing|top|left|right|bottom)/) != null) || dimensionalProps.includes(cssProp)\n}\n\nconst renderStatement = (key: string, value: string | number | StyleRule, indentation = ''): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value).map(innerKey => renderStatement(innerKey, value[innerKey], `${indentation}  `)).join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else if (typeof value === 'number' && isDimensional(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n  return `${indentation}  ${cssProp}: ${value};`\n}\n\nexport const css = (obj: StyleSheet | StyleMap, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map(prop => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: StyleRule): StyleRule => {\n  const rule: StyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] = typeof value === 'number' && isDimensional(kabobKey) ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: StyleRule): StyleRule => {\n  const rule: StyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (typeof value === 'string' && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>({}, {\n  get (target, prop: string) {\n    if (target[prop] == null) {\n      prop = prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)\n      let [,varName,, isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/) as string[]\n      varName = `--${varName}`\n      if (scaleText != null) {\n        const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100\n        switch (method) {\n          case 'b': // brighten\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).brighten(scale).rgba : Color.fromCss(baseColor).darken(-scale).rgba\n            }\n            break\n          case 's': // saturate\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).saturate(scale).rgba : Color.fromCss(baseColor).desaturate(-scale).rgba\n            }\n            break\n          case 'h': // hue\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n              console.log(Color.fromCss(baseColor).hsla, Color.fromCss(baseColor).rotate(scale).hsla)\n            }\n            break\n          case 'o': // alpha\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n            }\n            break\n          case '':\n            target[prop] = `calc(var(${varName}) * ${scale})`\n            break\n          default:\n            console.error(method)\n            throw new Error(`Unrecognized method ${method} for css variable ${varName}`)\n        }\n      } else {\n        target[prop] = `var(${varName})`\n      }\n    }\n    return target[prop]\n  }\n})\n","import { css, StyleSheet } from './css'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nexport abstract class Component extends HTMLElement {\n  static elements = elements\n  private static _elementCreator?: ElementCreator\n  styleNode?: HTMLStyleElement\n  content: ContentType | null = elements.slot()\n  value?: any\n  [key: string]: any\n\n  static StyleNode (styleSpec: StyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec)) as HTMLStyleElement\n  }\n\n  static elementCreator (options?: ElementDefinitionOptions & { tag?: string }): ElementCreator {\n    if (this._elementCreator == null) {\n      let desiredTag = options != null ? options.tag : null\n      if (desiredTag == null) {\n        desiredTag = camelToKabob(this.name)\n        if (desiredTag.startsWith('-')) {\n          desiredTag = desiredTag.substring(1)\n        }\n        if (!desiredTag.includes('-')) {\n          desiredTag += '-elt'\n        }\n      }\n      let attempts = 0\n      while (this._elementCreator == null) {\n        attempts += 1\n        const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`\n        try {\n          window.customElements.define(tag, this as unknown as CustomElementConstructor, options)\n          this._elementCreator = elements[tag]\n        } catch (e) {\n          throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`)\n        }\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes (...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        // eslint-disable-next-line\n        triggerRender = !!(mutation.attributeName && attributeNames.includes(kabobToCamel(mutation.attributeName)))\n      })\n      if (triggerRender && this.queueRender !== undefined) this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach(attributeName => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get () {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            // eslint-disable-next-line\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            // @ts-expect-error\n            } else if (attributeValues[attributeName] !== undefined) {\n            // @ts-expect-error\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set (value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              // eslint-disable-next-line\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (typeof value === 'object' || `${value as string}` !== `${this[attributeName] as string}`) {\n              if (value === null || value === undefined || typeof value === 'object') {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              // @ts-expect-error\n              attributeValues[attributeName] = value\n            }\n          }\n        }\n      })\n    })\n  }\n\n  private initValue (): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) {\n      return\n    }\n    let value = this.hasAttribute('value') ? this.getAttribute('value') : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get () {\n        return value\n      },\n      set (newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      }\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs (): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy({}, {\n        get (target: { [key: string]: SwissArmyElement }, ref: string) {\n          if (target[ref] === undefined) {\n            let element = root.querySelector(`[data-ref=\"${ref}\"]`)\n            if (element == null) {\n              element = root.querySelector(ref)\n            }\n            if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`)\n            element.removeAttribute('data-ref')\n            target[ref] = element as SwissArmyElement\n          }\n          return target[ref]\n        }\n      })\n    }\n    return this._refs\n  }\n\n  constructor () {\n    super()\n    this.initAttributes('hidden')\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback (): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n  }\n\n  disconnectedCallback (): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender (triggerChangeEvent = false): void {\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate (): void {\n    if (!this._hydrated) {\n      this.initValue()\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, this.content)\n      } else {\n        appendContentToElement(this as HTMLElement, this.content)\n      }\n      this._hydrated = true\n    }\n  }\n\n  render (): void {\n    this.hydrate()\n  }\n}\n","// workaround for https://github.com/parcel-bundler/parcel/issues/5911\nimport * as _MoreMath from './more-math'\n\nexport { xin, observe, unobserve, touch, observerShouldBeRemoved } from './xin'\nexport { hotReload } from './hot-reload'\nexport { Component } from './component'\nexport { elements, makeComponent } from './elements'\nexport { settings } from './settings'\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport { getListItem } from './metadata'\nexport { vars, initVars, css, darkMode } from './css'\nexport { Color } from './color'\nexport const MoreMath = _MoreMath\n\nexport * from './xin-types'\n"],"names":["$35ded60743a49eea$export$ba6bc6c220358ed9","Math","PI","$35ded60743a49eea$export$1518e1a62333c8a4","$35ded60743a49eea$export$7d15b64cf5a3a4c4","min","v","max","$35ded60743a49eea$export$3a89f8d6f6bf6c9f","a","b","t","$a376b834c897bffd$export$40700dafb97c3799","Symbol","$a376b834c897bffd$export$5dcba2d45033d435","$431d87cffae1b706$export$a5a6e0b888b2c992","debug","perf","$de0f84e31db1d985$export$253d09664e30b967","$de0f84e31db1d985$export$58bed631278dbc67","$de0f84e31db1d985$var$touchedPaths","$de0f84e31db1d985$var$updatePromise","$de0f84e31db1d985$var$resolveUpdate","$de0f84e31db1d985$var$updateTriggered","$de0f84e31db1d985$export$c92b1d5f43586026","constructor","test","callback","callbackDescription","name","testDescription","this","startsWith","RegExp","bind","toString","Function","Error","description","push","$de0f84e31db1d985$var$update","console","time","paths","path","filter","listener","heard","e","$de0f84e31db1d985$export$23a2283368c55ea2","forEach","outcome","error","splice","timeEnd","$de0f84e31db1d985$export$d0b7ea69ab6056df","what","$de0f84e31db1d985$var$getPath","Promise","resolve","setTimeout","find","touchedPath","$de0f84e31db1d985$export$d1203567a167490e","index","indexOf","$9c8ee0b1e1b7d62b$var$stringify","x","JSON","stringify","_","$9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7","messages","map","join","$90757103be394558$var$_seq","$90757103be394558$var$id","Date","parseInt","now","valueOf","slice","$90757103be394558$var$_delete_","$90757103be394558$var$_newObject_","$90757103be394558$export$f5d2dd4cfd729958","Array","isArray","parts","length","search","split","part","$90757103be394558$var$idPathMaps","WeakMap","$90757103be394558$var$buildIdPathValueMap","array","idPath","undefined","get","set","item","idx","_auto_","$90757103be394558$export$44b5bed83342a92f","$90757103be394558$var$keyToIndex","idValue","$90757103be394558$var$getIdPathMap","$90757103be394558$var$byKey","obj","key","valueToInsert","$90757103be394558$var$byIdPath","delete","$90757103be394558$var$expectArray","$90757103be394558$var$expectObject","Object","i","iMax","j","jMax","found","includes","tail","$90757103be394558$export$f65a19d15516795e","orig","val","shift","equalsOffset","prototype","hasOwnProperty","call","$5d68f8b093886143$var$ARRAY_MUTATIONS","$5d68f8b093886143$var$registry","$5d68f8b093886143$var$validPath","$5d68f8b093886143$var$extendPath","prop","match","$5d68f8b093886143$var$regHandler","target","_prop","compoundProp","basePath","subPath","currentPath","value","Proxy","endsWith","substring","needle","candidate","items","result","apply","fullPath","$5d68f8b093886143$export$a678af82bf766611","existing","$5d68f8b093886143$export$966034e6c6823eb0","$5d68f8b093886143$export$d1203567a167490e","func","$4a3ba1b45110c477$export$61fc7d43ac8f84b0","origFn","minInterval","debounceId","args","clearTimeout","$4a3ba1b45110c477$export$de363e709c412c8a","previousCall","inFlight","async","$b71156193afa7077$export$93b87f7746612069","savedState","localStorage","getItem","state","parse","keys","assign","saveState","setItem","log","$ebe12b957d7ffb42$var$hex2","n","round","Number","$ebe12b957d7ffb42$var$span","globalThis","document","createElement","style","color","$ebe12b957d7ffb42$var$HslColor","r","g","l","s","h","$ebe12b957d7ffb42$export$892596cec99bc70e","static","spec","converted","fromCss","toFixed","inverse","inverseLuminance","_hsl","fromHsl","rgb","rgba","RGBA","ARGB","_hslCached","hsl","hsla","mono","brightness","html","floor","brighten","amount","darken","saturate","desaturate","rotate","opacity","alpha","swatch","blend","otherColor","$324ad9265fd7ec5b$export$b7d58db314e0ac27","clone","$fc871d27afcbf39a$export$c6592bbc1eebb717","$fc871d27afcbf39a$export$4c0223f67078aeac","$fc871d27afcbf39a$export$6a7099543a9795c7","$fc871d27afcbf39a$export$21d9322c3477441b","$fc871d27afcbf39a$export$fe712848e6e66613","$fc871d27afcbf39a$export$1f922de8d0ecbb7e","$fc871d27afcbf39a$export$fa8cc6a36b1ccd7f","element","cloned","cloneNode","HTMLElement","dataBindings","eventHandlers","node","childNodes","DocumentFragment","appendChild","$fc871d27afcbf39a$export$86caed35dd837d06","$fc871d27afcbf39a$export$4c309843c07ce679","body","parentElement","$d165020245160cdf$var$document","changedPath","boundElements","querySelectorAll","dataBinding","binding","options","toDOM","dataSource","$d165020245160cdf$var$handleChange","event","closest","fromDOM","existingActual","valueActual","addEventListener","$d165020245160cdf$export$2385a24977818dd0","classList","add","$d165020245160cdf$var$handledEventTypes","Set","$d165020245160cdf$var$handleBoundEvent","propagationStopped","wrappedEvent","stopPropagation","handlers","type","handler","$d165020245160cdf$export$af631764ddc44097","eventType","eventHandler","eventBindings","has","$4f9ba97dad88433d$export$635e15bbd66f01ea","Event","dispatchEvent","$4f9ba97dad88433d$var$valueType","HTMLInputElement","HTMLSelectElement","hasAttribute","$4f9ba97dad88433d$export$80746c6bc6142fc8","newValue","checked","valueAsDate","option","selected","$4f9ba97dad88433d$export$bf7199a9ebcb84a9","radio","querySelector","toISOString","reduce","ResizeObserver","$4f9ba97dad88433d$var$ResizeObserver","$4f9ba97dad88433d$export$b13421f1ae71d316","entries","entry","observe","unobserve","$4f9ba97dad88433d$export$6bb13967611cdb1","elt","content","textContent","append","Node","$01a9fd6c1733697a$var$listBindingRef","$01a9fd6c1733697a$var$updateRelativeBindings","matches","unshift","boundElement","bindings","$01a9fd6c1733697a$var$ListBinding","_array","itemToElement","children","HTMLTemplateElement","template","remove","listTop","listBottom","virtual","_update","update","visibleSlice","firstItem","lastItem","topBuffer","bottomBuffer","width","offsetWidth","height","offsetHeight","visibleColumns","visibleRows","ceil","totalRows","visibleItems","topRow","scrollTop","isSlice","initInstance","updateInstance","arrayPath","previousSlice","_previousSlice","removed","moved","created","proxy","String","elements","insertBefore","insertionPoint","previousElementSibling","nextElementSibling","$01a9fd6c1733697a$export$b0eb386be3b9fed8","listBinding","$3a4453529c7602e5$export$97a1a3e6f39778d2","text","enabled","disabled","Boolean","setAttribute","list","$8287b4a0c42d6d79$export$87ae551bf60f4bb","replace","c","toLocaleLowerCase","$1fadd05c13944ca9$var$templates","$1fadd05c13944ca9$export$3bc26eec1cc2439f","componentParts","$1fadd05c13944ca9$export$7a5d735b2ab6389d","div","contents","frag","createDocumentFragment","tagName","tagType","elementProps","Element","setProperty","toLowerCase","bindingType","attr","className","removeAttribute","$1fadd05c13944ca9$export$185802fd694ee1f5","$4d116130f980647c$var$dimensionalProps","$4d116130f980647c$var$isDimensional","cssProp","$4d116130f980647c$var$renderStatement","indentation","renderedRule","innerKey","$4d116130f980647c$export$dbf350e5966cf602","selector","rule","$4d116130f980647c$export$90d0ea046136e3ed","kabobKey","$4d116130f980647c$export$808aaf1b460dc9af","$4d116130f980647c$export$3cb96c9f6c8d16a4","varName","isNegative","scaleText","method","scale","baseColor","getComputedStyle","getPropertyValue","$065ec34f90b90178$export$16fa2f45be04daa8","slot","styleSpec","_elementCreator","desiredTag","tag","attempts","window","customElements","define","initAttributes","attributeNames","attributes","attributeValues","MutationObserver","mutationsList","triggerRender","mutation","attributeName","toLocaleUpperCase","queueRender","attributeKabob","defineProperty","enumerable","parseFloat","getAttribute","initValue","valueDescriptor","getOwnPropertyDescriptor","refs","root","shadowRoot","_refs","ref","super","_value","defaultValue","connectedCallback","hydrate","role","onResize","_onResize","disconnectedCallback","_changeQueued","_renderQueued","triggerChangeEvent","requestAnimationFrame","render","_hydrated","styleNode","shadow","attachShadow","mode","$9f9b9944cd5d5def$export$5e0dd9fd5d74e0c5","$35ded60743a49eea$exports"],"version":3,"file":"index.js.map"}