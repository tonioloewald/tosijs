{"mappings":"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","sources":["<anon>","src/index.ts","src/bind.ts","src/xin.ts","src/settings.ts","src/path-listener.ts","src/metadata.ts","src/deep-clone.ts","src/by-path.ts","src/make-error.ts","src/bindings.ts","src/list-binding.ts","src/dom.ts","src/throttle.ts","src/css.ts","src/color.ts","src/more-math.ts","src/elements.ts","src/string-case.ts","src/component.ts","src/hot-reload.ts","src/make-component.ts","src/test-component.ts","src/xin-types.ts","src/xin-proxy.ts"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/ const $431d87cffae1b706$export$a5a6e0b888b2c992 = {\n    debug: false,\n    perf: false\n};\n\n\nfunction $324ad9265fd7ec5b$export$b7d58db314e0ac27(obj) {\n    if (obj == null || typeof obj !== \"object\") return obj;\n    if (Array.isArray(obj)) return obj.map($324ad9265fd7ec5b$export$b7d58db314e0ac27);\n    const clone = {};\n    for(const key in obj){\n        const val = obj[key];\n        if (obj != null && typeof obj === \"object\") clone[key] = $324ad9265fd7ec5b$export$b7d58db314e0ac27(val);\n        else clone[key] = val;\n    }\n    return clone;\n}\n\n\nconst $fc871d27afcbf39a$export$c6592bbc1eebb717 = \"-xin-data\";\nconst $fc871d27afcbf39a$export$4c0223f67078aeac = `.${$fc871d27afcbf39a$export$c6592bbc1eebb717}`;\nconst $fc871d27afcbf39a$export$6a7099543a9795c7 = \"-xin-event\";\nconst $fc871d27afcbf39a$export$21d9322c3477441b = `.${$fc871d27afcbf39a$export$6a7099543a9795c7}`;\nconst $fc871d27afcbf39a$export$a3622eb3b5dd592a = Symbol(\"xin-path\");\nconst $fc871d27afcbf39a$export$bdd0d039ad781534 = Symbol(\"xin-value\");\nconst $fc871d27afcbf39a$export$40700dafb97c3799 = (x)=>{\n    return x[$fc871d27afcbf39a$export$a3622eb3b5dd592a];\n};\nfunction $fc871d27afcbf39a$export$5dcba2d45033d435(x) {\n    return typeof x === \"object\" && x !== null ? x[$fc871d27afcbf39a$export$bdd0d039ad781534] || x : x;\n}\nconst $fc871d27afcbf39a$export$fe712848e6e66613 = new WeakMap();\nconst $fc871d27afcbf39a$export$1f922de8d0ecbb7e = new WeakMap();\nconst $fc871d27afcbf39a$export$4cac8128ba61a55f = (element)=>{\n    return {\n        eventBindings: $fc871d27afcbf39a$export$fe712848e6e66613.get(element),\n        dataBindings: $fc871d27afcbf39a$export$1f922de8d0ecbb7e.get(element)\n    };\n};\nconst $fc871d27afcbf39a$export$fa8cc6a36b1ccd7f = (element)=>{\n    const cloned = element.cloneNode();\n    if (cloned instanceof Element) {\n        const dataBindings = $fc871d27afcbf39a$export$1f922de8d0ecbb7e.get(element);\n        const eventHandlers = $fc871d27afcbf39a$export$fe712848e6e66613.get(element);\n        if (dataBindings != null) // @ts-expect-error-error\n        $fc871d27afcbf39a$export$1f922de8d0ecbb7e.set(cloned, (0, $324ad9265fd7ec5b$export$b7d58db314e0ac27)(dataBindings));\n        if (eventHandlers != null) // @ts-expect-error-error\n        $fc871d27afcbf39a$export$fe712848e6e66613.set(cloned, (0, $324ad9265fd7ec5b$export$b7d58db314e0ac27)(eventHandlers));\n    }\n    for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes)if (node instanceof Element || node instanceof DocumentFragment) cloned.appendChild($fc871d27afcbf39a$export$fa8cc6a36b1ccd7f(node));\n    else cloned.appendChild(node.cloneNode());\n    return cloned;\n};\nconst $fc871d27afcbf39a$export$86caed35dd837d06 = new WeakMap();\nconst $fc871d27afcbf39a$export$4c309843c07ce679 = (element)=>{\n    const html = document.body.parentElement;\n    while(element.parentElement != null && element.parentElement !== html){\n        const item = $fc871d27afcbf39a$export$86caed35dd837d06.get(element);\n        if (item != null) return item;\n        element = element.parentElement;\n    }\n    return false;\n};\n\n\n\nconst $de0f84e31db1d985$export$253d09664e30b967 = Symbol(\"observer should be removed\");\nconst $de0f84e31db1d985$export$58bed631278dbc67 = [] // { path_string_or_test, callback }\n;\nconst $de0f84e31db1d985$var$touchedPaths = [];\nlet $de0f84e31db1d985$var$updateTriggered = false;\nlet $de0f84e31db1d985$var$updatePromise;\nlet $de0f84e31db1d985$var$resolveUpdate;\nclass $de0f84e31db1d985$export$c92b1d5f43586026 {\n    constructor(test, callback){\n        const callbackDescription = typeof callback === \"string\" ? `\"${callback}\"` : `function ${callback.name}`;\n        let testDescription;\n        if (typeof test === \"string\") {\n            this.test = (t)=>typeof t === \"string\" && t !== \"\" && (test.startsWith(t) || t.startsWith(test));\n            testDescription = `test = \"${test}\"`;\n        } else if (test instanceof RegExp) {\n            this.test = test.test.bind(test);\n            testDescription = `test = \"${test.toString()}\"`;\n        } else if (test instanceof Function) {\n            this.test = test;\n            testDescription = `test = function ${test.name}`;\n        } else throw new Error(\"expect listener test to be a string, RegExp, or test function\");\n        this.description = `${testDescription}, ${callbackDescription}`;\n        if (typeof callback === \"function\") this.callback = callback;\n        else throw new Error(\"expect callback to be a path or function\");\n        $de0f84e31db1d985$export$58bed631278dbc67.push(this);\n    }\n}\nconst $de0f84e31db1d985$export$1c2919332513559b = async ()=>{\n    if ($de0f84e31db1d985$var$updatePromise === undefined) return;\n    await $de0f84e31db1d985$var$updatePromise;\n};\nconst $de0f84e31db1d985$var$update = ()=>{\n    if ((0, $431d87cffae1b706$export$a5a6e0b888b2c992).perf) console.time(\"xin async update\");\n    const paths = [\n        ...$de0f84e31db1d985$var$touchedPaths\n    ];\n    for (const path of paths)$de0f84e31db1d985$export$58bed631278dbc67.filter((listener)=>{\n        let heard;\n        try {\n            heard = listener.test(path);\n        } catch (e) {\n            throw new Error(`Listener ${listener.description} threw \"${e}\" at \"${path}\"`);\n        }\n        if (heard === $de0f84e31db1d985$export$253d09664e30b967) {\n            $de0f84e31db1d985$export$23a2283368c55ea2(listener);\n            return false;\n        }\n        return heard;\n    }).forEach((listener)=>{\n        let outcome;\n        try {\n            outcome = listener.callback(path);\n        } catch (e) {\n            console.error(`Listener ${listener.description} threw \"${e}\" handling \"${path}\"`);\n        }\n        if (outcome === $de0f84e31db1d985$export$253d09664e30b967) $de0f84e31db1d985$export$23a2283368c55ea2(listener);\n    });\n    $de0f84e31db1d985$var$touchedPaths.splice(0);\n    $de0f84e31db1d985$var$updateTriggered = false;\n    if (typeof $de0f84e31db1d985$var$resolveUpdate === \"function\") $de0f84e31db1d985$var$resolveUpdate();\n    if ((0, $431d87cffae1b706$export$a5a6e0b888b2c992).perf) console.timeEnd(\"xin async update\");\n};\nconst $de0f84e31db1d985$export$d0b7ea69ab6056df = (touchable)=>{\n    const path = typeof touchable === \"string\" ? touchable : (0, $fc871d27afcbf39a$export$40700dafb97c3799)(touchable);\n    if (path === undefined) {\n        console.error(\"touch was called on an invalid target\", touchable);\n        throw new Error(\"touch was called on an invalid target\");\n    }\n    if ($de0f84e31db1d985$var$updateTriggered === false) {\n        $de0f84e31db1d985$var$updatePromise = new Promise((resolve)=>{\n            $de0f84e31db1d985$var$resolveUpdate = resolve;\n        });\n        $de0f84e31db1d985$var$updateTriggered = setTimeout($de0f84e31db1d985$var$update);\n    }\n    if ($de0f84e31db1d985$var$touchedPaths.find((touchedPath)=>path.startsWith(touchedPath)) == null) $de0f84e31db1d985$var$touchedPaths.push(path);\n};\nconst $de0f84e31db1d985$export$d1203567a167490e = (test, callback)=>{\n    return new $de0f84e31db1d985$export$c92b1d5f43586026(test, callback);\n};\nconst $de0f84e31db1d985$export$23a2283368c55ea2 = (listener)=>{\n    const index = $de0f84e31db1d985$export$58bed631278dbc67.indexOf(listener);\n    if (index > -1) $de0f84e31db1d985$export$58bed631278dbc67.splice(index, 1);\n    else throw new Error(\"unobserve failed, listener not found\");\n};\n\n\n// unique tokens passed to set by path to delete or create properties\nconst $9c8ee0b1e1b7d62b$var$stringify = (x)=>{\n    try {\n        return JSON.stringify(x);\n    } catch (_) {\n        return \"{has circular references}\";\n    }\n};\nconst $9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7 = (...messages)=>new Error(messages.map($9c8ee0b1e1b7d62b$var$stringify).join(\" \"));\n\n\nconst $90757103be394558$var$now36 = ()=>new Date(parseInt(\"1000000000\", 36) + Date.now()).valueOf().toString(36).slice(1);\nlet $90757103be394558$var$_seq = 0;\nconst $90757103be394558$var$seq = ()=>(parseInt(\"10000\", 36) + ++$90757103be394558$var$_seq).toString(36).slice(-5);\nconst $90757103be394558$var$id = ()=>$90757103be394558$var$now36() + $90757103be394558$var$seq();\nconst $90757103be394558$var$_delete_ = {};\nconst $90757103be394558$var$_newObject_ = {};\nfunction $90757103be394558$export$f5d2dd4cfd729958(path) {\n    if (path === \"\") return [];\n    if (Array.isArray(path)) return path;\n    else {\n        const parts = [];\n        while(path.length > 0){\n            let index = path.search(/\\[[^\\]]+\\]/);\n            if (index === -1) {\n                parts.push(path.split(\".\"));\n                break;\n            } else {\n                const part = path.slice(0, index);\n                path = path.slice(index);\n                if (part !== \"\") parts.push(part.split(\".\"));\n                index = path.indexOf(\"]\") + 1;\n                parts.push(path.slice(1, index - 1));\n                // handle paths dereferencing array element like foo[0].id\n                if (path.slice(index, index + 1) === \".\") index += 1;\n                path = path.slice(index);\n            }\n        }\n        return parts;\n    }\n}\nconst $90757103be394558$var$idPathMaps = new WeakMap();\nfunction $90757103be394558$var$buildIdPathValueMap(array, idPath) {\n    if ($90757103be394558$var$idPathMaps.get(array) === undefined) $90757103be394558$var$idPathMaps.set(array, {});\n    if ($90757103be394558$var$idPathMaps.get(array)[idPath] === undefined) $90757103be394558$var$idPathMaps.get(array)[idPath] = {};\n    const map = $90757103be394558$var$idPathMaps.get(array)[idPath];\n    if (idPath === \"_auto_\") array.forEach((item, idx)=>{\n        if (item._auto_ === undefined) item._auto_ = $90757103be394558$var$id();\n        map[item._auto_ + \"\"] = idx;\n    });\n    else array.forEach((item, idx)=>{\n        map[$90757103be394558$export$44b5bed83342a92f(item, idPath) + \"\"] = idx;\n    });\n    return map;\n}\nfunction $90757103be394558$var$getIdPathMap(array, idPath) {\n    if ($90757103be394558$var$idPathMaps.get(array) === undefined || $90757103be394558$var$idPathMaps.get(array)[idPath] === undefined) return $90757103be394558$var$buildIdPathValueMap(array, idPath);\n    else return $90757103be394558$var$idPathMaps.get(array)[idPath];\n}\nfunction $90757103be394558$var$keyToIndex(array, idPath, idValue) {\n    idValue = idValue + \"\";\n    let idx = $90757103be394558$var$getIdPathMap(array, idPath)[idValue];\n    if (idx === undefined || $90757103be394558$export$44b5bed83342a92f(array[idx], idPath) + \"\" !== idValue) idx = $90757103be394558$var$buildIdPathValueMap(array, idPath)[idValue];\n    return idx;\n}\nfunction $90757103be394558$var$byKey(obj, key, valueToInsert) {\n    if (obj[key] === undefined && valueToInsert !== undefined) obj[key] = valueToInsert;\n    return obj[key];\n}\nfunction $90757103be394558$var$byIdPath(array, idPath, idValue, valueToInsert) {\n    let idx = idPath !== \"\" ? $90757103be394558$var$keyToIndex(array, idPath, idValue) : idValue;\n    if (valueToInsert === $90757103be394558$var$_delete_) {\n        array.splice(idx, 1);\n        $90757103be394558$var$idPathMaps.delete(array);\n        return Symbol(\"deleted\");\n    } else if (valueToInsert === $90757103be394558$var$_newObject_) {\n        if (idPath === \"\" && array[idx] === undefined) array[idx] = {};\n    } else if (valueToInsert !== undefined) {\n        if (idx !== undefined) array[idx] = valueToInsert;\n        else if (idPath !== \"\" && $90757103be394558$export$44b5bed83342a92f(valueToInsert, idPath) + \"\" === idValue + \"\") {\n            array.push(valueToInsert);\n            idx = array.length - 1;\n        } else throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`);\n    }\n    return array[idx];\n}\nfunction $90757103be394558$var$expectArray(obj) {\n    if (!Array.isArray(obj)) throw (0, $9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected array, found\", obj);\n}\nfunction $90757103be394558$var$expectObject(obj) {\n    if (obj == null || !(obj instanceof Object)) throw (0, $9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7)(\"setByPath failed: expected Object, found\", obj);\n}\nfunction $90757103be394558$export$44b5bed83342a92f(obj, path) {\n    const parts = $90757103be394558$export$f5d2dd4cfd729958(path);\n    let found = obj;\n    let i, iMax, j, jMax;\n    for(i = 0, iMax = parts.length; found !== undefined && i < iMax; i++){\n        const part = parts[i];\n        if (Array.isArray(part)) for(j = 0, jMax = part.length; found !== undefined && j < jMax; j++){\n            const key = part[j];\n            found = found[key];\n        }\n        else {\n            if (found.length === 0) {\n                // @ts-expect-error-error\n                found = found[part.slice(1)];\n                if (part[0] !== \"=\") return undefined;\n            } else if (part.includes(\"=\")) {\n                const [idPath, ...tail] = part.split(\"=\");\n                found = $90757103be394558$var$byIdPath(found, idPath, tail.join(\"=\"));\n            } else {\n                j = parseInt(part, 10);\n                found = found[j];\n            }\n        }\n    }\n    return found;\n}\nfunction $90757103be394558$export$f65a19d15516795e(orig, path, val) {\n    let obj = orig;\n    const parts = $90757103be394558$export$f5d2dd4cfd729958(path);\n    while(obj != null && parts.length > 0){\n        const part = parts.shift();\n        if (typeof part === \"string\") {\n            const equalsOffset = part.indexOf(\"=\");\n            if (equalsOffset > -1) {\n                if (equalsOffset === 0) $90757103be394558$var$expectObject(obj);\n                else $90757103be394558$var$expectArray(obj);\n                const idPath = part.slice(0, equalsOffset);\n                const idValue = part.slice(equalsOffset + 1);\n                obj = $90757103be394558$var$byIdPath(obj, idPath, idValue, parts.length > 0 ? $90757103be394558$var$_newObject_ : val);\n                if (parts.length === 0) return true;\n            } else {\n                $90757103be394558$var$expectArray(obj);\n                const idx = parseInt(part, 10);\n                if (parts.length > 0) obj = obj[idx];\n                else {\n                    if (val !== $90757103be394558$var$_delete_) {\n                        if (obj[idx] === val) return false;\n                        obj[idx] = val;\n                    } else obj.splice(idx, 1);\n                    return true;\n                }\n            }\n        } else if (Array.isArray(part) && part.length > 0) {\n            $90757103be394558$var$expectObject(obj);\n            while(part.length > 0){\n                const key = part.shift();\n                if (part.length > 0 || parts.length > 0) // if we're at the end of part.length then we need to insert an array\n                obj = $90757103be394558$var$byKey(obj, key, part.length > 0 ? {} : []);\n                else {\n                    if (val !== $90757103be394558$var$_delete_) {\n                        if (obj[key] === val) return false;\n                        obj[key] = val;\n                    } else {\n                        if (!Object.prototype.hasOwnProperty.call(obj, key)) return false;\n                        // eslint-disable-next-line\n                        delete obj[key];\n                    }\n                    return true;\n                }\n            }\n        } else throw new Error(`setByPath failed, bad path ${path}`);\n    }\n    // eslint-disable-next-line\n    throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`);\n}\nfunction $90757103be394558$export$102e532907108dad(orig, path) {\n    if ($90757103be394558$export$44b5bed83342a92f(orig, path) !== null) $90757103be394558$export$f65a19d15516795e(orig, path, $90757103be394558$var$_delete_);\n}\n\n\n\n// list of Array functions that change the array\nconst $5d68f8b093886143$var$ARRAY_MUTATIONS = [\n    \"sort\",\n    \"splice\",\n    \"copyWithin\",\n    \"fill\",\n    \"pop\",\n    \"push\",\n    \"reverse\",\n    \"shift\",\n    \"unshift\"\n];\nconst $5d68f8b093886143$var$registry = {};\nconst $5d68f8b093886143$var$debugPaths = true;\nconst $5d68f8b093886143$var$validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/;\nconst $5d68f8b093886143$export$a678af82bf766611 = (path)=>$5d68f8b093886143$var$validPath.test(path);\nconst $5d68f8b093886143$var$extendPath = (path = \"\", prop = \"\")=>{\n    if (path === \"\") return prop;\n    else {\n        if (prop.match(/^\\d+$/) !== null || prop.includes(\"=\")) return `${path}[${prop}]`;\n        else return `${path}.${prop}`;\n    }\n};\nconst $5d68f8b093886143$var$boxes = {\n    string (s) {\n        return new String(s);\n    },\n    boolean (b) {\n        return new Boolean(b);\n    },\n    bigint (b) {\n        return b;\n    },\n    symbol (s) {\n        return s;\n    },\n    number (n) {\n        return new Number(n);\n    }\n};\nfunction $5d68f8b093886143$var$box(x, path) {\n    const t = typeof x;\n    if (x === undefined || t === \"object\" || t === \"function\") return x;\n    else return new Proxy($5d68f8b093886143$var$boxes[t](x), $5d68f8b093886143$var$regHandler(path, true));\n}\nconst $5d68f8b093886143$var$regHandler = (path, boxScalars)=>({\n        // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n        // as you'd expect\n        get (target, _prop) {\n            if (_prop === (0, $fc871d27afcbf39a$export$a3622eb3b5dd592a)) return path;\n            else if (_prop === (0, $fc871d27afcbf39a$export$bdd0d039ad781534)) {\n                while((0, $fc871d27afcbf39a$export$40700dafb97c3799)(target) !== undefined)target = (0, $fc871d27afcbf39a$export$5dcba2d45033d435)(target);\n                return target;\n            }\n            if (typeof _prop === \"symbol\") return target[_prop];\n            let prop = _prop;\n            const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n            prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n            prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n            prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n            ;\n            if (compoundProp !== null) {\n                const [, basePath, subPath] = compoundProp;\n                const currentPath = $5d68f8b093886143$var$extendPath(path, basePath);\n                const value = (0, $90757103be394558$export$44b5bed83342a92f)(target, basePath);\n                return value !== null && typeof value === \"object\" ? new Proxy(value, $5d68f8b093886143$var$regHandler(currentPath, boxScalars))[subPath] : value;\n            }\n            if (prop.startsWith(\"[\") && prop.endsWith(\"]\")) prop = prop.substring(1, prop.length - 1);\n            if (!Array.isArray(target) && target[prop] !== undefined || Array.isArray(target) && prop.includes(\"=\")) {\n                let value;\n                if (prop.includes(\"=\")) {\n                    const [idPath, needle] = prop.split(\"=\");\n                    value = target.find((candidate)=>`${(0, $90757103be394558$export$44b5bed83342a92f)(candidate, idPath)}` === needle);\n                } else value = target[prop];\n                if (value !== null && typeof value === \"object\") {\n                    const currentPath = $5d68f8b093886143$var$extendPath(path, prop);\n                    return new Proxy(value, $5d68f8b093886143$var$regHandler(currentPath, boxScalars));\n                } else if (typeof value === \"function\") return value.bind(target);\n                else return boxScalars ? $5d68f8b093886143$var$box(value, $5d68f8b093886143$var$extendPath(path, prop)) : value;\n            } else if (Array.isArray(target)) {\n                const value = target[prop];\n                return typeof value === \"function\" ? (...items)=>{\n                    // @ts-expect-error seriously?\n                    const result = Array.prototype[prop].apply(target, items);\n                    if ($5d68f8b093886143$var$ARRAY_MUTATIONS.includes(prop)) (0, $de0f84e31db1d985$export$d0b7ea69ab6056df)(path);\n                    return result;\n                } : typeof value === \"object\" ? new Proxy(value, $5d68f8b093886143$var$regHandler($5d68f8b093886143$var$extendPath(path, prop), boxScalars)) : boxScalars ? $5d68f8b093886143$var$box(value, $5d68f8b093886143$var$extendPath(path, prop)) : value;\n            } else return boxScalars ? $5d68f8b093886143$var$box(target[prop], $5d68f8b093886143$var$extendPath(path, prop)) : target[prop];\n        },\n        set (_, prop, value) {\n            value = (0, $fc871d27afcbf39a$export$5dcba2d45033d435)(value);\n            const fullPath = $5d68f8b093886143$var$extendPath(path, prop);\n            if ($5d68f8b093886143$var$debugPaths && !$5d68f8b093886143$export$a678af82bf766611(fullPath)) throw new Error(`setting invalid path ${fullPath}`);\n            const existing = (0, $fc871d27afcbf39a$export$5dcba2d45033d435)($5d68f8b093886143$export$966034e6c6823eb0[fullPath]);\n            if (existing !== value && (0, $90757103be394558$export$f65a19d15516795e)($5d68f8b093886143$var$registry, fullPath, value)) (0, $de0f84e31db1d985$export$d0b7ea69ab6056df)(fullPath);\n            return true;\n        }\n    });\nconst $5d68f8b093886143$export$d1203567a167490e = (test, callback)=>{\n    const func = typeof callback === \"function\" ? callback : $5d68f8b093886143$export$966034e6c6823eb0[callback];\n    if (typeof func !== \"function\") throw new Error(`observe expects a function or path to a function, ${callback} is neither`);\n    return (0, $de0f84e31db1d985$export$d1203567a167490e)(test, func);\n};\nconst $5d68f8b093886143$export$966034e6c6823eb0 = new Proxy($5d68f8b093886143$var$registry, $5d68f8b093886143$var$regHandler(\"\", false));\nconst $5d68f8b093886143$export$fd1b43749dd321e5 = new Proxy($5d68f8b093886143$var$registry, $5d68f8b093886143$var$regHandler(\"\", true));\n\n\n\nconst { document: $d165020245160cdf$var$document, MutationObserver: $d165020245160cdf$var$MutationObserver } = globalThis;\nconst $d165020245160cdf$export$80bf2f765c31be6a = (element, changedPath)=>{\n    const dataBindings = (0, $fc871d27afcbf39a$export$1f922de8d0ecbb7e).get(element);\n    if (dataBindings == null) return;\n    for (const dataBinding of dataBindings){\n        const { binding: binding, options: options } = dataBinding;\n        let { path: path } = dataBinding;\n        const { toDOM: toDOM } = binding;\n        if (toDOM != null) {\n            if (path.startsWith(\"^\")) {\n                const dataSource = (0, $fc871d27afcbf39a$export$4c309843c07ce679)(element);\n                if (dataSource != null && dataSource[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a] != null) path = dataBinding.path = `${dataSource[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a]}${path.substring(1)}`;\n                else {\n                    console.error(`Cannot resolve relative binding ${path}`, element, \"is not part of a list\");\n                    throw new Error(`Cannot resolve relative binding ${path}`);\n                }\n            }\n            if (changedPath == null || path.startsWith(changedPath)) toDOM(element, (0, $5d68f8b093886143$export$966034e6c6823eb0)[path], options);\n        }\n    }\n};\n// this is just to allow bind to be testable in node\nif ($d165020245160cdf$var$MutationObserver != null) {\n    const observer = new $d165020245160cdf$var$MutationObserver((mutationsList)=>{\n        mutationsList.forEach((mutation)=>{\n            [\n                ...mutation.addedNodes\n            ].forEach((node)=>{\n                if (node instanceof Element) [\n                    ...node.querySelectorAll((0, $fc871d27afcbf39a$export$4c0223f67078aeac))\n                ].forEach((element)=>$d165020245160cdf$export$80bf2f765c31be6a(element));\n            });\n        });\n    });\n    observer.observe($d165020245160cdf$var$document.body, {\n        subtree: true,\n        childList: true\n    });\n}\n(0, $5d68f8b093886143$export$d1203567a167490e)(()=>true, (changedPath)=>{\n    const boundElements = $d165020245160cdf$var$document.querySelectorAll((0, $fc871d27afcbf39a$export$4c0223f67078aeac));\n    for (const element of boundElements)$d165020245160cdf$export$80bf2f765c31be6a(element, changedPath);\n});\nconst $d165020245160cdf$var$handleChange = (event)=>{\n    // @ts-expect-error-error\n    let target = event.target.closest((0, $fc871d27afcbf39a$export$4c0223f67078aeac));\n    while(target != null){\n        const dataBindings = (0, $fc871d27afcbf39a$export$1f922de8d0ecbb7e).get(target);\n        for (const dataBinding of dataBindings){\n            const { binding: binding, path: path } = dataBinding;\n            const { fromDOM: fromDOM } = binding;\n            if (fromDOM != null) {\n                let value;\n                try {\n                    value = fromDOM(target, dataBinding.options);\n                } catch (e) {\n                    console.error(\"Cannot get value from\", target, \"via\", dataBinding);\n                    throw new Error(\"Cannot obtain value fromDOM\");\n                }\n                if (value != null) {\n                    const existing = (0, $5d68f8b093886143$export$966034e6c6823eb0)[path];\n                    if (existing == null) (0, $5d68f8b093886143$export$966034e6c6823eb0)[path] = value;\n                    else {\n                        const existingActual = // @ts-expect-error-error\n                        existing[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a] != null ? existing[0, $fc871d27afcbf39a$export$bdd0d039ad781534] : existing;\n                        const valueActual = value[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a] != null ? value[0, $fc871d27afcbf39a$export$bdd0d039ad781534] : value;\n                        if (existingActual !== valueActual) (0, $5d68f8b093886143$export$966034e6c6823eb0)[path] = valueActual;\n                    }\n                }\n            }\n        }\n        target = target.parentElement.closest((0, $fc871d27afcbf39a$export$4c0223f67078aeac));\n    }\n};\nif (globalThis.document != null) {\n    $d165020245160cdf$var$document.body.addEventListener(\"change\", $d165020245160cdf$var$handleChange, true);\n    $d165020245160cdf$var$document.body.addEventListener(\"input\", $d165020245160cdf$var$handleChange, true);\n}\nfunction $d165020245160cdf$export$2385a24977818dd0(element, what, binding, options) {\n    if (element instanceof DocumentFragment) throw new Error(\"bind cannot bind to a DocumentFragment\");\n    let path;\n    if (typeof what === \"object\" && what[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a] === undefined && options === undefined) {\n        const { value: value } = what;\n        path = typeof value === \"string\" ? value : value[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a];\n        options = what;\n        delete options.value;\n    } else path = typeof what === \"string\" ? what : what[0, $fc871d27afcbf39a$export$a3622eb3b5dd592a];\n    if (path == null) throw new Error(\"bind requires a path or object with xin Proxy\");\n    const { toDOM: toDOM } = binding;\n    element.classList.add((0, $fc871d27afcbf39a$export$c6592bbc1eebb717));\n    let dataBindings = (0, $fc871d27afcbf39a$export$1f922de8d0ecbb7e).get(element);\n    if (dataBindings == null) {\n        dataBindings = [];\n        (0, $fc871d27afcbf39a$export$1f922de8d0ecbb7e).set(element, dataBindings);\n    }\n    dataBindings.push({\n        path: path,\n        binding: binding,\n        options: options\n    });\n    if (toDOM != null && !path.startsWith(\"^\")) // not calling toDOM directly here allows virtual list bindings to work\n    (0, $de0f84e31db1d985$export$d0b7ea69ab6056df)(path);\n    return element;\n}\nconst $d165020245160cdf$var$handledEventTypes = new Set();\nconst $d165020245160cdf$var$handleBoundEvent = (event)=>{\n    // @ts-expect-error-error\n    let target = event?.target.closest((0, $fc871d27afcbf39a$export$21d9322c3477441b));\n    let propagationStopped = false;\n    const wrappedEvent = new Proxy(event, {\n        get (target, prop) {\n            if (prop === \"stopPropagation\") return ()=>{\n                event.stopPropagation();\n                propagationStopped = true;\n            };\n            else {\n                // @ts-expect-error-error\n                const value = target[prop];\n                return typeof value === \"function\" ? value.bind(target) : value;\n            }\n        }\n    });\n    while(!propagationStopped && target != null){\n        const eventBindings = (0, $fc871d27afcbf39a$export$fe712848e6e66613).get(target);\n        const handlers = eventBindings[event.type] || [];\n        for (const handler of handlers){\n            if (typeof handler === \"function\") handler(wrappedEvent);\n            else {\n                const func = (0, $5d68f8b093886143$export$966034e6c6823eb0)[handler];\n                if (typeof func === \"function\") func(wrappedEvent);\n                else throw new Error(`no event handler found at path ${handler}`);\n            }\n            if (propagationStopped) continue;\n        }\n        target = target.parentElement != null ? target.parentElement.closest((0, $fc871d27afcbf39a$export$21d9322c3477441b)) : null;\n    }\n};\nconst $d165020245160cdf$export$af631764ddc44097 = (element, eventType, eventHandler)=>{\n    let eventBindings = (0, $fc871d27afcbf39a$export$fe712848e6e66613).get(element);\n    element.classList.add((0, $fc871d27afcbf39a$export$6a7099543a9795c7));\n    if (eventBindings == null) {\n        eventBindings = {};\n        (0, $fc871d27afcbf39a$export$fe712848e6e66613).set(element, eventBindings);\n    }\n    if (!eventBindings[eventType]) eventBindings[eventType] = [];\n    if (!eventBindings[eventType].includes(eventHandler)) eventBindings[eventType].push(eventHandler);\n    if (!$d165020245160cdf$var$handledEventTypes.has(eventType)) {\n        $d165020245160cdf$var$handledEventTypes.add(eventType);\n        $d165020245160cdf$var$document.body.addEventListener(eventType, $d165020245160cdf$var$handleBoundEvent, true);\n    }\n};\n\n\n\n\nconst $4f9ba97dad88433d$export$635e15bbd66f01ea = (target, type)=>{\n    const event = new Event(type);\n    target.dispatchEvent(event);\n};\nconst $4f9ba97dad88433d$var$valueType = (element)=>{\n    if (element instanceof HTMLInputElement) return element.type;\n    else if (element instanceof HTMLSelectElement && element.hasAttribute(\"multiple\")) return \"multi-select\";\n    else return \"other\";\n};\nconst $4f9ba97dad88433d$export$80746c6bc6142fc8 = (element, newValue)=>{\n    switch($4f9ba97dad88433d$var$valueType(element)){\n        case \"radio\":\n            element.checked = element.value === newValue;\n            break;\n        case \"checkbox\":\n            element.checked = !!newValue;\n            break;\n        case \"date\":\n            element.valueAsDate = new Date(newValue);\n            break;\n        case \"multi-select\":\n            for (const option of [\n                ...element.querySelectorAll(\"option\")\n            ])option.selected = newValue[option.value];\n            break;\n        default:\n            element.value = newValue;\n    }\n};\nconst $4f9ba97dad88433d$export$bf7199a9ebcb84a9 = (element)=>{\n    switch($4f9ba97dad88433d$var$valueType(element)){\n        case \"radio\":\n            {\n                const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`);\n                return radio != null ? radio.value : null;\n            }\n        case \"checkbox\":\n            return element.checked;\n        case \"date\":\n            return element.valueAsDate?.toISOString();\n        case \"multi-select\":\n            return [\n                ...element.querySelectorAll(\"option\")\n            ].reduce((map, option)=>{\n                map[option.value] = option.selected;\n                return map;\n            }, {});\n        default:\n            return element.value;\n    }\n};\nconst { ResizeObserver: $4f9ba97dad88433d$var$ResizeObserver } = globalThis;\nconst $4f9ba97dad88433d$export$b13421f1ae71d316 = $4f9ba97dad88433d$var$ResizeObserver != null ? new $4f9ba97dad88433d$var$ResizeObserver((entries)=>{\n    for (const entry of entries){\n        const element = entry.target;\n        $4f9ba97dad88433d$export$635e15bbd66f01ea(element, \"resize\");\n    }\n}) : {\n    observe () {},\n    unobserve () {}\n};\nconst $4f9ba97dad88433d$export$6bb13967611cdb1 = (elt, content, cloneElements = true)=>{\n    if (elt != null && content != null) {\n        if (typeof content === \"string\") elt.textContent = content;\n        else if (Array.isArray(content)) content.forEach((node)=>{\n            elt.append(node instanceof Node && cloneElements ? (0, $fc871d27afcbf39a$export$fa8cc6a36b1ccd7f)(node) : node);\n        });\n        else if (content instanceof Node) elt.append(cloneElements ? (0, $fc871d27afcbf39a$export$fa8cc6a36b1ccd7f)(content) : content);\n        else throw new Error(\"expect text content or document node\");\n    }\n};\n\n\nconst $4a3ba1b45110c477$export$61fc7d43ac8f84b0 = (origFn, minInterval = 250)=>{\n    let debounceId;\n    return (...args)=>{\n        if (debounceId !== undefined) clearTimeout(debounceId);\n        debounceId = setTimeout(()=>{\n            origFn(...args);\n        }, minInterval);\n    };\n};\nconst $4a3ba1b45110c477$export$de363e709c412c8a = (origFn, minInterval = 250)=>{\n    let debounceId;\n    let previousCall = Date.now() - minInterval;\n    let inFlight = false;\n    return (...args)=>{\n        clearTimeout(debounceId);\n        debounceId = setTimeout(async ()=>{\n            origFn(...args);\n            previousCall = Date.now();\n        }, minInterval);\n        if (!inFlight && Date.now() - previousCall >= minInterval) {\n            inFlight = true;\n            try {\n                origFn(...args);\n                previousCall = Date.now();\n            } finally{\n                inFlight = false;\n            }\n        }\n    };\n};\n\n\n\n\nconst $01a9fd6c1733697a$var$listBindingRef = Symbol(\"list-binding\");\nconst $01a9fd6c1733697a$var$SLICE_INTERVAL_MS = 16 // 60fps\n;\nfunction $01a9fd6c1733697a$var$updateRelativeBindings(element, path) {\n    const boundElements = [\n        ...element.querySelectorAll((0, $fc871d27afcbf39a$export$4c0223f67078aeac))\n    ];\n    if (element.matches((0, $fc871d27afcbf39a$export$4c0223f67078aeac))) boundElements.unshift(element);\n    for (const boundElement of boundElements){\n        const bindings = (0, $fc871d27afcbf39a$export$1f922de8d0ecbb7e).get(boundElement);\n        for (const binding of bindings){\n            if (binding.path.startsWith(\"^\")) binding.path = `${path}${binding.path.substring(1)}`;\n            if (binding.binding.toDOM != null) binding.binding.toDOM(boundElement, (0, $5d68f8b093886143$export$966034e6c6823eb0)[binding.path]);\n        }\n    }\n}\nclass $01a9fd6c1733697a$var$ListBinding {\n    constructor(boundElement, options = {}){\n        this._array = [];\n        this.boundElement = boundElement;\n        this.itemToElement = new WeakMap();\n        if (boundElement.children.length !== 1) throw new Error(\"ListBinding expects an element with exactly one child element\");\n        if (boundElement.children[0] instanceof HTMLTemplateElement) {\n            const template = boundElement.children[0];\n            if (template.content.children.length !== 1) throw new Error(\"ListBinding expects a template with exactly one child element\");\n            this.template = (0, $fc871d27afcbf39a$export$fa8cc6a36b1ccd7f)(template.content.children[0]);\n        } else {\n            this.template = boundElement.children[0];\n            this.template.remove();\n        }\n        this.listTop = document.createElement(\"div\");\n        this.listBottom = document.createElement(\"div\");\n        this.boundElement.append(this.listTop);\n        this.boundElement.append(this.listBottom);\n        this.options = options;\n        if (options.virtual != null) {\n            (0, $4f9ba97dad88433d$export$b13421f1ae71d316).observe(this.boundElement);\n            this._update = (0, $4a3ba1b45110c477$export$de363e709c412c8a)(()=>{\n                this.update(this._array, true);\n            }, $01a9fd6c1733697a$var$SLICE_INTERVAL_MS);\n            this.boundElement.addEventListener(\"scroll\", this._update);\n            this.boundElement.addEventListener(\"resize\", this._update);\n        }\n    }\n    visibleSlice() {\n        const { virtual: virtual, hiddenProp: hiddenProp, visibleProp: visibleProp } = this.options;\n        let visibleArray = this._array;\n        if (hiddenProp !== undefined) visibleArray = visibleArray.filter((item)=>item[hiddenProp] !== true);\n        if (visibleProp !== undefined) visibleArray = visibleArray.filter((item)=>item[visibleProp] === true);\n        let firstItem = 0;\n        let lastItem = visibleArray.length - 1;\n        let topBuffer = 0;\n        let bottomBuffer = 0;\n        if (virtual != null) {\n            const width = this.boundElement.offsetWidth;\n            const height = this.boundElement.offsetHeight;\n            const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1;\n            const visibleRows = Math.ceil(height / virtual.height) + 1;\n            const totalRows = Math.ceil(visibleArray.length / visibleColumns);\n            const visibleItems = visibleColumns * visibleRows;\n            let topRow = Math.floor(this.boundElement.scrollTop / virtual.height);\n            if (topRow > totalRows - visibleRows + 1) topRow = Math.max(0, totalRows - visibleRows + 1);\n            firstItem = topRow * visibleColumns;\n            lastItem = firstItem + visibleItems - 1;\n            topBuffer = topRow * virtual.height;\n            bottomBuffer = Math.max(totalRows * virtual.height - height - topBuffer, 0);\n        }\n        return {\n            items: visibleArray,\n            firstItem: firstItem,\n            lastItem: lastItem,\n            topBuffer: topBuffer,\n            bottomBuffer: bottomBuffer\n        };\n    }\n    update(array, isSlice) {\n        if (array == null) array = [];\n        this._array = array;\n        const { hiddenProp: hiddenProp, visibleProp: visibleProp } = this.options;\n        const arrayPath = (0, $fc871d27afcbf39a$export$40700dafb97c3799)(array);\n        const slice = this.visibleSlice();\n        this.boundElement.classList.toggle(\"-xin-empty-list\", slice.items.length === 0);\n        const previousSlice = this._previousSlice;\n        const { firstItem: firstItem, lastItem: lastItem, topBuffer: topBuffer, bottomBuffer: bottomBuffer } = slice;\n        if (hiddenProp === undefined && visibleProp === undefined && isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) return;\n        this._previousSlice = slice;\n        let removed = 0;\n        let moved = 0;\n        let created = 0;\n        for (const element of [\n            ...this.boundElement.children\n        ]){\n            if (element === this.listTop || element === this.listBottom) continue;\n            const proxy = (0, $fc871d27afcbf39a$export$86caed35dd837d06).get(element);\n            if (proxy == null) element.remove();\n            else {\n                const idx = slice.items.indexOf(proxy);\n                if (idx < firstItem || idx > lastItem) {\n                    element.remove();\n                    this.itemToElement.delete(proxy);\n                    (0, $fc871d27afcbf39a$export$86caed35dd837d06).delete(element);\n                    removed++;\n                }\n            }\n        }\n        this.listTop.style.height = String(topBuffer) + \"px\";\n        this.listBottom.style.height = String(bottomBuffer) + \"px\";\n        // build a complete new set of elements in the right order\n        const elements = [];\n        const { idPath: idPath } = this.options;\n        for(let i = firstItem; i <= lastItem; i++){\n            const item = slice.items[i];\n            if (item === undefined) continue;\n            let element = this.itemToElement.get((0, $fc871d27afcbf39a$export$5dcba2d45033d435)(item));\n            if (element == null) {\n                created++;\n                element = (0, $fc871d27afcbf39a$export$fa8cc6a36b1ccd7f)(this.template);\n                if (typeof item === \"object\") {\n                    this.itemToElement.set((0, $fc871d27afcbf39a$export$5dcba2d45033d435)(item), element);\n                    (0, $fc871d27afcbf39a$export$86caed35dd837d06).set(element, (0, $fc871d27afcbf39a$export$5dcba2d45033d435)(item));\n                }\n                this.boundElement.insertBefore(element, this.listBottom);\n                if (idPath != null) {\n                    const idValue = item[idPath];\n                    const itemPath = `${arrayPath}[${idPath}=${idValue}]`;\n                    $01a9fd6c1733697a$var$updateRelativeBindings(element, itemPath);\n                } else {\n                    const itemPath = `${arrayPath}[${i}]`;\n                    $01a9fd6c1733697a$var$updateRelativeBindings(element, itemPath);\n                }\n            }\n            elements.push(element);\n        }\n        // make sure all the elements are in the DOM and in the correct location\n        let insertionPoint = null;\n        for (const element of elements){\n            if (element.previousElementSibling !== insertionPoint) {\n                moved++;\n                if (insertionPoint?.nextElementSibling != null) this.boundElement.insertBefore(element, insertionPoint.nextElementSibling);\n                else this.boundElement.insertBefore(element, this.listBottom);\n            }\n            insertionPoint = element;\n        }\n        if ((0, $431d87cffae1b706$export$a5a6e0b888b2c992).perf) console.log(arrayPath, \"updated\", {\n            removed: removed,\n            created: created,\n            moved: moved\n        });\n    }\n}\nconst $01a9fd6c1733697a$export$b0eb386be3b9fed8 = (boundElement, options)=>{\n    let listBinding = boundElement[$01a9fd6c1733697a$var$listBindingRef];\n    if (listBinding === undefined) {\n        listBinding = new $01a9fd6c1733697a$var$ListBinding(boundElement, options);\n        boundElement[$01a9fd6c1733697a$var$listBindingRef] = listBinding;\n    }\n    return listBinding;\n};\n\n\n\nconst $3a4453529c7602e5$export$97a1a3e6f39778d2 = {\n    value: {\n        toDOM (element, value) {\n            (0, $4f9ba97dad88433d$export$80746c6bc6142fc8)(element, value);\n        },\n        fromDOM (element) {\n            return (0, $4f9ba97dad88433d$export$bf7199a9ebcb84a9)(element);\n        }\n    },\n    text: {\n        toDOM (element, value) {\n            element.textContent = value;\n        }\n    },\n    enabled: {\n        toDOM (element, value) {\n            element.disabled = !value;\n        }\n    },\n    disabled: {\n        toDOM (element, value) {\n            element.disabled = Boolean(value);\n        }\n    },\n    style: {\n        toDOM (element, value) {\n            if (typeof value === \"object\") for (const prop of Object.keys(value))// @ts-expect-error typescript has a strange/incorrect idea of what element.style is\n            element.style[prop] = value[prop];\n            else if (typeof value === \"string\") element.setAttribute(\"style\", value);\n            else throw new Error(\"style binding expects either a string or object\");\n        }\n    },\n    list: {\n        toDOM (element, value, options) {\n            const listBinding = (0, $01a9fd6c1733697a$export$b0eb386be3b9fed8)(element, options);\n            listBinding.update(value);\n        }\n    }\n};\n\n\n/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/ const $35ded60743a49eea$export$ba6bc6c220358ed9 = 180 / Math.PI;\nconst $35ded60743a49eea$export$1518e1a62333c8a4 = Math.PI / 180;\nfunction $35ded60743a49eea$export$7d15b64cf5a3a4c4(min, v, max) {\n    return v < min ? min : v > max ? max : v;\n}\nfunction $35ded60743a49eea$export$3a89f8d6f6bf6c9f(a, b, t) {\n    t = $35ded60743a49eea$export$7d15b64cf5a3a4c4(0, t, 1);\n    return t * (b - a) + a;\n}\nconst $35ded60743a49eea$export$5e0dd9fd5d74e0c5 = {\n    clamp: $35ded60743a49eea$export$7d15b64cf5a3a4c4,\n    lerp: $35ded60743a49eea$export$3a89f8d6f6bf6c9f\n};\n\n\n// http://www.itu.int/rec/R-REC-BT.601\nconst $ebe12b957d7ffb42$var$bt601 = (r, g, b)=>{\n    return (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n};\nconst $ebe12b957d7ffb42$var$hex2 = (n)=>(\"00\" + Math.round(Number(n)).toString(16)).slice(-2);\nclass $ebe12b957d7ffb42$var$HslColor {\n    constructor(r, g, b){\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        const l = Math.max(r, g, b);\n        const s = l - Math.min(r, g, b);\n        const h = s !== 0 ? l === r ? (g - b) / s : l === g ? 2 + (b - r) / s : 4 + (r - g) / s : 0;\n        this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h;\n        this.s = s !== 0 ? l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s)) : 0;\n        this.l = (2 * l - s) / 2;\n    }\n}\nconst $ebe12b957d7ffb42$var$span = globalThis.document !== undefined ? globalThis.document.createElement(\"span\") : undefined;\nclass $ebe12b957d7ffb42$export$892596cec99bc70e {\n    static fromCss(spec) {\n        let converted = spec;\n        if ($ebe12b957d7ffb42$var$span instanceof HTMLSpanElement) {\n            $ebe12b957d7ffb42$var$span.style.color = spec;\n            document.body.appendChild($ebe12b957d7ffb42$var$span);\n            converted = getComputedStyle($ebe12b957d7ffb42$var$span).color;\n            $ebe12b957d7ffb42$var$span.remove();\n        }\n        const [r, g, b, a] = converted.match(/[\\d.]+/g);\n        return new $ebe12b957d7ffb42$export$892596cec99bc70e(Number(r), Number(g), Number(b), a == null ? 1 : Number(a));\n    }\n    static fromHsl(h, s, l, a = 1) {\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`);\n    }\n    constructor(r, g, b, a = 1){\n        this.r = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, r, 255);\n        this.g = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, g, 255);\n        this.b = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, b, 255);\n        this.a = a !== undefined ? (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, a, 1) : a = 1;\n    }\n    get inverse() {\n        return new $ebe12b957d7ffb42$export$892596cec99bc70e(255 - this.r, 255 - this.g, 255 - this.b, this.a);\n    }\n    get inverseLuminance() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, s, 1 - l, this.a);\n    }\n    get rgb() {\n        const { r: r, g: g, b: b } = this;\n        return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`;\n    }\n    get rgba() {\n        const { r: r, g: g, b: b, a: a } = this;\n        return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`;\n    }\n    get RGBA() {\n        return [\n            this.r / 255,\n            this.g / 255,\n            this.b / 255,\n            this.a\n        ];\n    }\n    get ARGB() {\n        return [\n            this.a,\n            this.r / 255,\n            this.g / 255,\n            this.b / 255\n        ];\n    }\n    get _hsl() {\n        if (this.hslCached == null) this.hslCached = new $ebe12b957d7ffb42$var$HslColor(this.r, this.g, this.b);\n        return this.hslCached;\n    }\n    get hsl() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`;\n    }\n    get hsla() {\n        const { h: h, s: s, l: l } = this._hsl;\n        return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`;\n    }\n    get mono() {\n        const v = this.brightness * 255;\n        return new $ebe12b957d7ffb42$export$892596cec99bc70e(v, v, v);\n    }\n    get brightness() {\n        return $ebe12b957d7ffb42$var$bt601(this.r, this.g, this.b);\n    }\n    get html() {\n        return this.toString();\n    }\n    toString() {\n        return this.a === 1 ? \"#\" + $ebe12b957d7ffb42$var$hex2(this.r) + $ebe12b957d7ffb42$var$hex2(this.g) + $ebe12b957d7ffb42$var$hex2(this.b) : \"#\" + $ebe12b957d7ffb42$var$hex2(this.r) + $ebe12b957d7ffb42$var$hex2(this.g) + $ebe12b957d7ffb42$var$hex2(this.b) + $ebe12b957d7ffb42$var$hex2(Math.floor(255 * this.a));\n    }\n    brighten(amount) {\n        const { h: h, s: s, l: l } = this._hsl;\n        const lClamped = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, l + amount * (1 - l), 1);\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, s, lClamped, this.a);\n    }\n    darken(amount) {\n        const { h: h, s: s, l: l } = this._hsl;\n        const lClamped = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, l * (1 - amount), 1);\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, s, lClamped, this.a);\n    }\n    saturate(amount) {\n        const { h: h, s: s, l: l } = this._hsl;\n        const sClamped = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, s + amount * (1 - s), 1);\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, sClamped, l, this.a);\n    }\n    desaturate(amount) {\n        const { h: h, s: s, l: l } = this._hsl;\n        const sClamped = (0, $35ded60743a49eea$export$7d15b64cf5a3a4c4)(0, s * (1 - amount), 1);\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, sClamped, l, this.a);\n    }\n    rotate(amount) {\n        const { h: h, s: s, l: l } = this._hsl;\n        const hClamped = (h + 360 + amount) % 360;\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(hClamped, s, l, this.a);\n    }\n    opacity(alpha) {\n        const { h: h, s: s, l: l } = this._hsl;\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl(h, s, l, alpha);\n    }\n    swatch() {\n        const { r: r, g: g, b: b, a: a } = this;\n        console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, \"background-color: #eee\");\n        return this;\n    }\n    blend(otherColor, t) {\n        return new $ebe12b957d7ffb42$export$892596cec99bc70e((0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(this.r, otherColor.r, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(this.g, otherColor.g, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(this.b, otherColor.b, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(this.a, otherColor.a, t));\n    }\n    mix(otherColor, t) {\n        const a = this._hsl;\n        const b = otherColor._hsl;\n        return $ebe12b957d7ffb42$export$892596cec99bc70e.fromHsl((0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(a.h, b.h, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(a.s, b.s, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(a.l, b.l, t), (0, $35ded60743a49eea$export$3a89f8d6f6bf6c9f)(this.a, otherColor.a, t));\n    }\n}\n\n\n\n\nfunction $8287b4a0c42d6d79$export$87ae551bf60f4bb(s) {\n    return s.replace(/[A-Z]/g, (c)=>{\n        return `-${c.toLocaleLowerCase()}`;\n    });\n}\nfunction $8287b4a0c42d6d79$export$fd322201efdc650f(s) {\n    return s.replace(/-([a-z])/g, (_, c)=>{\n        return c.toLocaleUpperCase();\n    });\n}\n\n\n\nconst $1fadd05c13944ca9$var$MATH = \"http://www.w3.org/1998/Math/MathML\";\nconst $1fadd05c13944ca9$var$SVG = \"http://www.w3.org/2000/svg\";\nconst $1fadd05c13944ca9$var$templates = {};\nconst $1fadd05c13944ca9$var$create = (tagType, ...contents)=>{\n    if ($1fadd05c13944ca9$var$templates[tagType] === undefined) {\n        const [tag, namespace] = tagType.split(\"|\");\n        if (namespace === undefined) $1fadd05c13944ca9$var$templates[tagType] = globalThis.document.createElement(tag);\n        else $1fadd05c13944ca9$var$templates[tagType] = globalThis.document.createElementNS(namespace, tag);\n    }\n    const elt = $1fadd05c13944ca9$var$templates[tagType].cloneNode();\n    const elementProps = {};\n    for (const item of contents)if (item instanceof Element || item instanceof DocumentFragment || typeof item === \"string\" || typeof item === \"number\") {\n        if (elt instanceof HTMLTemplateElement) elt.content.append(item);\n        else elt.append(item);\n    } else Object.assign(elementProps, item);\n    for (const key of Object.keys(elementProps)){\n        const value = elementProps[key];\n        if (key === \"apply\") value(elt);\n        else if (key === \"style\") {\n            if (typeof value === \"object\") for (const prop of Object.keys(value)){\n                const processed = (0, $4d116130f980647c$export$4f8a9e649bc1f08b)((0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(prop), value[prop]);\n                if (processed.prop.startsWith(\"--\")) elt.style.setProperty(processed.prop, processed.value);\n                else elt.style[prop] = processed.value;\n            }\n            else elt.setAttribute(\"style\", value);\n        } else if (key.match(/^on[A-Z]/) != null) {\n            const eventType = key.substring(2).toLowerCase();\n            (0, $d165020245160cdf$export$af631764ddc44097)(elt, eventType, value);\n        } else if (key === \"bind\") {\n            const binding = typeof value.binding === \"string\" ? (0, $3a4453529c7602e5$export$97a1a3e6f39778d2)[value.binding] : value.binding;\n            if (binding !== undefined && value.value !== undefined) (0, $d165020245160cdf$export$2385a24977818dd0)(elt, value.value, value.binding instanceof Function ? {\n                toDOM: value.binding\n            } : value.binding);\n            else throw new Error(`bad binding`);\n        } else if (key.match(/^bind[A-Z]/) != null) {\n            const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5);\n            const binding = (0, $3a4453529c7602e5$export$97a1a3e6f39778d2)[bindingType];\n            if (binding !== undefined) (0, $d165020245160cdf$export$2385a24977818dd0)(elt, value, binding);\n            else throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`);\n        } else if (elt[key] !== undefined) {\n            // MathML is only supported on 91% of browsers, and not on the Raspberry Pi Chromium\n            const { MathMLElement: MathMLElement } = globalThis;\n            if (elt instanceof SVGElement || MathMLElement !== undefined && elt instanceof MathMLElement) elt.setAttribute(key, value);\n            else elt[key] = value;\n        } else {\n            const attr = (0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(key);\n            if (attr === \"class\") value.split(\" \").forEach((className)=>{\n                elt.classList.add(className);\n            });\n            else if (elt[attr] !== undefined) elt[attr] = value;\n            else if (typeof value === \"boolean\") value ? elt.setAttribute(attr, \"\") : elt.removeAttribute(attr);\n            else elt.setAttribute(attr, value);\n        }\n    }\n    return elt;\n};\nconst $1fadd05c13944ca9$var$fragment = (...contents)=>{\n    const frag = globalThis.document.createDocumentFragment();\n    for (const item of contents)frag.append(item);\n    return frag;\n};\nconst $1fadd05c13944ca9$export$7a5d735b2ab6389d = new Proxy({\n    fragment: $1fadd05c13944ca9$var$fragment\n}, {\n    get (target, tagName) {\n        tagName = tagName.replace(/[A-Z]/g, (c)=>`-${c.toLocaleLowerCase()}`);\n        if (target[tagName] === undefined) target[tagName] = (...contents)=>$1fadd05c13944ca9$var$create(tagName, ...contents);\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\nconst $1fadd05c13944ca9$export$cf20112a1bc148da = new Proxy({\n    fragment: $1fadd05c13944ca9$var$fragment\n}, {\n    get (target, tagName) {\n        if (target[tagName] === undefined) target[tagName] = (...contents)=>$1fadd05c13944ca9$var$create(`${tagName}|${$1fadd05c13944ca9$var$SVG}`, ...contents);\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\nconst $1fadd05c13944ca9$export$8ec252cfdd664597 = new Proxy({\n    fragment: $1fadd05c13944ca9$var$fragment\n}, {\n    get (target, tagName) {\n        if (target[tagName] === undefined) target[tagName] = (...contents)=>$1fadd05c13944ca9$var$create(`${tagName}|${$1fadd05c13944ca9$var$MATH}`, ...contents);\n        return target[tagName];\n    },\n    set () {\n        throw new Error(\"You may not add new properties to elements\");\n    }\n});\n\n\n\nfunction $4d116130f980647c$export$9d753cd7ae895cce(id, styleSpec) {\n    const element = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d).style($4d116130f980647c$export$dbf350e5966cf602(styleSpec));\n    element.id = id;\n    document.head.append(element);\n}\nconst $4d116130f980647c$var$numericProps = [\n    \"animation-iteration-count\",\n    \"flex\",\n    \"flex-base\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"opacity\",\n    \"order\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\"\n];\nconst $4d116130f980647c$export$4f8a9e649bc1f08b = (prop, value)=>{\n    if (typeof value === \"number\" && !$4d116130f980647c$var$numericProps.includes(prop)) value = `${value}px`;\n    if (prop.startsWith(\"_\")) {\n        if (prop.startsWith(\"__\")) {\n            prop = \"--\" + prop.substring(2);\n            value = `var(${prop}-default, ${value})`;\n        } else prop = \"--\" + prop.substring(1);\n    }\n    return {\n        prop: prop,\n        value: String(value)\n    };\n};\nconst $4d116130f980647c$var$renderProp = (indentation, cssProp, value)=>{\n    if (value === undefined) return \"\";\n    if (value instanceof (0, $ebe12b957d7ffb42$export$892596cec99bc70e)) value = value.html;\n    const processed = $4d116130f980647c$export$4f8a9e649bc1f08b(cssProp, value);\n    return `${indentation}  ${processed.prop}: ${processed.value};`;\n};\nconst $4d116130f980647c$var$renderStatement = (key, value, indentation = \"\")=>{\n    const cssProp = (0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(key);\n    if (typeof value === \"object\" && !(value instanceof (0, $ebe12b957d7ffb42$export$892596cec99bc70e))) {\n        const renderedRule = Object.keys(value).map((innerKey)=>$4d116130f980647c$var$renderStatement(innerKey, value[innerKey], `${indentation}  `)).join(\"\\n\");\n        return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`;\n    } else return $4d116130f980647c$var$renderProp(indentation, cssProp, value);\n};\nconst $4d116130f980647c$export$dbf350e5966cf602 = (obj, indentation = \"\")=>{\n    const selectors = Object.keys(obj).map((selector)=>{\n        const body = obj[selector];\n        if (typeof body === \"string\") {\n            if (selector === \"@import\") return `@import url('${body}');`;\n            throw new Error(\"top-level string value only allowed for `@import`\");\n        }\n        const rule = Object.keys(body).map((prop)=>$4d116130f980647c$var$renderStatement(prop, body[prop])).join(\"\\n\");\n        return `${indentation}${selector} {\\n${rule}\\n}`;\n    });\n    return selectors.join(\"\\n\\n\");\n};\nconst $4d116130f980647c$export$90d0ea046136e3ed = (obj)=>{\n    console.warn(\"initVars is deprecated. Just use _ and __ prefixes instead.\");\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        const value = obj[key];\n        const kabobKey = (0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(key);\n        rule[`--${kabobKey}`] = typeof value === \"number\" && value !== 0 ? String(value) + \"px\" : value;\n    }\n    return rule;\n};\nconst $4d116130f980647c$export$808aaf1b460dc9af = (obj)=>{\n    console.warn(\"darkMode is deprecated. Use inverseLuminance instead.\");\n    const rule = {};\n    for (const key of Object.keys(obj)){\n        let value = obj[key];\n        if (typeof value === \"string\" && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n            value = (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(value).inverseLuminance.html;\n            rule[`--${(0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(key)}`] = value;\n        }\n    }\n    return rule;\n};\nconst $4d116130f980647c$export$8279dba9b7d4e420 = (map)=>{\n    const inverted = {};\n    for (const key of Object.keys(map)){\n        const value = map[key];\n        if (value instanceof (0, $ebe12b957d7ffb42$export$892596cec99bc70e)) inverted[key] = value.inverseLuminance;\n        else if (typeof value === \"string\" && value.match(/^(#[0-9a-fA-F]{3}|rgba?\\(|hsla?\\()/)) inverted[key] = (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(value).inverseLuminance;\n    }\n    return inverted;\n};\nconst $4d116130f980647c$export$3cb96c9f6c8d16a4 = new Proxy({}, {\n    get (target, prop) {\n        if (target[prop] == null) {\n            prop = prop.replace(/[A-Z]/g, (x)=>`-${x.toLocaleLowerCase()}`);\n            const [, _varName, , isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/);\n            const varName = `--${_varName}`;\n            if (scaleText != null) {\n                const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100;\n                switch(method){\n                    case \"b\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).brighten(scale).rgba : (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).darken(-scale).rgba;\n                        }\n                        break;\n                    case \"s\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = scale > 0 ? (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).saturate(scale).rgba : (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).desaturate(-scale).rgba;\n                        }\n                        break;\n                    case \"h\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).rotate(scale * 100).rgba;\n                            console.log((0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).hsla, (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).rotate(scale).hsla);\n                        }\n                        break;\n                    case \"o\":\n                        {\n                            const baseColor = getComputedStyle(document.body).getPropertyValue(varName);\n                            target[prop] = (0, $ebe12b957d7ffb42$export$892596cec99bc70e).fromCss(baseColor).opacity(scale).rgba;\n                        }\n                        break;\n                    case \"\":\n                        target[prop] = `calc(var(${varName}) * ${scale})`;\n                        break;\n                    default:\n                        console.error(method);\n                        throw new Error(`Unrecognized method ${method} for css variable ${varName}`);\n                }\n            } else target[prop] = `var(${varName})`;\n        }\n        return target[prop];\n    }\n});\nconst $4d116130f980647c$export$75c0e6adb3e38f31 = new Proxy({}, {\n    get (target, prop) {\n        if (target[prop] === undefined) {\n            const varName = `--${prop.replace(/[A-Z]/g, (x)=>`-${x.toLocaleLowerCase()}`)}`;\n            target[prop] = (val)=>`var(${varName}, ${val})`;\n        }\n        return target[prop];\n    }\n});\n\n\n\n\n\n\n\n\nlet $065ec34f90b90178$var$anonymousElementCount = 0;\nfunction $065ec34f90b90178$var$anonElementTag() {\n    return `custom-elt${($065ec34f90b90178$var$anonymousElementCount++).toString(36)}`;\n}\nlet $065ec34f90b90178$var$instanceCount = 0;\nconst $065ec34f90b90178$var$globalStyleSheets = {};\nfunction $065ec34f90b90178$var$setGlobalStyle(tagName, styleSpec) {\n    const existing = $065ec34f90b90178$var$globalStyleSheets[tagName];\n    const processed = (0, $4d116130f980647c$export$dbf350e5966cf602)(styleSpec).replace(/:host\\b/g, tagName);\n    $065ec34f90b90178$var$globalStyleSheets[tagName] = existing ? existing + \"\\n\" + processed : processed;\n}\nfunction $065ec34f90b90178$var$insertGlobalStyles(tagName) {\n    if ($065ec34f90b90178$var$globalStyleSheets[tagName]) document.head.append((0, $1fadd05c13944ca9$export$7a5d735b2ab6389d).style({\n        id: tagName + \"-component\"\n    }, $065ec34f90b90178$var$globalStyleSheets[tagName]));\n    delete $065ec34f90b90178$var$globalStyleSheets[tagName];\n}\nclass $065ec34f90b90178$export$16fa2f45be04daa8 extends HTMLElement {\n    static #_ = (()=>{\n        this.elements = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d);\n    })();\n    static #_1 = (()=>{\n        this.globalStyleSheets = [];\n    })();\n    static #_2 = (()=>{\n        this._tagName = null;\n    })();\n    static get tagName() {\n        return this._tagName;\n    }\n    static StyleNode(styleSpec) {\n        console.warn(\"StyleNode is deprecated, just assign static styleSpec: XinStyleSheet to the class directly\");\n        return (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d).style((0, $4d116130f980647c$export$dbf350e5966cf602)(styleSpec));\n    }\n    static elementCreator(options = {}) {\n        if (this._elementCreator == null) {\n            const { tag: tag, styleSpec: styleSpec } = options;\n            let tagName = options != null ? tag : null;\n            if (tagName == null) {\n                if (typeof this.name === \"string\" && this.name !== \"\") {\n                    tagName = (0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(this.name);\n                    if (tagName.startsWith(\"-\")) tagName = tagName.slice(1);\n                } else tagName = $065ec34f90b90178$var$anonElementTag();\n            }\n            if (customElements.get(tagName) != null) console.warn(`${tagName} is already defined`);\n            if (tagName.match(/\\w+(-\\w+)+/) == null) {\n                console.warn(`${tagName} is not a legal tag for a custom-element`);\n                tagName = $065ec34f90b90178$var$anonElementTag();\n            }\n            while(customElements.get(tagName) !== undefined)tagName = $065ec34f90b90178$var$anonElementTag();\n            window.customElements.define(tagName, this, options);\n            this._tagName = tagName;\n            this._elementCreator = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d)[tagName];\n            if (styleSpec !== undefined) $065ec34f90b90178$var$setGlobalStyle(tagName, styleSpec);\n        }\n        return this._elementCreator;\n    }\n    initAttributes(...attributeNames) {\n        const attributes = {};\n        const attributeValues = {};\n        const observer = new MutationObserver((mutationsList)=>{\n            let triggerRender = false;\n            mutationsList.forEach((mutation)=>{\n                triggerRender = !!(mutation.attributeName && attributeNames.includes((0, $8287b4a0c42d6d79$export$fd322201efdc650f)(mutation.attributeName)));\n            });\n            if (triggerRender && this.queueRender !== undefined) this.queueRender(false);\n        });\n        observer.observe(this, {\n            attributes: true\n        });\n        attributeNames.forEach((attributeName)=>{\n            attributes[attributeName] = (0, $324ad9265fd7ec5b$export$b7d58db314e0ac27)(this[attributeName]);\n            const attributeKabob = (0, $8287b4a0c42d6d79$export$87ae551bf60f4bb)(attributeName);\n            Object.defineProperty(this, attributeName, {\n                enumerable: false,\n                get () {\n                    if (typeof attributes[attributeName] === \"boolean\") return this.hasAttribute(attributeKabob);\n                    else {\n                        if (this.hasAttribute(attributeKabob)) return typeof attributes[attributeName] === \"number\" ? parseFloat(this.getAttribute(attributeKabob)) : this.getAttribute(attributeKabob);\n                        else if (attributeValues[attributeName] !== undefined) return attributeValues[attributeName];\n                        else return attributes[attributeName];\n                    }\n                },\n                set (value) {\n                    if (typeof attributes[attributeName] === \"boolean\") {\n                        if (value !== this[attributeName]) {\n                            if (value) this.setAttribute(attributeKabob, \"\");\n                            else this.removeAttribute(attributeKabob);\n                            this.queueRender();\n                        }\n                    } else if (typeof attributes[attributeName] === \"number\") {\n                        if (value !== parseFloat(this[attributeName])) {\n                            this.setAttribute(attributeKabob, value);\n                            this.queueRender();\n                        }\n                    } else if (typeof value === \"object\" || `${value}` !== `${this[attributeName]}`) {\n                        if (value === null || value === undefined || typeof value === \"object\") this.removeAttribute(attributeKabob);\n                        else this.setAttribute(attributeKabob, value);\n                        this.queueRender();\n                        attributeValues[attributeName] = value;\n                    }\n                }\n            });\n        });\n    }\n    initValue() {\n        const valueDescriptor = Object.getOwnPropertyDescriptor(this, \"value\");\n        if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) return;\n        let value = this.hasAttribute(\"value\") ? this.getAttribute(\"value\") : (0, $324ad9265fd7ec5b$export$b7d58db314e0ac27)(this.value);\n        delete this.value;\n        Object.defineProperty(this, \"value\", {\n            enumerable: false,\n            get () {\n                return value;\n            },\n            set (newValue) {\n                if (value !== newValue) {\n                    value = newValue;\n                    this.queueRender(true);\n                }\n            }\n        });\n    }\n    get parts() {\n        const root = this.shadowRoot != null ? this.shadowRoot : this;\n        if (this._parts == null) this._parts = new Proxy({}, {\n            get (target, ref) {\n                if (target[ref] === undefined) {\n                    let element = root.querySelector(`[part=\"${ref}\"]`);\n                    if (element == null) element = root.querySelector(ref);\n                    if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`);\n                    element.removeAttribute(\"data-ref\");\n                    target[ref] = element;\n                }\n                return target[ref];\n            }\n        });\n        return this._parts;\n    }\n    constructor(){\n        super();\n        this.content = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d).slot();\n        this._changeQueued = false;\n        this._renderQueued = false;\n        this._hydrated = false;\n        $065ec34f90b90178$var$instanceCount += 1;\n        this.initAttributes(\"hidden\");\n        this.instanceId = `${this.tagName.toLocaleLowerCase()}-${$065ec34f90b90178$var$instanceCount}`;\n        this._value = (0, $324ad9265fd7ec5b$export$b7d58db314e0ac27)(this.defaultValue);\n    }\n    connectedCallback() {\n        $065ec34f90b90178$var$insertGlobalStyles(this.constructor.tagName);\n        this.hydrate();\n        // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n        if (this.role != null) this.setAttribute(\"role\", this.role);\n        if (this.onResize !== undefined) {\n            (0, $4f9ba97dad88433d$export$b13421f1ae71d316).observe(this);\n            if (this._onResize == null) this._onResize = this.onResize.bind(this);\n            this.addEventListener(\"resize\", this._onResize);\n        }\n        if (this.value != null && this.getAttribute(\"value\") != null) this._value = this.getAttribute(\"value\");\n        this.queueRender();\n    }\n    disconnectedCallback() {\n        (0, $4f9ba97dad88433d$export$b13421f1ae71d316).unobserve(this);\n    }\n    queueRender(triggerChangeEvent = false) {\n        if (!this._hydrated) return;\n        if (!this._changeQueued) this._changeQueued = triggerChangeEvent;\n        if (!this._renderQueued) {\n            this._renderQueued = true;\n            requestAnimationFrame(()=>{\n                // TODO add mechanism to allow component developer to have more control over\n                // whether input vs. change events are emitted\n                if (this._changeQueued) (0, $4f9ba97dad88433d$export$635e15bbd66f01ea)(this, \"change\");\n                this._changeQueued = false;\n                this._renderQueued = false;\n                this.render();\n            });\n        }\n    }\n    hydrate() {\n        if (!this._hydrated) {\n            this.initValue();\n            const cloneElements = typeof this.content !== \"function\";\n            const _content = typeof this.content === \"function\" ? this.content() : this.content;\n            const { styleSpec: styleSpec } = this.constructor;\n            let { styleNode: styleNode } = this.constructor;\n            if (styleSpec) {\n                styleNode = this.constructor.styleNode = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d).style((0, $4d116130f980647c$export$dbf350e5966cf602)(styleSpec));\n                delete this.constructor.styleNode;\n            }\n            if (this.styleNode) {\n                console.warn(this, \"styleNode is deprecrated, use static styleNode or statc styleSpec instead\");\n                styleNode = this.styleNode;\n            }\n            if (styleNode) {\n                const shadow = this.attachShadow({\n                    mode: \"open\"\n                });\n                shadow.appendChild(styleNode.cloneNode(true));\n                (0, $4f9ba97dad88433d$export$6bb13967611cdb1)(shadow, _content, cloneElements);\n            } else if (_content !== null) {\n                const existingChildren = [\n                    ...this.childNodes\n                ];\n                (0, $4f9ba97dad88433d$export$6bb13967611cdb1)(this, _content, cloneElements);\n                this.isSlotted = this.querySelector(\"slot,xin-slot\") !== undefined;\n                const slots = [\n                    ...this.querySelectorAll(\"slot\")\n                ];\n                if (slots.length > 0) slots.forEach($065ec34f90b90178$var$XinSlot.replaceSlot);\n                if (existingChildren.length > 0) {\n                    const slotMap = {\n                        \"\": this\n                    };\n                    [\n                        ...this.querySelectorAll(\"xin-slot\")\n                    ].forEach((slot)=>{\n                        slotMap[slot.name] = slot;\n                    });\n                    existingChildren.forEach((child)=>{\n                        const defaultSlot = slotMap[\"\"];\n                        const destSlot = child instanceof Element ? slotMap[child.slot] : defaultSlot;\n                        (destSlot !== undefined ? destSlot : defaultSlot).append(child);\n                    });\n                }\n            }\n            this._hydrated = true;\n        }\n    }\n    render() {}\n}\nclass $065ec34f90b90178$var$XinSlot extends $065ec34f90b90178$export$16fa2f45be04daa8 {\n    static replaceSlot(slot) {\n        const _slot = document.createElement(\"xin-slot\");\n        if (slot.name !== \"\") _slot.setAttribute(\"name\", slot.name);\n        slot.replaceWith(_slot);\n    }\n    constructor(){\n        super();\n        this.name = \"\";\n        this.content = null;\n        this.initAttributes(\"name\");\n    }\n}\nconst $065ec34f90b90178$export$a0751b4aa1961d4e = $065ec34f90b90178$var$XinSlot.elementCreator({\n    tag: \"xin-slot\"\n});\n\n\n\n\n\n\nconst $b71156193afa7077$export$93b87f7746612069 = (test = ()=>true)=>{\n    const savedState = localStorage.getItem(\"xin-state\");\n    if (savedState != null) {\n        const state = JSON.parse(savedState);\n        for (const key of Object.keys(state).filter(test))if ((0, $5d68f8b093886143$export$966034e6c6823eb0)[key] !== undefined) Object.assign((0, $5d68f8b093886143$export$966034e6c6823eb0)[key], state[key]);\n        else (0, $5d68f8b093886143$export$966034e6c6823eb0)[key] = state[key];\n    }\n    const saveState = (0, $4a3ba1b45110c477$export$61fc7d43ac8f84b0)(()=>{\n        const obj = {};\n        const state = (0, $5d68f8b093886143$export$966034e6c6823eb0)[0, $fc871d27afcbf39a$export$bdd0d039ad781534];\n        for (const key of Object.keys(state).filter(test))obj[key] = state[key];\n        localStorage.setItem(\"xin-state\", JSON.stringify(obj));\n        console.log(\"xin state saved to localStorage\");\n    }, 500);\n    (0, $5d68f8b093886143$export$d1203567a167490e)(test, saveState);\n};\n\n\n\n\n\n\n\nfunction $bd988bd6d6d6ff33$export$3bc26eec1cc2439f(tag, blueprint) {\n    const { type: type, styleSpec: styleSpec } = blueprint(tag, {\n        Color: $ebe12b957d7ffb42$export$892596cec99bc70e,\n        Component: $065ec34f90b90178$export$16fa2f45be04daa8,\n        elements: $1fadd05c13944ca9$export$7a5d735b2ab6389d,\n        varDefault: $4d116130f980647c$export$75c0e6adb3e38f31,\n        vars: $4d116130f980647c$export$3cb96c9f6c8d16a4 /*, xinProxy */ \n    });\n    return {\n        type: type,\n        creator: type.elementCreator({\n            tag: tag,\n            styleSpec: styleSpec\n        })\n    };\n}\nasync function $bd988bd6d6d6ff33$export$1c9780fc8943eebd(tag, url) {\n    const blueprint = (await import(url)).default;\n    return blueprint(tag, {\n        Component: $065ec34f90b90178$export$16fa2f45be04daa8,\n        elements: $1fadd05c13944ca9$export$7a5d735b2ab6389d,\n        vars: $4d116130f980647c$export$3cb96c9f6c8d16a4,\n        varDefault: $4d116130f980647c$export$75c0e6adb3e38f31,\n        Color: $ebe12b957d7ffb42$export$892596cec99bc70e\n    });\n}\n\n\n\n\nvar $11c940022681efe2$exports = {};\n\n$parcel$export($11c940022681efe2$exports, \"XinTest\", () => $11c940022681efe2$export$e8658328209d5943);\n$parcel$export($11c940022681efe2$exports, \"xinTest\", () => $11c940022681efe2$export$b1604b020b2ce76d);\n\n\nconst { span: $11c940022681efe2$var$span, slot: $11c940022681efe2$var$slot } = (0, $1fadd05c13944ca9$export$7a5d735b2ab6389d);\nclass $11c940022681efe2$export$e8658328209d5943 extends (0, $065ec34f90b90178$export$16fa2f45be04daa8) {\n    static delay(ms) {\n        return new Promise((resolve)=>{\n            setTimeout(resolve, ms);\n        });\n    }\n    static #_ = (()=>{\n        this.styleSpec = {\n            \":host\": {\n                display: \"flex\",\n                gap: \"5px\",\n                alignItems: \"center\"\n            },\n            ':host [part=\"outcome\"]': {\n                display: \"inline-block\",\n                borderRadius: \"99px\",\n                padding: \"0 12px\",\n                fontSize: \"80%\"\n            },\n            \":host .waiting\": {\n                background: \"#ff04\"\n            },\n            \":host .running\": {\n                background: \"#f804\"\n            },\n            \":host .success\": {\n                background: \"#0f04\"\n            },\n            \":host .failed\": {\n                background: \"#f004\"\n            },\n            \":host .exception\": {\n                color: \"white\",\n                background: \"red\"\n            }\n        };\n    })();\n    constructor(){\n        super();\n        this.test = ()=>true;\n        this.delay = 0;\n        this.statis = \"\";\n        this.expect = true;\n        this.content = [\n            $11c940022681efe2$var$span({\n                part: \"description\"\n            }, $11c940022681efe2$var$slot()),\n            $11c940022681efe2$var$span({\n                part: \"outcome\"\n            })\n        ];\n        this.run = ()=>{\n            clearTimeout(this.timeout);\n            this.status = \"waiting\";\n            this.timeout = setTimeout(async ()=>{\n                this.status = \"running\";\n                try {\n                    const outcome = JSON.stringify(await this.test());\n                    if (outcome === JSON.stringify(this.expect)) this.status = \"success\";\n                    else this.status = `failed: got ${outcome}, expected ${this.expect}`;\n                } catch (err) {\n                    this.status = `exception: ${err}`;\n                }\n            }, this.delay);\n        };\n        this.initAttributes(\"description\", \"delay\", \"status\");\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.run();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.class;\n        clearTimeout(this.timeout);\n    }\n    render() {\n        super.render();\n        const { outcome: outcome } = this.parts;\n        outcome.textContent = this.status;\n        outcome.setAttribute(\"class\", this.status.match(/\\w+/)[0]);\n    }\n}\nconst $11c940022681efe2$export$b1604b020b2ce76d = $11c940022681efe2$export$e8658328209d5943.elementCreator({\n    tag: \"xin-test\"\n});\n\n\n\n\nvar $a376b834c897bffd$exports = {};\n\n\n\nfunction $7c408001ca0a23f8$export$95a552d2395ab4c4(obj, boxScalars = false) {\n    const registered = {};\n    Object.keys(obj).forEach((key)=>{\n        (0, $5d68f8b093886143$export$966034e6c6823eb0)[key] = obj[key];\n        registered[key] = boxScalars ? (0, $5d68f8b093886143$export$fd1b43749dd321e5)[key] : (0, $5d68f8b093886143$export$966034e6c6823eb0)[key];\n    });\n    return registered;\n}\n\n\n\n\nexport {$d165020245160cdf$export$2385a24977818dd0 as bind, $d165020245160cdf$export$af631764ddc44097 as on, $3a4453529c7602e5$export$97a1a3e6f39778d2 as bindings, $4d116130f980647c$export$dbf350e5966cf602 as css, $4d116130f980647c$export$8279dba9b7d4e420 as invertLuminance, $4d116130f980647c$export$808aaf1b460dc9af as darkMode, $4d116130f980647c$export$90d0ea046136e3ed as initVars, $4d116130f980647c$export$3cb96c9f6c8d16a4 as vars, $4d116130f980647c$export$75c0e6adb3e38f31 as varDefault, $4d116130f980647c$export$9d753cd7ae895cce as StyleSheet, $ebe12b957d7ffb42$export$892596cec99bc70e as Color, $065ec34f90b90178$export$16fa2f45be04daa8 as Component, $1fadd05c13944ca9$export$7a5d735b2ab6389d as elements, $1fadd05c13944ca9$export$cf20112a1bc148da as svgElements, $1fadd05c13944ca9$export$8ec252cfdd664597 as mathML, $b71156193afa7077$export$93b87f7746612069 as hotReload, $fc871d27afcbf39a$export$4c309843c07ce679 as getListItem, $fc871d27afcbf39a$export$40700dafb97c3799 as xinPath, $fc871d27afcbf39a$export$5dcba2d45033d435 as xinValue, $bd988bd6d6d6ff33$export$3bc26eec1cc2439f as makeComponent, $bd988bd6d6d6ff33$export$1c9780fc8943eebd as importComponent, $35ded60743a49eea$export$5e0dd9fd5d74e0c5 as MoreMath, $431d87cffae1b706$export$a5a6e0b888b2c992 as settings, $4a3ba1b45110c477$export$de363e709c412c8a as throttle, $4a3ba1b45110c477$export$61fc7d43ac8f84b0 as debounce, $5d68f8b093886143$export$966034e6c6823eb0 as xin, $5d68f8b093886143$export$d1203567a167490e as observe, $de0f84e31db1d985$export$23a2283368c55ea2 as unobserve, $de0f84e31db1d985$export$d0b7ea69ab6056df as touch, $de0f84e31db1d985$export$253d09664e30b967 as observerShouldBeRemoved, $de0f84e31db1d985$export$1c2919332513559b as updates, $7c408001ca0a23f8$export$95a552d2395ab4c4 as xinProxy, $11c940022681efe2$export$e8658328209d5943 as XinTest, $11c940022681efe2$export$b1604b020b2ce76d as xinTest};\n//# sourceMappingURL=index.js.map\n","/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/\n\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport {\n  css,\n  invertLuminance,\n  darkMode,\n  initVars,\n  vars,\n  varDefault,\n  StyleSheet,\n} from './css'\nexport type { XinStyleSheet, XinStyleMap, XinStyleRule } from './css-types'\nexport { Color } from './color'\nexport { Component } from './component'\nexport { elements, svgElements, mathML } from './elements'\nexport type { ElementsProxy } from './elements'\nexport { hotReload } from './hot-reload'\nexport { getListItem, xinPath, xinValue } from './metadata'\nexport { makeComponent, importComponent } from './make-component'\nexport type {\n  XinBlueprint,\n  XinFactory,\n  XinPackagedComponent,\n} from './make-component'\nexport { MoreMath } from './more-math'\nexport { settings } from './settings'\nexport * from './test-component'\nexport { throttle, debounce } from './throttle'\nexport {\n  xin,\n  observe,\n  unobserve,\n  touch,\n  observerShouldBeRemoved,\n  updates,\n} from './xin'\nexport * from './xin-types'\nexport { xinProxy } from './xin-proxy'\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem,\n  elementToBindings,\n  elementToHandlers,\n  DataBindings,\n  BOUND_CLASS,\n  BOUND_SELECTOR,\n  EVENT_CLASS,\n  EVENT_SELECTOR,\n  XinEventBindings,\n  XIN_PATH,\n  XIN_VALUE,\n} from './metadata'\nimport {\n  XinObject,\n  XinProxy,\n  XinEventHandler,\n  XinTouchableType,\n  XinBinding,\n  XinBindingSpec,\n} from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: Element, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    return\n  }\n  for (const dataBinding of dataBindings) {\n    const { binding, options } = dataBinding\n    let { path } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${\n            (dataSource as XinProxy)[XIN_PATH]\n          }${path.substring(1)}`\n        } else {\n          console.error(\n            `Cannot resolve relative binding ${path}`,\n            element,\n            'is not part of a list'\n          )\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      ;[...mutation.addedNodes].forEach((node) => {\n        if (node instanceof Element) {\n          ;[...node.querySelectorAll(BOUND_SELECTOR)].forEach((element) =>\n            touchElement(element as Element)\n          )\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(\n  () => true,\n  (changedPath: string) => {\n    const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n    for (const element of boundElements) {\n      touchElement(element as HTMLElement, changedPath)\n    }\n  }\n)\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            const existingActual =\n              // @ts-expect-error-error\n              existing[XIN_PATH] != null\n                ? (existing as XinProxy)[XIN_VALUE]\n                : existing\n            const valueActual =\n              value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends HTMLElement>(\n  element: T,\n  what: XinTouchableType | XinBindingSpec,\n  binding: XinBinding<T>,\n  options?: XinObject\n): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (\n    typeof what === 'object' &&\n    (what as XinProxy)[XIN_PATH] === undefined &&\n    options === undefined\n  ) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({\n    path,\n    binding: binding as XinBinding<Element>,\n    options,\n  })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    // not calling toDOM directly here allows virtual list bindings to work\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get(target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    },\n  })\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    const handlers = eventBindings[event.type] || ([] as XinEventHandler[])\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target =\n      target.parentElement != null\n        ? target.parentElement.closest(EVENT_SELECTOR)\n        : null\n  }\n}\n\nexport const on = (\n  element: HTMLElement,\n  eventType: string,\n  eventHandler: XinEventHandler\n): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import {\n  XinProxyObject,\n  XinProxyTarget,\n  XinObject,\n  XinArray,\n  XinValue,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { settings } from './settings'\nimport {\n  Listener,\n  touch,\n  observe as _observe,\n  unobserve,\n  updates,\n  observerShouldBeRemoved,\n} from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { xinValue, xinPath, XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ) => { proxy: P; revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = [\n  'sort',\n  'splice',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'unshift',\n]\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath =\n  /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst boxes: { [key: string]: (x: any) => any } = {\n  string(s: string) {\n    return new String(s)\n  },\n  boolean(b: boolean) {\n    return new Boolean(b)\n  },\n  bigint(b: bigint) {\n    return b\n  },\n  symbol(s: symbol) {\n    return s\n  },\n  number(n: number) {\n    return new Number(n)\n  },\n}\n\nfunction box<T>(x: T, path: string): T {\n  const t = typeof x\n  if (x === undefined || t === 'object' || t === 'function') {\n    return x\n  } else {\n    return new Proxy<XinProxyTarget, XinObject>(\n      boxes[t](x),\n      regHandler(path, true)\n    ) as T\n  }\n}\n\nconst regHandler = (\n  path: string,\n  boxScalars: boolean\n): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get(target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      while (xinPath(target) !== undefined) {\n        target = xinValue(target)\n      }\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      return (target as XinObject)[_prop]\n    }\n    let prop = _prop\n    const compoundProp =\n      prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n      prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n      prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n      prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object'\n        ? new Proxy<XinObject, XinProxyObject>(\n            value,\n            regHandler(currentPath, boxScalars)\n          )[subPath]\n        : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) =>\n            `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(\n          value,\n          regHandler(currentPath, boxScalars)\n        ) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return boxScalars ? box(value, extendPath(path, prop)) : value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error seriously?\n            const result = Array.prototype[prop].apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n        ? new Proxy<XinProxyTarget, XinObject>(\n            value,\n            regHandler(extendPath(path, prop), boxScalars)\n          )\n        : boxScalars\n        ? box(value, extendPath(path, prop))\n        : value\n    } else {\n      return boxScalars\n        ? box(target[prop], extendPath(path, prop))\n        : target[prop]\n    }\n  },\n  set(_, prop: string, value: any) {\n    value = xinValue(value)\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    const existing = xinValue(xin[fullPath])\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  },\n})\n\nconst observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: string | ObserverCallbackFunction\n): Listener => {\n  const func = typeof callback === 'function' ? callback : xin[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(\n      `observe expects a function or path to a function, ${\n        callback as string\n      } is neither`\n    )\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(\n  registry,\n  regHandler('', false)\n)\n\nconst boxed = new Proxy<XinObject, XinProxyObject>(\n  registry,\n  regHandler('', true)\n)\n\nexport {\n  xin,\n  boxed,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings,\n}\n","export const settings = {\n  debug: false,\n  perf: false,\n}\n","import {\n  PathTestFunction,\n  ObserverCallbackFunction,\n  AnyFunction,\n} from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: AnyFunction\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor(\n    test: string | RegExp | PathTestFunction,\n    callback: string | ObserverCallbackFunction\n  ) {\n    const callbackDescription =\n      typeof callback === 'string'\n        ? `\"${callback}\"`\n        : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = (t) =>\n        typeof t === 'string' &&\n        t !== '' &&\n        (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter((listener) => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" at \"${path}\"`\n          )\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach((listener) => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" handling \"${path}\"`\n          )\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise((resolve) => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update) as unknown as number\n  }\n\n  if (\n    touchedPaths.find((touchedPath) => path.startsWith(touchedPath)) == null\n  ) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: ObserverCallbackFunction\n): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","import { XinObject, XinProxy, XinBinding, XinEventHandler } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T>(x: T): T {\n  return (\n    typeof x === 'object' && x !== null\n      ? (x as unknown as XinProxy)[XIN_VALUE] || x\n      : x\n  ) as T\n}\n\nexport interface DataBinding<T = Element> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> =\n  new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element),\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof Element) {\n    const dataBindings = elementToBindings.get(element as Element)\n    const eventHandlers = elementToHandlers.get(element as Element)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement\n    ? element.content.childNodes\n    : element.childNodes) {\n    if (node instanceof Element || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<Element, XinObject> = new WeakMap()\n\nexport const getListItem = (element: Element): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { XinObject, XinArray, AnyFunction } from './xin-types'\n\ntype Scalar = string | boolean | number | AnyFunction\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone(obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string =>\n  new Date(parseInt('1000000000', 36) + Date.now())\n    .valueOf()\n    .toString(36)\n    .slice(1)\nlet _seq = 0\nconst seq = (): string =>\n  (parseInt('10000', 36) + ++_seq).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts(path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap(array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[(item._auto_ as string) + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[(getByPath(item, idPath) as string) + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap(array: XinObject[], idPath: string): IdPathMap {\n  if (\n    idPathMaps.get(array) === undefined ||\n    idPathMaps.get(array)[idPath] === undefined\n  ) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex(array: XinObject[], idPath: string, idValue: any): number {\n  idValue = (idValue as string) + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (\n    idx === undefined ||\n    (getByPath(array[idx], idPath) as string) + '' !== idValue\n  ) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey(obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath(\n  array: any[],\n  idPath: string,\n  idValue: string,\n  valueToInsert?: any\n): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (\n      idPath !== '' &&\n      (getByPath(valueToInsert, idPath) as string) + '' === idValue + ''\n    ) {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray(obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject(obj: any): void {\n  if (obj == null || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath(obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath(\n  orig: XinObject | XinArray,\n  path: string,\n  val: any\n): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while (obj != null && parts.length > 0) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(\n          obj as any[],\n          idPath,\n          idValue,\n          parts.length > 0 ? _newObject_ : val\n        )\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            ;(obj as XinArray)[idx] = val\n          } else {\n            ;(obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && part.length > 0) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if (part.length > 0 || parts.length > 0) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey(obj as XinObject, key, part.length > 0 ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            ;(obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath(orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error =>\n  new Error(messages.map(stringify).join(' '))\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM(element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM(element: HTMLElement) {\n      return getValue(element as ValueElement)\n    },\n  },\n\n  text: {\n    toDOM(element: HTMLElement, value: any) {\n      element.textContent = value\n    },\n  },\n\n  enabled: {\n    toDOM(element: HTMLElement, value: any) {\n      ;(element as HTMLInputElement).disabled = !value\n    },\n  },\n\n  disabled: {\n    toDOM(element: HTMLElement, value: any) {\n      ;(element as HTMLInputElement).disabled = Boolean(value)\n    },\n  },\n\n  style: {\n    toDOM(element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error typescript has a strange/incorrect idea of what element.style is\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    },\n  },\n\n  list: {\n    toDOM(element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    },\n  },\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport {\n  cloneWithBindings,\n  elementToItem,\n  elementToBindings,\n  BOUND_SELECTOR,\n  DataBinding,\n  xinValue,\n  xinPath,\n} from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ninterface ListBindingOptions {\n  idPath?: string\n  virtual?: { height: number; width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings(element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor(boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error(\n        'ListBinding expects an element with exactly one child element'\n      )\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error(\n          'ListBinding expects a template with exactly one child element'\n        )\n      }\n      this.template = cloneWithBindings(\n        template.content.children[0]\n      ) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice(): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns =\n        virtual.width != null\n          ? Math.max(1, Math.floor(width / virtual.width))\n          : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(\n        totalRows * virtual.height - height - topBuffer,\n        0\n      )\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer,\n    }\n  }\n\n  update(array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { hiddenProp, visibleProp } = this.options\n\n    const arrayPath: string = xinPath(array) as string\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle(\n      '-xin-empty-list',\n      slice.items.length === 0\n    )\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(\n            element,\n            insertionPoint.nextElementSibling\n          )\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\ninterface ListBoundElement extends HTMLElement {\n  [listBindingRef]?: ListBinding\n}\n\nexport const getListBinding = (\n  boundElement: ListBoundElement,\n  options?: ListBindingOptions\n): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding === undefined) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (\n    element instanceof HTMLSelectElement &&\n    element.hasAttribute('multiple')\n  ) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      ;(element as HTMLInputElement).checked =\n        (element as HTMLInputElement).value === newValue\n      break\n    case 'checkbox':\n      ;(element as HTMLInputElement).checked = !!newValue\n      break\n    case 'date':\n      ;(element as HTMLInputElement).valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [\n        ...(element as HTMLSelectElement).querySelectorAll('option'),\n      ] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      ;(element as HTMLInputElement).value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio': {\n      const radio = element.parentElement?.querySelector(\n        `[name=\"${element.name}\"]:checked`\n      ) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      return (element as HTMLInputElement).checked\n    case 'date':\n      return (element as HTMLInputElement).valueAsDate?.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')].reduce(\n        (map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        },\n        {}\n      )\n    default:\n      return element.value\n  }\n}\n\nconst { ResizeObserver } = globalThis\nexport const resizeObserver =\n  ResizeObserver != null\n    ? new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const element = entry.target\n          dispatch(element, 'resize')\n        }\n      })\n    : {\n        observe() {},\n        unobserve() {},\n      }\n\nexport const appendContentToElement = (\n  elt: Element | ShadowRoot | null | undefined,\n  content: ContentType | null | undefined,\n  cloneElements = true\n): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach((node) => {\n        elt.append(\n          node instanceof Node && cloneElements ? cloneWithBindings(node) : node\n        )\n      })\n    } else if (content instanceof Node) {\n      elt.append(cloneElements ? cloneWithBindings(content) : content)\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval) as unknown as number\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval) as unknown as number\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule } from './css-types'\n\nexport function StyleSheet(id: string, styleSpec: XinStyleSheet) {\n  const element = elements.style(css(styleSpec))\n  element.id = id\n  document.head.append(element)\n}\n\nconst numericProps = [\n  'animation-iteration-count',\n  'flex',\n  'flex-base',\n  'flex-grow',\n  'flex-shrink',\n  'opacity',\n  'order',\n  'tab-size',\n  'widows',\n  'z-index',\n  'zoom',\n]\n\nexport const processProp = (\n  prop: string,\n  value: string | number\n): { prop: string; value: string } => {\n  if (typeof value === 'number' && !numericProps.includes(prop)) {\n    value = `${value}px`\n  }\n  if (prop.startsWith('_')) {\n    if (prop.startsWith('__')) {\n      prop = '--' + prop.substring(2)\n      value = `var(${prop}-default, ${value})`\n    } else {\n      prop = '--' + prop.substring(1)\n    }\n  }\n  return {\n    prop,\n    value: String(value),\n  }\n}\n\nconst renderProp = (\n  indentation: string,\n  cssProp: string,\n  value: string | number | Color | undefined\n): string => {\n  if (value === undefined) {\n    return ''\n  }\n  if (value instanceof Color) {\n    value = value.html\n  }\n  const processed = processProp(cssProp, value)\n  return `${indentation}  ${processed.prop}: ${processed.value};`\n}\n\nconst renderStatement = (\n  key: string,\n  value: Color | string | number | XinStyleRule | undefined,\n  indentation = ''\n): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object' && !(value instanceof Color)) {\n    const renderedRule = Object.keys(value)\n      .map((innerKey) =>\n        renderStatement(innerKey, value[innerKey], `${indentation}  `)\n      )\n      .join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (obj: XinStyleSheet, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map((prop) => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: {\n  [key: string]: string | number\n}): XinStyleRule => {\n  console.warn('initVars is deprecated. Just use _ and __ prefixes instead.')\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] =\n      typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  console.warn('darkMode is deprecated. Use inverseLuminance instead.')\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (\n      typeof value === 'string' &&\n      value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null\n    ) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const invertLuminance = (map: XinStyleRule): XinStyleRule => {\n  const inverted: XinStyleRule = {}\n\n  for (const key of Object.keys(map)) {\n    const value = map[key]\n    if (value instanceof Color) {\n      inverted[key] = value.inverseLuminance\n    } else if (\n      typeof value === 'string' &&\n      value.match(/^(#[0-9a-fA-F]{3}|rgba?\\(|hsla?\\()/)\n    ) {\n      inverted[key] = Color.fromCss(value).inverseLuminance\n    }\n  }\n\n  return inverted\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (target[prop] == null) {\n        prop = prop.replace(/[A-Z]/g, (x) => `-${x.toLocaleLowerCase()}`)\n        const [, _varName, , isNegative, scaleText, method] = prop.match(\n          /^([^\\d_]*)((_)?(\\d+)(\\w*))?$/\n        ) as string[]\n        const varName = `--${_varName}`\n        if (scaleText != null) {\n          const scale =\n            isNegative == null\n              ? Number(scaleText) / 100\n              : -Number(scaleText) / 100\n          switch (method) {\n            case 'b': // brighten\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).brighten(scale).rgba\n                    : Color.fromCss(baseColor).darken(-scale).rgba\n              }\n              break\n            case 's': // saturate\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).saturate(scale).rgba\n                    : Color.fromCss(baseColor).desaturate(-scale).rgba\n              }\n              break\n            case 'h': // hue\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n                console.log(\n                  Color.fromCss(baseColor).hsla,\n                  Color.fromCss(baseColor).rotate(scale).hsla\n                )\n              }\n              break\n            case 'o': // alpha\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n              }\n              break\n            case '':\n              target[prop] = `calc(var(${varName}) * ${scale})`\n              break\n            default:\n              console.error(method)\n              throw new Error(\n                `Unrecognized method ${method} for css variable ${varName}`\n              )\n          }\n        } else {\n          target[prop] = `var(${varName})`\n        }\n      }\n      return target[prop]\n    },\n  }\n)\n\ntype CssVarBuilder = (val: string | number) => string\n\nexport const varDefault = new Proxy<{ [key: string]: CssVarBuilder }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (target[prop] === undefined) {\n        const varName = `--${prop.replace(\n          /[A-Z]/g,\n          (x) => `-${x.toLocaleLowerCase()}`\n        )}`\n        target[prop] = (val: string | number) => `var(${varName}, ${val})`\n      }\n      return target[prop]\n    },\n  }\n)\n","import { lerp, clamp } from './more-math'\n\n// http://www.itu.int/rec/R-REC-BT.601\nconst bt601 = (r: number, g: number, b: number): number => {\n  return (0.299 * r + 0.587 * g + 0.114 * b) / 255\n}\n\nconst hex2 = (n: number): string =>\n  ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor(r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h =\n      s !== 0\n        ? l === r\n          ? (g - b) / s\n          : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n        : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span =\n  globalThis.document !== undefined\n    ? globalThis.document.createElement('span')\n    : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss(spec: string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl(h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(\n      `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n        0\n      )}%, ${a.toFixed(2)})`\n    )\n  }\n\n  constructor(r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : (a = 1)\n  }\n\n  get inverse(): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance(): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb(): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba(): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(\n      2\n    )})`\n  }\n\n  get RGBA(): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB(): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  private hslCached?: HslColor\n\n  get _hsl(): HslColor {\n    if (this.hslCached == null) {\n      this.hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this.hslCached\n  }\n\n  get hsl(): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%)`\n  }\n\n  get hsla(): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono(): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness(): number {\n    return bt601(this.r, this.g, this.b)\n  }\n\n  get html(): string {\n    return this.toString()\n  }\n\n  toString(): string {\n    return this.a === 1\n      ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b)\n      : '#' +\n          hex2(this.r) +\n          hex2(this.g) +\n          hex2(this.b) +\n          hex2(Math.floor(255 * this.a))\n  }\n\n  brighten(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  darken(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  saturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  desaturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  rotate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const hClamped = (h + 360 + amount) % 360\n    return Color.fromHsl(hClamped, s, l, this.a)\n  }\n\n  opacity(alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch(): Color {\n    const { r, g, b, a } = this\n    console.log(\n      `%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`,\n      `background-color: rgba(${r}, ${g}, ${b}, ${a})`,\n      'background-color: #eee'\n    )\n    return this\n  }\n\n  blend(otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n\n  mix(otherColor: Color, t: number): Color {\n    const a = this._hsl\n    const b = otherColor._hsl\n    return Color.fromHsl(\n      lerp(a.h, b.h, t),\n      lerp(a.s, b.s, t),\n      lerp(a.l, b.l, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp(min: number, v: number, max: number): number {\n  return v < min ? min : v > max ? max : v\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp,\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport {\n  ElementPart,\n  ElementProps,\n  ElementCreator,\n  StringMap,\n} from './xin-types'\nimport { camelToKabob } from './string-case'\nimport { processProp } from './css'\n\nconst MATH = 'http://www.w3.org/1998/Math/MathML'\nconst SVG = 'http://www.w3.org/2000/svg'\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: Element } = {}\n\nconst create = (tagType: string, ...contents: ElementPart[]): HTMLElement => {\n  if (templates[tagType] === undefined) {\n    const [tag, namespace] = tagType.split('|')\n    if (namespace === undefined) {\n      templates[tagType] = globalThis.document.createElement(tag)\n    } else {\n      templates[tagType] = globalThis.document.createElementNS(namespace, tag)\n    }\n  }\n  const elt = templates[tagType].cloneNode() as HTMLElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (\n      item instanceof Element ||\n      item instanceof DocumentFragment ||\n      typeof item === 'string' ||\n      typeof item === 'number'\n    ) {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          const processed = processProp(camelToKabob(prop), value[prop])\n          if (processed.prop.startsWith('--')) {\n            elt.style.setProperty(processed.prop, processed.value)\n          } else {\n            ;(elt.style as unknown as { [key: string]: string })[prop] =\n              processed.value\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key === 'bind') {\n      const binding =\n        typeof value.binding === 'string'\n          ? bindings[value.binding]\n          : value.binding\n      if (binding !== undefined && value.value !== undefined) {\n        bind(\n          elt,\n          value.value,\n          value.binding instanceof Function\n            ? { toDOM: value.binding }\n            : value.binding\n        )\n      } else {\n        throw new Error(`bad binding`)\n      }\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(\n          `${key} is not allowed, bindings.${bindingType} is not defined`\n        )\n      }\n    } else if ((elt as { [key: string]: any })[key] !== undefined) {\n      // MathML is only supported on 91% of browsers, and not on the Raspberry Pi Chromium\n      const { MathMLElement } = globalThis\n      if (\n        elt instanceof SVGElement ||\n        (MathMLElement !== undefined && elt instanceof MathMLElement)\n      ) {\n        elt.setAttribute(key, value)\n      } else {\n        ;(elt as { [key: string]: any })[key] = value\n      }\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      } else if ((elt as { [key: string]: any })[attr] !== undefined) {\n        ;(elt as StringMap)[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (\n  ...contents: ElementPart[]\n) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creates <my-element> elements.\n */\nexport const elements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      tagName = tagName.replace(/[A-Z]/g, (c) => `-${c.toLocaleLowerCase()}`)\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(tagName, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as ElementsProxy\n\ninterface SVGElementsProxy {\n  [key: string]: ElementCreator<SVGElement>\n}\n\nexport const svgElements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${SVG}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as SVGElementsProxy\n\ninterface MathMLElementsProxy {\n  [key: string]: ElementCreator<MathMLElement>\n}\n\nexport const mathML = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${MATH}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as MathMLElementsProxy\n","export function camelToKabob(s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel(s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, ContentType, PartsMap } from './xin-types'\n\nlet anonymousElementCount = 0\n\nfunction anonElementTag(): string {\n  return `custom-elt${(anonymousElementCount++).toString(36)}`\n}\nlet instanceCount = 0\n\ninterface ElementCreatorOptions extends ElementDefinitionOptions {\n  tag?: string\n  styleSpec?: XinStyleSheet\n}\n\nconst globalStyleSheets: {\n  [key: string]: string\n} = {}\n\nfunction setGlobalStyle(tagName: string, styleSpec: XinStyleSheet) {\n  const existing = globalStyleSheets[tagName]\n  const processed = css(styleSpec).replace(/:host\\b/g, tagName)\n  globalStyleSheets[tagName] = existing\n    ? existing + '\\n' + processed\n    : processed\n}\n\nfunction insertGlobalStyles(tagName: string) {\n  if (globalStyleSheets[tagName]) {\n    document.head.append(\n      elements.style({ id: tagName + '-component' }, globalStyleSheets[tagName])\n    )\n  }\n  delete globalStyleSheets[tagName]\n}\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static globalStyleSheets: HTMLStyleElement[] = []\n  private static _elementCreator?: ElementCreator<Component>\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  static styleSpec?: XinStyleSheet\n  static styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  isSlotted?: boolean\n  private static _tagName: null | string = null\n  static get tagName(): null | string {\n    return this._tagName\n  }\n  [key: string]: any\n\n  static StyleNode(styleSpec: XinStyleSheet): HTMLStyleElement {\n    console.warn(\n      'StyleNode is deprecated, just assign static styleSpec: XinStyleSheet to the class directly'\n    )\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator(options: ElementCreatorOptions = {}): ElementCreator {\n    if (this._elementCreator == null) {\n      const { tag, styleSpec } = options\n      let tagName = options != null ? tag : null\n      if (tagName == null) {\n        if (typeof this.name === 'string' && this.name !== '') {\n          tagName = camelToKabob(this.name)\n          if (tagName.startsWith('-')) {\n            tagName = tagName.slice(1)\n          }\n        } else {\n          tagName = anonElementTag()\n        }\n      }\n      if (customElements.get(tagName) != null) {\n        console.warn(`${tagName} is already defined`)\n      }\n      if (tagName.match(/\\w+(-\\w+)+/) == null) {\n        console.warn(`${tagName} is not a legal tag for a custom-element`)\n        tagName = anonElementTag()\n      }\n      while (customElements.get(tagName) !== undefined) {\n        tagName = anonElementTag()\n      }\n      window.customElements.define(\n        tagName,\n        this as unknown as CustomElementConstructor,\n        options\n      )\n      this._tagName = tagName\n      this._elementCreator = elements[tagName]\n      if (styleSpec !== undefined) {\n        setGlobalStyle(tagName, styleSpec)\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes(...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues: { [key: string]: any } = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        triggerRender = !!(\n          mutation.attributeName &&\n          attributeNames.includes(kabobToCamel(mutation.attributeName))\n        )\n      })\n      if (triggerRender && this.queueRender !== undefined)\n        this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach((attributeName) => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get() {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            } else if (attributeValues[attributeName] !== undefined) {\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set(value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (\n              typeof value === 'object' ||\n              `${value as string}` !== `${this[attributeName] as string}`\n            ) {\n              if (\n                value === null ||\n                value === undefined ||\n                typeof value === 'object'\n              ) {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              attributeValues[attributeName] = value\n            }\n          }\n        },\n      })\n    })\n  }\n\n  private initValue(): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (\n      valueDescriptor === undefined ||\n      valueDescriptor.get !== undefined ||\n      valueDescriptor.set !== undefined\n    ) {\n      return\n    }\n    let value = this.hasAttribute('value')\n      ? this.getAttribute('value')\n      : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get() {\n        return value\n      },\n      set(newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      },\n    })\n  }\n\n  private _parts?: PartsMap\n  get parts(): PartsMap {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._parts == null) {\n      this._parts = new Proxy(\n        {},\n        {\n          get(target: PartsMap, ref: string) {\n            if (target[ref] === undefined) {\n              let element = root.querySelector(`[part=\"${ref}\"]`)\n              if (element == null) {\n                element = root.querySelector(ref)\n              }\n              if (element == null)\n                throw new Error(`elementRef \"${ref}\" does not exist!`)\n              element.removeAttribute('data-ref')\n              target[ref] = element as HTMLElement\n            }\n            return target[ref]\n          },\n        }\n      )\n    }\n    return this._parts\n  }\n\n  constructor() {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback(): void {\n    insertGlobalStyles((this.constructor as unknown as Component).tagName)\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback(): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender(triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate(): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const cloneElements = typeof this.content !== 'function'\n      const _content: ContentType | null =\n        typeof this.content === 'function' ? this.content() : this.content\n\n      const { styleSpec } = this.constructor as unknown as Component\n      let { styleNode } = this.constructor as unknown as Component\n      if (styleSpec) {\n        styleNode = (this.constructor as unknown as Component).styleNode =\n          elements.style(css(styleSpec))\n        delete (this.constructor as unknown as Component).styleNode\n      }\n      if (this.styleNode) {\n        console.warn(\n          this,\n          'styleNode is deprecrated, use static styleNode or statc styleSpec instead'\n        )\n        styleNode = this.styleNode\n      }\n      if (styleNode) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(styleNode.cloneNode(true))\n        appendContentToElement(shadow, _content, cloneElements)\n      } else if (_content !== null) {\n        const existingChildren = [...this.childNodes]\n        appendContentToElement(this as HTMLElement, _content, cloneElements)\n        this.isSlotted = this.querySelector('slot,xin-slot') !== undefined\n        const slots = [...this.querySelectorAll('slot')]\n        if (slots.length > 0) {\n          slots.forEach(XinSlot.replaceSlot)\n        }\n        if (existingChildren.length > 0) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          ;[...this.querySelectorAll('xin-slot')].forEach((slot) => {\n            slotMap[(slot as XinSlot).name] = slot\n          })\n          existingChildren.forEach((child) => {\n            const defaultSlot = slotMap['']\n            const destSlot =\n              child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render(): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  static replaceSlot(slot: HTMLSlotElement): void {\n    const _slot = document.createElement('xin-slot')\n    if (slot.name !== '') {\n      _slot.setAttribute('name', slot.name)\n    }\n    slot.replaceWith(_slot)\n  }\n\n  constructor() {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport {\n  XinObject,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { Color } from './color'\nimport { Component } from './component'\nimport { vars, varDefault } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { elements } from './elements'\nimport { ElementCreator } from './xin-types'\n// import { xinProxy } from './xin-proxy'\n\nexport interface XinFactory {\n  Component: typeof Component\n  elements: typeof elements\n  vars: typeof vars\n  // xinProxy: typeof xinProxy\n  varDefault: typeof varDefault\n  Color: typeof Color\n}\n\nexport interface XinComponentSpec {\n  type: typeof Component\n  styleSpec?: XinStyleSheet\n}\n\nexport interface XinPackagedComponent {\n  type: typeof Component\n  creator: ElementCreator\n}\n\nexport type XinBlueprint = (tag: string, module: XinFactory) => XinComponentSpec\n\nexport function makeComponent(\n  tag: string,\n  blueprint: XinBlueprint\n): XinPackagedComponent {\n  const { type, styleSpec } = blueprint(tag, {\n    Color,\n    Component,\n    elements,\n    varDefault,\n    vars /*, xinProxy */,\n  })\n  return {\n    type,\n    creator: type.elementCreator({ tag, styleSpec }),\n  }\n}\n\nexport async function importComponent(\n  tag: string,\n  url: string\n): Promise<XinPackagedComponent> {\n  const blueprint = (await import(url)).default\n  return blueprint(tag, { Component, elements, vars, varDefault, Color })\n}\n","import { Component } from './component'\nimport { elements } from './elements'\n\nconst { span, slot } = elements\n\ntype TestExpression = () => Promise<boolean> | boolean\n\nexport class XinTest extends Component {\n  test: TestExpression = () => true\n  delay = 0\n  statis = ''\n  expect = true\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms)\n    })\n  }\n\n  static styleSpec = {\n    ':host': {\n      display: 'flex',\n      gap: '5px',\n      alignItems: 'center',\n    },\n    ':host [part=\"outcome\"]': {\n      display: 'inline-block',\n      borderRadius: '99px',\n      padding: '0 12px',\n      fontSize: '80%',\n    },\n    ':host .waiting': {\n      background: '#ff04',\n    },\n    ':host .running': {\n      background: '#f804',\n    },\n    ':host .success': {\n      background: '#0f04',\n    },\n    ':host .failed': {\n      background: '#f004',\n    },\n    ':host .exception': {\n      color: 'white',\n      background: 'red',\n    },\n  }\n\n  private timeout?: number\n\n  content = [span({ part: 'description' }, slot()), span({ part: 'outcome' })]\n\n  constructor() {\n    super()\n    this.initAttributes('description', 'delay', 'status')\n  }\n\n  run = () => {\n    clearTimeout(this.timeout)\n    this.status = 'waiting'\n    this.timeout = setTimeout(async () => {\n      this.status = 'running'\n      try {\n        const outcome = JSON.stringify(await this.test())\n        if (outcome === JSON.stringify(this.expect)) {\n          this.status = 'success'\n        } else {\n          this.status = `failed: got ${outcome}, expected ${this.expect}`\n        }\n      } catch (err) {\n        this.status = `exception: ${err}`\n      }\n    }, this.delay) as unknown as number\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.run()\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback()\n    this.class\n    clearTimeout(this.timeout)\n  }\n\n  render(): void {\n    super.render()\n    const { outcome } = this.parts\n    outcome.textContent = this.status\n    outcome.setAttribute('class', this.status.match(/\\w+/)[0])\n  }\n}\n\nexport const xinTest = XinTest.elementCreator({ tag: 'xin-test' })\n","import { XIN_PATH, XIN_VALUE } from './metadata'\nimport { XinStyleRule } from './css-types'\n\nexport type AnyFunction = (...args: any[]) => any | Promise<any>\n\nexport type AnyObject = { [key: string | symbol | number]: any }\n\nexport type XinScalar = string | boolean | number | symbol | AnyFunction\n\nexport type XinArray = any[]\n\nexport interface XinObject {\n  [key: string | number | symbol]: any\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport interface XinProps {\n  [XIN_VALUE]: XinObject | XinObject | XinScalar\n  [XIN_PATH]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]:\n    | XinProxyObject\n    | XinProxyArray\n    | XinObject\n    | XinArray\n    | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (\n    | XinProxyObject[]\n    | XinScalar[]\n  )\nexport type XinProxy = XinProps & (XinObject | XinArray)\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\nexport type XinTouchableType = string | XinProps\nexport type XinEventHandler<T = Event> =\n  | ((evt: T) => void)\n  | ((evt: T) => Promise<void>)\n  | string\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction =\n  | ((path: string) => void)\n  | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType | any\n  [key: string]: any\n}\n\nexport type XinBindingSetter<T = HTMLElement> = (\n  element: T,\n  value: any,\n  options?: XinObject\n) => void\nexport type XinBindingGetter<T = HTMLElement> = (\n  element: T,\n  options?: XinObject\n) => any\n\nexport interface XinBinding<T = HTMLElement> {\n  toDOM?: XinBindingSetter<T>\n  fromDOM?: XinBindingGetter<T>\n}\n\nexport interface XinInlineBinding {\n  value: XinTouchableType\n  binding: XinBinding | XinBindingSetter | string\n}\n\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bind?: XinInlineBinding\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  style?: XinStyleRule\n  class?: string\n  apply?: (element: HTMLElement) => void | Promise<void>\n  [key: string]: any\n}\n\nexport interface StringMap {\n  [key: string]: any\n}\n\nexport interface PartsMap {\n  [key: string]: HTMLElement\n}\n\nexport type ValueElement =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement\nexport type ElementPart =\n  | Element\n  | DocumentFragment\n  | ElementProps\n  | string\n  | number\nexport type HTMLElementCreator<T extends Node = HTMLElement> = (\n  ...contents: ElementPart[]\n) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = HTMLElement> = (\n  ...contents: ElementPart[]\n) => T\nexport type ContentPart = Element | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n","import { XinProxyObject, AnyObject } from './xin-types'\nimport { xin, boxed } from './xin'\n\nexport function xinProxy<T extends AnyObject>(\n  obj: T,\n  boxScalars = false\n): T & XinProxyObject {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    xin[key] = (obj as { [key: string]: any })[key]\n    registered[key] = boxScalars\n      ? (boxed[key] as XinProxyObject)\n      : (xin[key] as XinProxyObject)\n  })\n  return registered as T & XinProxyObject\n}\n"],"names":["$de0f84e31db1d985$var$updatePromise","$de0f84e31db1d985$var$resolveUpdate","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$431d87cffae1b706$export$a5a6e0b888b2c992","debug","perf","$324ad9265fd7ec5b$export$b7d58db314e0ac27","obj","Array","isArray","map","clone","key","val","$fc871d27afcbf39a$export$c6592bbc1eebb717","$fc871d27afcbf39a$export$4c0223f67078aeac","$fc871d27afcbf39a$export$6a7099543a9795c7","$fc871d27afcbf39a$export$21d9322c3477441b","$fc871d27afcbf39a$export$a3622eb3b5dd592a","Symbol","$fc871d27afcbf39a$export$bdd0d039ad781534","$fc871d27afcbf39a$export$40700dafb97c3799","x","$fc871d27afcbf39a$export$5dcba2d45033d435","$fc871d27afcbf39a$export$fe712848e6e66613","WeakMap","$fc871d27afcbf39a$export$1f922de8d0ecbb7e","$fc871d27afcbf39a$export$fa8cc6a36b1ccd7f","element","cloned","cloneNode","Element","dataBindings","eventHandlers","node","HTMLTemplateElement","content","childNodes","DocumentFragment","appendChild","$fc871d27afcbf39a$export$86caed35dd837d06","$fc871d27afcbf39a$export$4c309843c07ce679","html","document","body","parentElement","item","$de0f84e31db1d985$export$253d09664e30b967","$de0f84e31db1d985$export$58bed631278dbc67","$de0f84e31db1d985$var$touchedPaths","$de0f84e31db1d985$var$updateTriggered","$de0f84e31db1d985$export$c92b1d5f43586026","constructor","test","callback","testDescription","callbackDescription","name","t","startsWith","RegExp","bind","toString","Function","Error","description","push","$de0f84e31db1d985$export$1c2919332513559b","undefined","$de0f84e31db1d985$var$update","console","time","paths","path","filter","listener","heard","$de0f84e31db1d985$export$23a2283368c55ea2","forEach","outcome","error","splice","timeEnd","$de0f84e31db1d985$export$d0b7ea69ab6056df","touchable","Promise","resolve","setTimeout","find","touchedPath","$de0f84e31db1d985$export$d1203567a167490e","index","indexOf","$9c8ee0b1e1b7d62b$var$stringify","JSON","stringify","_","$9c8ee0b1e1b7d62b$export$5a4bb2b1c89bdce7","messages","join","$90757103be394558$var$now36","Date","parseInt","now","valueOf","slice","$90757103be394558$var$_seq","$90757103be394558$var$seq","$90757103be394558$var$id","$90757103be394558$var$_delete_","$90757103be394558$var$_newObject_","$90757103be394558$export$f5d2dd4cfd729958","parts","length","search","split","part","$90757103be394558$var$idPathMaps","$90757103be394558$var$buildIdPathValueMap","array","idPath","idx","_auto_","$90757103be394558$export$44b5bed83342a92f","$90757103be394558$var$byIdPath","idValue","valueToInsert","$90757103be394558$var$getIdPathMap","delete","$90757103be394558$var$expectArray","$90757103be394558$var$expectObject","i","iMax","j","jMax","found","includes","tail","$5d68f8b093886143$var$ARRAY_MUTATIONS","$5d68f8b093886143$var$registry","$5d68f8b093886143$var$validPath","$5d68f8b093886143$export$a678af82bf766611","$5d68f8b093886143$var$extendPath","prop","match","$5d68f8b093886143$var$boxes","string","String","boolean","b","Boolean","bigint","symbol","number","Number","$5d68f8b093886143$var$box","Proxy","$5d68f8b093886143$var$regHandler","boxScalars","target","_prop","compoundProp","basePath","subPath","currentPath","value","endsWith","substring","needle","candidate","items","result","prototype","apply","fullPath","existing","$5d68f8b093886143$export$966034e6c6823eb0","orig","shift","equalsOffset","hasOwnProperty","call","$5d68f8b093886143$export$d1203567a167490e","func","$5d68f8b093886143$export$fd1b43749dd321e5","$d165020245160cdf$var$document","MutationObserver","$d165020245160cdf$var$MutationObserver","globalThis","$d165020245160cdf$export$80bf2f765c31be6a","changedPath","dataBinding","binding","options","toDOM","dataSource","observer","mutationsList","mutation","addedNodes","querySelectorAll","observe","subtree","childList","boundElements","$d165020245160cdf$var$handleChange","event","closest","fromDOM","existingActual","valueActual","$d165020245160cdf$export$2385a24977818dd0","what","classList","add","addEventListener","$d165020245160cdf$var$handledEventTypes","Set","$d165020245160cdf$var$handleBoundEvent","propagationStopped","wrappedEvent","stopPropagation","eventBindings","handlers","type","handler","$d165020245160cdf$export$af631764ddc44097","eventType","eventHandler","has","$4f9ba97dad88433d$export$635e15bbd66f01ea","Event","dispatchEvent","$4f9ba97dad88433d$var$valueType","HTMLInputElement","HTMLSelectElement","hasAttribute","$4f9ba97dad88433d$export$80746c6bc6142fc8","newValue","checked","valueAsDate","option","selected","$4f9ba97dad88433d$export$bf7199a9ebcb84a9","radio","querySelector","toISOString","reduce","ResizeObserver","$4f9ba97dad88433d$var$ResizeObserver","$4f9ba97dad88433d$export$b13421f1ae71d316","entries","entry","unobserve","$4f9ba97dad88433d$export$6bb13967611cdb1","elt","cloneElements","textContent","append","Node","$4a3ba1b45110c477$export$61fc7d43ac8f84b0","origFn","minInterval","debounceId","args","clearTimeout","$4a3ba1b45110c477$export$de363e709c412c8a","previousCall","inFlight","$01a9fd6c1733697a$var$listBindingRef","$01a9fd6c1733697a$var$updateRelativeBindings","boundElement","matches","unshift","bindings","$01a9fd6c1733697a$var$ListBinding","_array","itemToElement","children","template","remove","listTop","createElement","listBottom","virtual","_update","update","visibleSlice","hiddenProp","visibleProp","visibleArray","firstItem","lastItem","topBuffer","bottomBuffer","width","offsetWidth","height","offsetHeight","visibleColumns","Math","max","floor","visibleRows","ceil","totalRows","topRow","scrollTop","isSlice","arrayPath","toggle","previousSlice","_previousSlice","removed","moved","created","proxy","style","elements","insertBefore","itemPath","insertionPoint","previousElementSibling","nextElementSibling","log","$01a9fd6c1733697a$export$b0eb386be3b9fed8","listBinding","$3a4453529c7602e5$export$97a1a3e6f39778d2","text","enabled","disabled","keys","setAttribute","list","$35ded60743a49eea$export$7d15b64cf5a3a4c4","min","$35ded60743a49eea$export$3a89f8d6f6bf6c9f","a","$35ded60743a49eea$export$5e0dd9fd5d74e0c5","clamp","lerp","$ebe12b957d7ffb42$var$bt601","r","g","$ebe12b957d7ffb42$var$hex2","round","$ebe12b957d7ffb42$var$HslColor","l","h","$ebe12b957d7ffb42$var$span","$ebe12b957d7ffb42$export$892596cec99bc70e","fromCss","spec","converted","HTMLSpanElement","color","getComputedStyle","fromHsl","toFixed","inverse","inverseLuminance","_hsl","rgb","rgba","RGBA","ARGB","hslCached","hsl","hsla","mono","brightness","brighten","amount","lClamped","darken","saturate","sClamped","desaturate","rotate","opacity","alpha","swatch","blend","otherColor","mix","$8287b4a0c42d6d79$export$87ae551bf60f4bb","replace","c","toLocaleLowerCase","$1fadd05c13944ca9$var$templates","$1fadd05c13944ca9$var$create","tagType","contents","tag","namespace","createElementNS","elementProps","assign","processed","$4d116130f980647c$export$4f8a9e649bc1f08b","setProperty","toLowerCase","bindingType","MathMLElement","SVGElement","attr","className","removeAttribute","$1fadd05c13944ca9$var$fragment","frag","createDocumentFragment","$1fadd05c13944ca9$export$7a5d735b2ab6389d","fragment","tagName","$1fadd05c13944ca9$export$cf20112a1bc148da","$1fadd05c13944ca9$export$8ec252cfdd664597","$4d116130f980647c$export$9d753cd7ae895cce","id","styleSpec","$4d116130f980647c$export$dbf350e5966cf602","head","$4d116130f980647c$var$numericProps","$4d116130f980647c$var$renderProp","indentation","cssProp","$4d116130f980647c$var$renderStatement","renderedRule","innerKey","selectors","selector","rule","$4d116130f980647c$export$90d0ea046136e3ed","warn","kabobKey","$4d116130f980647c$export$808aaf1b460dc9af","$4d116130f980647c$export$8279dba9b7d4e420","inverted","$4d116130f980647c$export$3cb96c9f6c8d16a4","_varName","isNegative","scaleText","method","varName","scale","baseColor","getPropertyValue","$4d116130f980647c$export$75c0e6adb3e38f31","$065ec34f90b90178$var$anonymousElementCount","$065ec34f90b90178$var$anonElementTag","$065ec34f90b90178$var$instanceCount","$065ec34f90b90178$var$globalStyleSheets","$065ec34f90b90178$export$16fa2f45be04daa8","HTMLElement","_1","globalStyleSheets","_2","_tagName","StyleNode","elementCreator","_elementCreator","customElements","window","define","$065ec34f90b90178$var$setGlobalStyle","initAttributes","attributeNames","attributes","attributeValues","triggerRender","attributeName","toLocaleUpperCase","queueRender","attributeKabob","parseFloat","getAttribute","initValue","valueDescriptor","getOwnPropertyDescriptor","root","shadowRoot","_parts","ref","slot","_changeQueued","_renderQueued","_hydrated","instanceId","_value","defaultValue","connectedCallback","hydrate","role","onResize","_onResize","disconnectedCallback","triggerChangeEvent","requestAnimationFrame","render","_content","styleNode","shadow","attachShadow","mode","existingChildren","isSlotted","slots","$065ec34f90b90178$var$XinSlot","replaceSlot","slotMap","child","defaultSlot","destSlot","_slot","replaceWith","$b71156193afa7077$export$93b87f7746612069","savedState","localStorage","getItem","state","parse","saveState","setItem","$bd988bd6d6d6ff33$export$3bc26eec1cc2439f","blueprint","Color","Component","varDefault","vars","creator","$bd988bd6d6d6ff33$export$1c9780fc8943eebd","url","default","$11c940022681efe2$exports","$11c940022681efe2$export$e8658328209d5943","$11c940022681efe2$export$b1604b020b2ce76d","span","$11c940022681efe2$var$span","$11c940022681efe2$var$slot","delay","ms","display","gap","alignItems","borderRadius","padding","fontSize","background","statis","expect","run","timeout","status","err","class","$7c408001ca0a23f8$export$95a552d2395ab4c4","registered","on","css","invertLuminance","darkMode","initVars","StyleSheet","svgElements","mathML","hotReload","getListItem","xinPath","xinValue","makeComponent","importComponent","MoreMath","settings","throttle","debounce","xin","touch","observerShouldBeRemoved","updates","xinProxy","XinTest","xinTest"],"version":3,"file":"index.js.map"}