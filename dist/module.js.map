{
  "version": 3,
  "sources": ["../src/settings.ts", "../src/deep-clone.ts", "../src/metadata.ts", "../src/path-listener.ts", "../src/make-error.ts", "../src/by-path.ts", "../src/xin.ts", "../src/bind.ts", "../src/dom.ts", "../src/throttle.ts", "../src/list-binding.ts", "../src/bindings.ts", "../src/more-math.ts", "../src/color.ts", "../src/string-case.ts", "../src/elements.ts", "../src/css.ts", "../src/component.ts", "../src/hot-reload.ts", "../src/version.ts", "../src/xin-proxy.ts", "../src/make-component.ts", "../src/blueprint-loader.ts"],
  "sourcesContent": [
    "export const settings = {\n  debug: false,\n  perf: false,\n}\n",
    "import { XinObject, XinArray, AnyFunction } from './xin-types'\n\ntype Scalar = string | boolean | number | AnyFunction\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone(obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n",
    "import {\n  XinObject,\n  XinProps,\n  XinBinding,\n  XinEventHandler,\n  Unboxed,\n} from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = 'xinPath'\nexport const XIN_VALUE = 'xinValue'\nexport const XIN_OBSERVE = 'xinObserve'\nexport const XIN_BIND = 'xinBind'\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T>(x: T): Unboxed<T> {\n  return (\n    typeof x === 'object' && x !== null\n      ? (x as unknown as XinProps)[XIN_VALUE] || x\n      : x\n  ) as Unboxed<T>\n}\n\nexport interface DataBinding<T = Element> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> =\n  new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element),\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof Element) {\n    const dataBindings = elementToBindings.get(element as Element)\n    const eventHandlers = elementToHandlers.get(element as Element)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement\n    ? element.content.childNodes\n    : element.childNodes) {\n    if (node instanceof Element || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<Element, XinObject> = new WeakMap()\n\nexport const getListItem = (element: Element): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n",
    "import {\n  PathTestFunction,\n  ObserverCallbackFunction,\n  AnyFunction,\n} from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: AnyFunction\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor(\n    test: string | RegExp | PathTestFunction,\n    callback: string | ObserverCallbackFunction\n  ) {\n    const callbackDescription =\n      typeof callback === 'string'\n        ? `\"${callback}\"`\n        : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = (t) =>\n        typeof t === 'string' &&\n        t !== '' &&\n        (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = Array.from(touchedPaths)\n\n  for (const path of paths) {\n    listeners\n      .filter((listener) => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" at \"${path}\"`\n          )\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach((listener) => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" handling \"${path}\"`\n          )\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise((resolve) => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update) as unknown as number\n  }\n\n  if (\n    touchedPaths.find((touchedPath) => path.startsWith(touchedPath)) == null\n  ) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: ObserverCallbackFunction\n): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n",
    "const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error =>\n  new Error(messages.map(stringify).join(' '))\n",
    "// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string =>\n  new Date(parseInt('1000000000', 36) + Date.now())\n    .valueOf()\n    .toString(36)\n    .slice(1)\nlet _seq = 0\nconst seq = (): string =>\n  (parseInt('10000', 36) + ++_seq).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts(path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap(array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[(item._auto_ as string) + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[(getByPath(item, idPath) as string) + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap(array: XinObject[], idPath: string): IdPathMap {\n  if (\n    idPathMaps.get(array) === undefined ||\n    idPathMaps.get(array)[idPath] === undefined\n  ) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex(array: XinObject[], idPath: string, idValue: any): number {\n  idValue = (idValue as string) + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (\n    idx === undefined ||\n    (getByPath(array[idx], idPath) as string) + '' !== idValue\n  ) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey(obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath(\n  array: any[],\n  idPath: string,\n  idValue: string,\n  valueToInsert?: any\n): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (\n      idPath !== '' &&\n      (getByPath(valueToInsert, idPath) as string) + '' === idValue + ''\n    ) {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray(obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject(obj: any): void {\n  if (obj == null || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath(obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath(\n  orig: XinObject | XinArray,\n  path: string,\n  val: any\n): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while (obj != null && parts.length > 0) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(\n          obj as any[],\n          idPath,\n          idValue,\n          parts.length > 0 ? _newObject_ : val\n        )\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            ;(obj as XinArray)[idx] = val\n          } else {\n            ;(obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && part.length > 0) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if (part.length > 0 || parts.length > 0) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey(obj as XinObject, key, part.length > 0 ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            ;(obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath(orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n",
    "import {\n  XinProxyObject,\n  XinProxyTarget,\n  XinObject,\n  XinProxy,\n  BoxedProxy,\n  XinArray,\n  XinValue,\n  XinBinding,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { settings } from './settings'\nimport {\n  Listener,\n  touch,\n  observe as _observe,\n  unobserve,\n  updates,\n  observerShouldBeRemoved,\n} from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { bind } from './bind'\nimport {\n  xinValue,\n  XIN_VALUE,\n  XIN_PATH,\n  XIN_OBSERVE,\n  XIN_BIND,\n} from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ) => { proxy: P; revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = [\n  'sort',\n  'splice',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'unshift',\n]\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath =\n  /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst boxes: { [key: string]: (x: any) => any } = {\n  string(s: string) {\n    return new String(s)\n  },\n  boolean(b: boolean) {\n    return new Boolean(b)\n  },\n  bigint(b: bigint) {\n    return b\n  },\n  symbol(s: symbol) {\n    return s\n  },\n  number(n: number) {\n    return new Number(n)\n  },\n}\n\nfunction box<T>(x: T, path: string): T {\n  const t = typeof x\n  if (x === undefined || t === 'object' || t === 'function') {\n    return x\n  } else {\n    return new Proxy<XinProxyTarget, XinObject>(\n      boxes[typeof x](x),\n      regHandler(path, true)\n    ) as T\n  }\n}\n\nconst regHandler = (\n  path: string,\n  boxScalars: boolean\n): ProxyHandler<XinObject> => ({\n  get(target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    switch (_prop) {\n      case XIN_PATH:\n        return path\n      case XIN_VALUE:\n        return xinValue(target)\n      case XIN_OBSERVE:\n        return (callback) => {\n          const listener = _observe(path, callback)\n          return () => unobserve(listener)\n        }\n      case XIN_BIND:\n        return (element: Element, binding: XinBinding, options?: XinObject) => {\n          bind(element, path, binding, options)\n        }\n    }\n    if (typeof _prop === 'symbol') {\n      return (target as XinObject)[_prop]\n    }\n    let prop = _prop\n    const compoundProp =\n      prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n      prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n      prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n      prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object'\n        ? new Proxy<XinObject, XinProxyObject>(\n            value,\n            regHandler(currentPath, boxScalars)\n          )[subPath]\n        : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) =>\n            `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(\n          value,\n          regHandler(currentPath, boxScalars)\n        ) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return boxScalars ? box(value, extendPath(path, prop)) : value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            const result = Array.prototype[prop].apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n        ? new Proxy<XinProxyTarget, XinObject>(\n            value,\n            regHandler(extendPath(path, prop), boxScalars)\n          )\n        : boxScalars\n        ? box(value, extendPath(path, prop))\n        : value\n    } else {\n      return boxScalars\n        ? box(target[prop], extendPath(path, prop))\n        : target[prop]\n    }\n  },\n  set(_, prop: string, value: any) {\n    value = xinValue(value)\n    const fullPath = prop !== XIN_VALUE ? extendPath(path, prop) : path\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    const existing = xinValue(xin[fullPath])\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  },\n})\n\nconst observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: string | ObserverCallbackFunction\n): Listener => {\n  const func = typeof callback === 'function' ? callback : xin[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(\n      `observe expects a function or path to a function, ${\n        callback as string\n      } is neither`\n    )\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxy<XinObject>>(\n  registry,\n  regHandler('', false)\n)\n\nconst boxed = new Proxy<XinObject, BoxedProxy<XinObject>>(\n  registry,\n  regHandler('', true)\n)\n\nexport {\n  xin,\n  boxed,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings,\n}\n",
    "import { xin, touch, observe } from './xin'\nimport {\n  getListItem,\n  elementToBindings,\n  elementToHandlers,\n  DataBindings,\n  BOUND_CLASS,\n  BOUND_SELECTOR,\n  EVENT_CLASS,\n  EVENT_SELECTOR,\n  XinEventBindings,\n  XIN_PATH,\n  XIN_VALUE,\n} from './metadata'\nimport {\n  XinObject,\n  XinProps,\n  XinEventHandler,\n  XinTouchableType,\n  XinBinding,\n  XinBindingSpec,\n} from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: Element, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    return\n  }\n  for (const dataBinding of dataBindings) {\n    const { binding, options } = dataBinding\n    let { path } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProps)[XIN_PATH] != null) {\n          path = dataBinding.path = `${\n            (dataSource as XinProps)[XIN_PATH]\n          }${path.substring(1)}`\n        } else {\n          console.error(\n            `Cannot resolve relative binding ${path}`,\n            element,\n            'is not part of a list'\n          )\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      Array.from(mutation.addedNodes).forEach((node) => {\n        if (node instanceof Element) {\n          Array.from(node.querySelectorAll(BOUND_SELECTOR)).forEach((element) =>\n            touchElement(element as Element)\n          )\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(\n  () => true,\n  (changedPath: string) => {\n    const boundElements = Array.from(document.querySelectorAll(BOUND_SELECTOR))\n\n    for (const element of boundElements) {\n      touchElement(element as HTMLElement, changedPath)\n    }\n  }\n)\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            const existingActual =\n              existing[XIN_PATH] != null\n                ? (existing as XinProps)[XIN_VALUE]\n                : existing\n            const valueActual =\n              value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends Element>(\n  element: T,\n  what: XinTouchableType | XinBindingSpec,\n  binding: XinBinding<T>,\n  options?: XinObject\n): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (\n    typeof what === 'object' &&\n    (what as XinProps)[XIN_PATH] === undefined &&\n    options === undefined\n  ) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProps)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList?.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({\n    path,\n    binding: binding as XinBinding<Element>,\n    options,\n  })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    // not calling toDOM directly here allows virtual list bindings to work\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get(target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    },\n  })\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    const handlers = eventBindings[event.type] || ([] as XinEventHandler[])\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target =\n      target.parentElement != null\n        ? target.parentElement.closest(EVENT_SELECTOR)\n        : null\n  }\n}\n\nexport const on = (\n  element: HTMLElement,\n  eventType: string,\n  eventHandler: XinEventHandler\n): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n",
    "import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: Element): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (\n    element instanceof HTMLSelectElement &&\n    element.hasAttribute('multiple')\n  ) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: Element, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      ;(element as HTMLInputElement).checked =\n        (element as HTMLInputElement).value === newValue\n      break\n    case 'checkbox':\n      ;(element as HTMLInputElement).checked = !!newValue\n      break\n    case 'date':\n      ;(element as HTMLInputElement).valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of Array.from(\n        (element as HTMLSelectElement).querySelectorAll('option')\n      ) as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      ;(element as HTMLInputElement).value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio': {\n      const radio = element.parentElement?.querySelector(\n        `[name=\"${element.name}\"]:checked`\n      ) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      return (element as HTMLInputElement).checked\n    case 'date':\n      return (element as HTMLInputElement).valueAsDate?.toISOString()\n    case 'multi-select':\n      return Array.from(element.querySelectorAll('option')).reduce(\n        (map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        },\n        {}\n      )\n    default:\n      return element.value\n  }\n}\n\nconst { ResizeObserver } = globalThis\nexport const resizeObserver =\n  ResizeObserver != null\n    ? new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const element = entry.target\n          dispatch(element, 'resize')\n        }\n      })\n    : {\n        observe() {},\n        unobserve() {},\n      }\n\nexport const appendContentToElement = (\n  elt: Element | ShadowRoot | null | undefined,\n  content: ContentType | null | undefined,\n  cloneElements = true\n): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach((node) => {\n        elt.append(\n          node instanceof Node && cloneElements ? cloneWithBindings(node) : node\n        )\n      })\n    } else if (content instanceof Node) {\n      elt.append(cloneElements ? cloneWithBindings(content) : content)\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n",
    "type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval) as unknown as number\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval) as unknown as number\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n",
    "import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport {\n  cloneWithBindings,\n  elementToItem,\n  elementToBindings,\n  BOUND_SELECTOR,\n  DataBinding,\n  xinValue,\n  xinPath,\n} from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ninterface ListBindingOptions {\n  idPath?: string\n  virtual?: { height: number; width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings(element: Element, path: string): void {\n  const boundElements = Array.from(element.querySelectorAll(BOUND_SELECTOR))\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as Element, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: Element\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: Element\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, Element>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor(boundElement: Element, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error(\n        'ListBinding expects an element with exactly one child element'\n      )\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error(\n          'ListBinding expects a template with exactly one child element'\n        )\n      }\n      this.template = cloneWithBindings(\n        template.content.children[0]\n      ) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice(): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null && this.boundElement instanceof HTMLElement) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns =\n        virtual.width != null\n          ? Math.max(1, Math.floor(width / virtual.width))\n          : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(\n        totalRows * virtual.height - height - topBuffer,\n        0\n      )\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer,\n    }\n  }\n\n  update(array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { hiddenProp, visibleProp } = this.options\n\n    const arrayPath: string = xinPath(array) as string\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle(\n      '-xin-empty-list',\n      slice.items.length === 0\n    )\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of Array.from(this.boundElement.children)) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: Element[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: Element | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(\n            element,\n            insertionPoint.nextElementSibling\n          )\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\ninterface ListBoundElement extends Element {\n  [listBindingRef]?: ListBinding\n}\n\nexport const getListBinding = (\n  boundElement: ListBoundElement,\n  options?: ListBindingOptions\n): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding === undefined) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n",
    "import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding<Element> } = {\n  value: {\n    toDOM: setValue,\n\n    fromDOM(element: Element) {\n      return getValue(element as ValueElement)\n    },\n  },\n\n  set: {\n    toDOM: setValue,\n  },\n\n  text: {\n    toDOM(element: Element, value: any) {\n      element.textContent = value\n    },\n  },\n\n  enabled: {\n    toDOM(element: Element, value: any) {\n      ;(element as HTMLInputElement).disabled = !value\n    },\n  },\n\n  disabled: {\n    toDOM(element: Element, value: any) {\n      ;(element as HTMLButtonElement).disabled = Boolean(value)\n    },\n  },\n\n  style: {\n    toDOM(element: Element, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error typescript has a strange/incorrect idea of what element.style is\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    },\n  },\n\n  list: {\n    toDOM(element: Element, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    },\n  },\n}\n",
    "/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp(min: number, v: number, max: number): number {\n  return v < min ? min : v > max ? max : v\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp,\n}\n",
    "import { lerp, clamp } from './more-math'\nimport { CSSSystemColor } from './css-system-color'\n\n// http://www.itu.int/rec/R-REC-BT.601\nconst bt601 = (r: number, g: number, b: number): number => {\n  return (0.299 * r + 0.587 * g + 0.114 * b) / 255\n}\n\nconst hex2 = (n: number): string =>\n  ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor(r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h =\n      s !== 0\n        ? l === r\n          ? (g - b) / s\n          : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n        : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span =\n  globalThis.document !== undefined\n    ? globalThis.document.createElement('span')\n    : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss(spec: CSSSystemColor | string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl(h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(\n      `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n        0\n      )}%, ${a.toFixed(2)})`\n    )\n  }\n\n  constructor(r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : (a = 1)\n  }\n\n  get inverse(): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance(): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb(): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba(): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(\n      2\n    )})`\n  }\n\n  get RGBA(): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB(): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  private hslCached?: HslColor\n\n  get _hsl(): HslColor {\n    if (this.hslCached == null) {\n      this.hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this.hslCached\n  }\n\n  get hsl(): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%)`\n  }\n\n  get hsla(): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono(): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness(): number {\n    return bt601(this.r, this.g, this.b)\n  }\n\n  get html(): string {\n    return this.toString()\n  }\n\n  toString(): string {\n    return this.a === 1\n      ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b)\n      : '#' +\n          hex2(this.r) +\n          hex2(this.g) +\n          hex2(this.b) +\n          hex2(Math.floor(255 * this.a))\n  }\n\n  brighten(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  darken(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  saturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  desaturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  rotate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const hClamped = (h + 360 + amount) % 360\n    return Color.fromHsl(hClamped, s, l, this.a)\n  }\n\n  opacity(alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch(): Color {\n    const { r, g, b, a } = this\n    console.log(\n      `%c      %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`,\n      `background-color: rgba(${r}, ${g}, ${b}, ${a})`,\n      'background-color: transparent'\n    )\n    return this\n  }\n\n  blend(otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n\n  mix(otherColor: Color, t: number): Color {\n    const a = this._hsl\n    const b = otherColor._hsl\n    return Color.fromHsl(\n      lerp(a.h, b.h, t),\n      lerp(a.s, b.s, t),\n      lerp(a.l, b.l, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n",
    "export function camelToKabob(s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel(s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n",
    "import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport {\n  ElementPart,\n  ElementProps,\n  ElementCreator,\n  StringMap,\n  XinBinding,\n} from './xin-types'\nimport { camelToKabob } from './string-case'\nimport { processProp } from './css'\nimport { xinPath } from './metadata'\n\nconst MATH = 'http://www.w3.org/1998/Math/MathML'\nconst SVG = 'http://www.w3.org/2000/svg'\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: Element } = {}\n\nconst elementStyle = (elt: HTMLElement, prop: string, value: any) => {\n  const processed = processProp(camelToKabob(prop), value)\n  if (processed.prop.startsWith('--')) {\n    elt.style.setProperty(processed.prop, processed.value)\n  } else {\n    ;(elt.style as unknown as { [key: string]: string })[prop] = processed.value\n  }\n}\n\nconst elementStyleBinding = (prop: string): XinBinding => {\n  return {\n    toDOM(element, value) {\n      elementStyle(element as HTMLElement, prop, value)\n    },\n  }\n}\n\nconst elementProp = (elt: HTMLElement, key: string, value: any) => {\n  if (key === 'style') {\n    if (typeof value === 'object') {\n      for (const prop of Object.keys(value)) {\n        if (xinPath(value[prop])) {\n          console.log(prop, value[prop])\n          bind(elt, value[prop], elementStyleBinding(prop))\n        } else {\n          elementStyle(elt, prop, value[prop])\n        }\n      }\n    } else {\n      elt.setAttribute('style', value)\n    }\n  } else if ((elt as { [key: string]: any })[key] !== undefined) {\n    // MathML is only supported on 91% of browsers, and not on the Raspberry Pi Chromium\n    const { MathMLElement } = globalThis\n    if (\n      elt instanceof SVGElement ||\n      (MathMLElement !== undefined && elt instanceof MathMLElement)\n    ) {\n      elt.setAttribute(key, value)\n    } else {\n      ;(elt as { [key: string]: any })[key] = value\n    }\n  } else {\n    const attr = camelToKabob(key)\n\n    if (attr === 'class') {\n      value.split(' ').forEach((className: string) => {\n        elt.classList.add(className)\n      })\n    } else if ((elt as { [key: string]: any })[attr] !== undefined) {\n      ;(elt as StringMap)[attr] = value\n    } else if (typeof value === 'boolean') {\n      value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n    } else {\n      elt.setAttribute(attr, value)\n    }\n  }\n}\n\nconst elementPropBinding = (key: string): XinBinding => {\n  return {\n    toDOM(element, value) {\n      elementProp(element as HTMLElement, key, value)\n    },\n  }\n}\n\nconst elementSet = (elt: HTMLElement, key: string, value: any) => {\n  if (key === 'apply') {\n    value(elt)\n  } else if (key.match(/^on[A-Z]/) != null) {\n    const eventType = key.substring(2).toLowerCase()\n    on(elt, eventType, value)\n  } else if (key === 'bind') {\n    const binding =\n      typeof value.binding === 'string'\n        ? bindings[value.binding]\n        : value.binding\n    if (binding !== undefined && value.value !== undefined) {\n      bind(\n        elt,\n        value.value,\n        value.binding instanceof Function\n          ? { toDOM: value.binding }\n          : value.binding\n      )\n    } else {\n      throw new Error(`bad binding`)\n    }\n  } else if (key.match(/^bind[A-Z]/) != null) {\n    const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n    const binding = bindings[bindingType]\n    if (binding !== undefined) {\n      bind(elt, value, binding)\n    } else {\n      throw new Error(\n        `${key} is not allowed, bindings.${bindingType} is not defined`\n      )\n    }\n  } else if (xinPath(value)) {\n    bind(elt, value, elementPropBinding(key))\n  } else {\n    elementProp(elt, key, value)\n  }\n}\n\nconst create = (tagType: string, ...contents: ElementPart[]): HTMLElement => {\n  if (templates[tagType] === undefined) {\n    const [tag, namespace] = tagType.split('|')\n    if (namespace === undefined) {\n      templates[tagType] = globalThis.document.createElement(tag)\n    } else {\n      templates[tagType] = globalThis.document.createElementNS(namespace, tag)\n    }\n  }\n  const elt = templates[tagType].cloneNode() as HTMLElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (\n      item instanceof Element ||\n      item instanceof DocumentFragment ||\n      typeof item === 'string' ||\n      typeof item === 'number'\n    ) {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else if (item.xinPath) {\n      elt.append(elements.span({ bindText: item }))\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    elementSet(elt, key, value)\n  }\n  return elt\n}\n\nconst fragment = (...contents: ElementPart[]): DocumentFragment => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creates <my-element> elements.\n */\nexport const elements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      tagName = tagName.replace(/[A-Z]/g, (c) => `-${c.toLocaleLowerCase()}`)\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(tagName, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as ElementsProxy\n\ninterface SVGElementsProxy {\n  [key: string]: ElementCreator<SVGElement>\n}\n\nexport const svgElements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${SVG}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as SVGElementsProxy\n\ninterface MathMLElementsProxy {\n  [key: string]: ElementCreator<MathMLElement>\n}\n\nexport const mathML = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${MATH}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as MathMLElementsProxy\n",
    "import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule } from './css-types'\n\nexport function StyleSheet(id: string, styleSpec: XinStyleSheet) {\n  const element = elements.style(css(styleSpec))\n  element.id = id\n  document.head.append(element)\n}\n\nconst numericProps = [\n  'animation-iteration-count',\n  'flex',\n  'flex-base',\n  'flex-grow',\n  'flex-shrink',\n  'opacity',\n  'order',\n  'tab-size',\n  'widows',\n  'z-index',\n  'zoom',\n]\n\nexport const processProp = (\n  prop: string,\n  value: string | number\n): { prop: string; value: string } => {\n  if (typeof value === 'number' && !numericProps.includes(prop)) {\n    value = `${value}px`\n  }\n  if (prop.startsWith('_')) {\n    if (prop.startsWith('__')) {\n      prop = '--' + prop.substring(2)\n      value = `var(${prop}-default, ${value})`\n    } else {\n      prop = '--' + prop.substring(1)\n    }\n  }\n  return {\n    prop,\n    value: String(value),\n  }\n}\n\nconst renderProp = (\n  indentation: string,\n  cssProp: string,\n  value: string | number | Color | undefined\n): string => {\n  if (value === undefined) {\n    return ''\n  }\n  if (value instanceof Color) {\n    value = value.html\n  }\n  const processed = processProp(cssProp, value)\n  return `${indentation}  ${processed.prop}: ${processed.value};`\n}\n\nconst renderStatement = (\n  key: string,\n  value: Color | string | number | XinStyleRule | undefined,\n  indentation = ''\n): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object' && !(value instanceof Color)) {\n    const renderedRule = Object.keys(value)\n      .map((innerKey) =>\n        renderStatement(innerKey, value[innerKey], `${indentation}  `)\n      )\n      .join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (obj: XinStyleSheet, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map((prop) => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: {\n  [key: string]: string | number\n}): XinStyleRule => {\n  console.warn('initVars is deprecated. Just use _ and __ prefixes instead.')\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] =\n      typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  console.warn('darkMode is deprecated. Use inverseLuminance instead.')\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (\n      typeof value === 'string' &&\n      value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null\n    ) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const invertLuminance = (map: XinStyleRule): XinStyleRule => {\n  const inverted: XinStyleRule = {}\n\n  for (const key of Object.keys(map)) {\n    const value = map[key]\n    if (value instanceof Color) {\n      inverted[key] = value.inverseLuminance\n    } else if (\n      typeof value === 'string' &&\n      value.match(/^(#[0-9a-fA-F]{3}|rgba?\\(|hsla?\\()/)\n    ) {\n      inverted[key] = Color.fromCss(value).inverseLuminance\n    }\n  }\n\n  return inverted\n}\n\nexport const varDefault = new Proxy<{ [key: string]: CssVarBuilder }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (target[prop] === undefined) {\n        const varName = `--${prop.replace(\n          /[A-Z]/g,\n          (x) => `-${x.toLocaleLowerCase()}`\n        )}`\n        target[prop] = (val: string | number) => `var(${varName}, ${val})`\n      }\n      return target[prop]\n    },\n  }\n)\n\nexport const vars = new Proxy<{ [key: string]: string }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (prop === 'default') {\n        return varDefault\n      }\n      if (target[prop] == null) {\n        prop = prop.replace(/[A-Z]/g, (x) => `-${x.toLocaleLowerCase()}`)\n        const [, _varName, , isNegative, scaleText, method] = prop.match(\n          /^([^\\d_]*)((_)?(\\d+)(\\w*))?$/\n        ) as string[]\n        const varName = `--${_varName}`\n        if (scaleText != null) {\n          const scale =\n            isNegative == null\n              ? Number(scaleText) / 100\n              : -Number(scaleText) / 100\n          switch (method) {\n            case 'b': // brighten\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).brighten(scale).rgba\n                    : Color.fromCss(baseColor).darken(-scale).rgba\n              }\n              break\n            case 's': // saturate\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).saturate(scale).rgba\n                    : Color.fromCss(baseColor).desaturate(-scale).rgba\n              }\n              break\n            case 'h': // hue\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n                console.log(\n                  Color.fromCss(baseColor).hsla,\n                  Color.fromCss(baseColor).rotate(scale).hsla\n                )\n              }\n              break\n            case 'o': // alpha\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n              }\n              break\n            case '':\n              target[prop] = `calc(var(${varName}) * ${scale})`\n              break\n            default:\n              console.error(method)\n              throw new Error(\n                `Unrecognized method ${method} for css variable ${varName}`\n              )\n          }\n        } else {\n          target[prop] = `var(${varName})`\n        }\n      }\n      return target[prop]\n    },\n  }\n)\n\ntype CssVarBuilder = (val: string | number) => string\n",
    "import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, ContentType, PartsMap } from './xin-types'\n\nlet anonymousElementCount = 0\n\nfunction anonElementTag(): string {\n  return `custom-elt${(anonymousElementCount++).toString(36)}`\n}\nlet instanceCount = 0\n\ninterface ElementCreatorOptions extends ElementDefinitionOptions {\n  tag?: string\n  styleSpec?: XinStyleSheet\n}\n\nconst globalStyleSheets: {\n  [key: string]: string\n} = {}\n\nfunction setGlobalStyle(tagName: string, styleSpec: XinStyleSheet) {\n  const existing = globalStyleSheets[tagName]\n  const processed = css(styleSpec).replace(/:host\\b/g, tagName)\n  globalStyleSheets[tagName] = existing\n    ? existing + '\\n' + processed\n    : processed\n}\n\nfunction insertGlobalStyles(tagName: string) {\n  if (globalStyleSheets[tagName]) {\n    document.head.append(\n      elements.style({ id: tagName + '-component' }, globalStyleSheets[tagName])\n    )\n  }\n  delete globalStyleSheets[tagName]\n}\n\nexport abstract class Component<T = PartsMap> extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator<Component>\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  static styleSpec?: XinStyleSheet\n  static styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  isSlotted?: boolean\n  private static _tagName: null | string = null\n  static get tagName(): null | string {\n    return this._tagName\n  }\n  [key: string]: any\n\n  static StyleNode(styleSpec: XinStyleSheet): HTMLStyleElement {\n    console.warn(\n      'StyleNode is deprecated, just assign static styleSpec: XinStyleSheet to the class directly'\n    )\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator(\n    options: ElementCreatorOptions = {}\n  ): ElementCreator<Component> {\n    if (this._elementCreator == null) {\n      const { tag, styleSpec } = options\n      let tagName = options != null ? tag : null\n      if (tagName == null) {\n        if (typeof this.name === 'string' && this.name !== '') {\n          tagName = camelToKabob(this.name)\n          if (tagName.startsWith('-')) {\n            tagName = tagName.slice(1)\n          }\n        } else {\n          tagName = anonElementTag()\n        }\n      }\n      if (customElements.get(tagName) != null) {\n        console.warn(`${tagName} is already defined`)\n      }\n      if (tagName.match(/\\w+(-\\w+)+/) == null) {\n        console.warn(`${tagName} is not a legal tag for a custom-element`)\n        tagName = anonElementTag()\n      }\n      while (customElements.get(tagName) !== undefined) {\n        tagName = anonElementTag()\n      }\n      this._tagName = tagName\n      if (styleSpec !== undefined) {\n        setGlobalStyle(tagName, styleSpec)\n      }\n      window.customElements.define(\n        tagName,\n        this as unknown as CustomElementConstructor,\n        options\n      )\n      this._elementCreator = elements[tagName]\n    }\n    return this._elementCreator\n  }\n\n  initAttributes(...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues: { [key: string]: any } = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        triggerRender = !!(\n          mutation.attributeName &&\n          attributeNames.includes(kabobToCamel(mutation.attributeName))\n        )\n      })\n      if (triggerRender && this.queueRender !== undefined)\n        this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach((attributeName) => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get() {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            } else if (attributeValues[attributeName] !== undefined) {\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set(value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (\n              typeof value === 'object' ||\n              `${value as string}` !== `${this[attributeName] as string}`\n            ) {\n              if (\n                value === null ||\n                value === undefined ||\n                typeof value === 'object'\n              ) {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              attributeValues[attributeName] = value\n            }\n          }\n        },\n      })\n    })\n  }\n\n  private initValue(): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (\n      valueDescriptor === undefined ||\n      valueDescriptor.get !== undefined ||\n      valueDescriptor.set !== undefined\n    ) {\n      return\n    }\n    let value = this.hasAttribute('value')\n      ? this.getAttribute('value')\n      : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get() {\n        return value\n      },\n      set(newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      },\n    })\n  }\n\n  private _parts?: T\n  get parts(): T {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._parts == null) {\n      this._parts = new Proxy(\n        {},\n        {\n          get(target: any, ref: string) {\n            if (target[ref] === undefined) {\n              let element = root.querySelector(`[part=\"${ref}\"]`)\n              if (element == null) {\n                element = root.querySelector(ref)\n              }\n              if (element == null)\n                throw new Error(`elementRef \"${ref}\" does not exist!`)\n              element.removeAttribute('data-ref')\n              target[ref] = element as Element\n            }\n            return target[ref]\n          },\n        }\n      ) as T\n    }\n    return this._parts\n  }\n\n  constructor() {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback(): void {\n    insertGlobalStyles((this.constructor as unknown as Component).tagName)\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback(): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender(triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate(): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const cloneElements = typeof this.content !== 'function'\n      const _content: ContentType | null =\n        typeof this.content === 'function' ? this.content() : this.content\n\n      const { styleSpec } = this.constructor as unknown as Component\n      let { styleNode } = this.constructor as unknown as Component\n      if (styleSpec) {\n        styleNode = (this.constructor as unknown as Component).styleNode =\n          elements.style(css(styleSpec))\n        delete (this.constructor as unknown as Component).styleNode\n      }\n      if (this.styleNode) {\n        console.warn(\n          this,\n          'styleNode is deprecrated, use static styleNode or statc styleSpec instead'\n        )\n        styleNode = this.styleNode\n      }\n      if (styleNode) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(styleNode.cloneNode(true))\n        appendContentToElement(shadow, _content, cloneElements)\n      } else if (_content !== null) {\n        const existingChildren = Array.from(this.childNodes)\n        appendContentToElement(this as HTMLElement, _content, cloneElements)\n        this.isSlotted = this.querySelector('slot,xin-slot') !== undefined\n        const slots = Array.from(this.querySelectorAll('slot'))\n        if (slots.length > 0) {\n          slots.forEach(XinSlot.replaceSlot)\n        }\n        if (existingChildren.length > 0) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          Array.from(this.querySelectorAll('xin-slot')).forEach((slot) => {\n            slotMap[(slot as XinSlot).name] = slot\n          })\n          existingChildren.forEach((child) => {\n            const defaultSlot = slotMap['']\n            const destSlot =\n              child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render(): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  static replaceSlot(slot: HTMLSlotElement): void {\n    const _slot = document.createElement('xin-slot')\n    if (slot.name !== '') {\n      _slot.setAttribute('name', slot.name)\n    }\n    slot.replaceWith(_slot)\n  }\n\n  constructor() {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n",
    "import { xin, observe } from './xin'\nimport { xinValue } from './metadata'\nimport {\n  XinObject,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xinValue(xin)\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n",
    "export const version = '0.9.0'",
    "import { XinProxy, BoxedProxy } from './xin-types'\nimport { xin, boxed } from './xin'\n\nexport function boxedProxy<T extends object>(obj: T): BoxedProxy<T> {\n  Object.assign(boxed, obj)\n  return boxed as BoxedProxy<T>\n}\n\nlet deprecationMessage = false\nexport function xinProxy<T extends object>(obj: T, boxed = false): XinProxy<T> {\n  if (boxed) {\n    if (!deprecationMessage) {\n      console.warn(\n        `xinProxy(..., true) is deprecated; use boxedProxy(...) instead`\n      )\n      deprecationMessage = true\n    }\n    // @ts-expect-error deprecated\n    return boxedProxy(obj)\n  }\n  Object.keys(obj).forEach((key: string) => {\n    xin[key] = (obj as { [key: string]: any })[key]\n  })\n  return xin as XinProxy<T>\n}\n",
    "import { Color } from './color'\nimport { Component } from './component'\nimport { vars, varDefault } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { elements, svgElements, mathML } from './elements'\nimport { ElementCreator, PartsMap } from './xin-types'\nimport { version } from './version'\nimport { xin, boxed } from './xin'\nimport { xinProxy, boxedProxy } from './xin-proxy'\n\nexport interface XinFactory {\n  Color: typeof Color\n  Component: typeof Component\n  elements: typeof elements\n  svgElements: typeof svgElements\n  mathML: typeof mathML\n  vars: typeof vars\n  varDefault: typeof varDefault\n  xin: typeof xin\n  boxed: typeof boxed\n  xinProxy: typeof xinProxy\n  boxedProxy: typeof boxedProxy\n  makeComponent: typeof makeComponent\n  version: string\n}\n\nexport interface XinComponentSpec<T = PartsMap> {\n  type: Component<T>\n  styleSpec?: XinStyleSheet\n}\n\nexport interface XinPackagedComponent<T = PartsMap> {\n  type: Component<T>\n  creator: ElementCreator\n}\n\nexport const madeComponents: { [key: string]: XinPackagedComponent } = {}\n\nexport type XinBlueprint<T = PartsMap> = (\n  tag: string,\n  module: XinFactory\n) => XinComponentSpec<T> | Promise<XinComponentSpec<T>>\n\nexport async function makeComponent(\n  tag: string,\n  blueprint: XinBlueprint\n): Promise<XinPackagedComponent> {\n  const { type, styleSpec } = await blueprint(tag, {\n    Color,\n    Component,\n    elements,\n    svgElements,\n    mathML,\n    varDefault,\n    vars,\n    xin,\n    boxed,\n    xinProxy,\n    boxedProxy,\n    makeComponent,\n    version,\n  })\n  const packagedComponent = {\n    type,\n    creator: type.elementCreator({ tag, styleSpec }),\n  }\n\n  madeComponents[tag] = packagedComponent\n  return packagedComponent\n}\n",
    "import { Component } from './component'\nimport {\n  makeComponent,\n  XinBlueprint,\n  XinPackagedComponent,\n} from './make-component'\n\nconst loadedBlueprints: { [key: string]: Promise<XinPackagedComponent> } = {}\n\nexport class Blueprint extends Component {\n  tag = 'anon-elt'\n  src = ''\n  property = 'default'\n  loaded?: XinPackagedComponent\n  onload = () => {}\n\n  async packaged(): Promise<XinPackagedComponent> {\n    const { tag, src, property } = this\n    const signature = `${tag}.${property}:${src}`\n    if (!this.loaded) {\n      if (loadedBlueprints[signature] === undefined) {\n        const imported = await eval(`import('${src}')`)\n        const blueprint = imported[property] as XinBlueprint\n        loadedBlueprints[signature] = makeComponent(tag, blueprint)\n      } else {\n        console.log(`using cached ${tag}`)\n      }\n      this.loaded = await loadedBlueprints[signature]\n      this.onload()\n    }\n    return this.loaded!\n  }\n\n  constructor() {\n    super()\n\n    this.initAttributes('tag', 'src', 'property')\n  }\n}\n\nexport const blueprint = Blueprint.elementCreator({\n  tag: 'xin-blueprint',\n  styleSpec: { ':host': { display: 'none' } },\n})\n\nexport class BlueprintLoader extends Component {\n  onload = () => {}\n\n  constructor() {\n    super()\n  }\n\n  private async load() {\n    const blueprintElements = (\n      Array.from(\n        this.querySelectorAll(Blueprint.tagName as string)\n      ) as Blueprint[]\n    ).filter((elt) => elt.src)\n    const promises = blueprintElements.map((elt) => elt.packaged())\n    await Promise.all(promises)\n    this.onload()\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n\n    this.load()\n  }\n}\n\nexport const blueprintLoader = BlueprintLoader.elementCreator({\n  tag: 'xin-loader',\n  styleSpec: { ':host': { display: 'none' } },\n})\n"
  ],
  "mappings": "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",
  "debugId": "163111F8FB15980C64756E2164756E21",
  "names": []
}