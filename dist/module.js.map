{"mappings":"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","sources":["src/index.ts","src/bind.ts","src/xin.ts","src/settings.ts","src/path-listener.ts","src/metadata.ts","src/deep-clone.ts","src/by-path.ts","src/make-error.ts","src/bindings.ts","src/list-binding.ts","src/dom.ts","src/throttle.ts","src/css.ts","src/color.ts","src/more-math.ts","src/elements.ts","src/string-case.ts","src/component.ts","src/hot-reload.ts","src/test-component.ts","src/xin-types.ts","src/xin-proxy.ts"],"sourcesContent":["/*\n  Note that re-exported types should be explicitly and separately exported\n  as types because of issues with parceljs\n\n  The error messages will be very perplexing\n\n  https://github.com/parcel-bundler/parcel/issues/4796\n  https://github.com/parcel-bundler/parcel/issues/4240\n  https://devblogs.microsoft.com/typescript/announcing-typescript-3-8/#type-only-imports-exports\n*/\n\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport { css, darkMode, initVars, vars, varDefault } from './css'\nexport type { XinStyleSheet, XinStyleMap, XinStyleRule } from './css-types'\nexport { Color } from './color'\nexport { Component } from './component'\nexport { elements, svgElements, mathML } from './elements'\nexport type { ElementsProxy } from './elements'\nexport { hotReload } from './hot-reload'\nexport { getListItem, xinPath, xinValue } from './metadata'\nexport { MoreMath } from './more-math'\nexport { settings } from './settings'\nexport * from './test-component'\nexport { throttle, debounce } from './throttle'\nexport {\n  xin,\n  observe,\n  unobserve,\n  touch,\n  observerShouldBeRemoved,\n  updates,\n} from './xin'\nexport * from './xin-types'\nexport { xinProxy } from './xin-proxy'\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem,\n  elementToBindings,\n  elementToHandlers,\n  DataBindings,\n  BOUND_CLASS,\n  BOUND_SELECTOR,\n  EVENT_CLASS,\n  EVENT_SELECTOR,\n  XinEventBindings,\n  XIN_PATH,\n  XIN_VALUE,\n} from './metadata'\nimport {\n  XinObject,\n  XinProxy,\n  XinEventHandler,\n  XinTouchableType,\n  XinBinding,\n  XinBindingSpec,\n} from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (\n  element: HTMLElement,\n  changedPath?: string\n): void => {\n  const dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    return\n  }\n  for (const dataBinding of dataBindings) {\n    const { binding, options } = dataBinding\n    let { path } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${\n            (dataSource as XinProxy)[XIN_PATH]\n          }${path.substring(1)}`\n        } else {\n          console.error(\n            `Cannot resolve relative binding ${path}`,\n            element,\n            'is not part of a list'\n          )\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      ;[...mutation.addedNodes].forEach((node) => {\n        if (node instanceof HTMLElement) {\n          ;[...node.querySelectorAll(BOUND_SELECTOR)].forEach((element) =>\n            touchElement(element as HTMLElement)\n          )\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(\n  () => true,\n  (changedPath: string) => {\n    const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n    for (const element of boundElements) {\n      touchElement(element as HTMLElement, changedPath)\n    }\n  }\n)\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            const existingActual =\n              // @ts-expect-error-error\n              existing[XIN_PATH] != null\n                ? (existing as XinProxy)[XIN_VALUE]\n                : existing\n            const valueActual =\n              value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport function bind<T extends HTMLElement>(\n  element: T,\n  what: XinTouchableType | XinBindingSpec,\n  binding: XinBinding<T>,\n  options?: XinObject\n): T {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (\n    typeof what === 'object' &&\n    (what as XinProxy)[XIN_PATH] === undefined &&\n    options === undefined\n  ) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({\n    path,\n    binding: binding as XinBinding<HTMLElement>,\n    options,\n  })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get(target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    },\n  })\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    const handlers = eventBindings[event.type] || ([] as XinEventHandler[])\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target =\n      target.parentElement != null\n        ? target.parentElement.closest(EVENT_SELECTOR)\n        : null\n  }\n}\n\nexport const on = (\n  element: HTMLElement,\n  eventType: string,\n  eventHandler: XinEventHandler\n): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import {\n  XinProxyObject,\n  XinProxyTarget,\n  XinObject,\n  XinArray,\n  XinValue,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { settings } from './settings'\nimport {\n  Listener,\n  touch,\n  observe as _observe,\n  unobserve,\n  updates,\n  observerShouldBeRemoved,\n} from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { xinValue, xinPath, XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ) => { proxy: P; revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>\n  ): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = [\n  'sort',\n  'splice',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'unshift',\n]\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath =\n  /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst regHandler = (path = ''): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get(target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      while (xinPath(target) !== undefined) {\n        target = xinValue(target)\n      }\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      return (target as XinObject)[_prop]\n    }\n    let prop = _prop\n    const compoundProp =\n      prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n      prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n      prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n      prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object'\n        ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[\n            subPath\n          ]\n        : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) =>\n            `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(\n          value,\n          regHandler(currentPath)\n        ) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error seriously, eslint?\n            const result = Array.prototype[prop].apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n        ? new Proxy<XinProxyTarget, XinObject>(\n            value,\n            regHandler(extendPath(path, prop))\n          )\n        : value\n    } else {\n      return target[prop]\n    }\n  },\n  set(_, prop: string, value: any) {\n    value = xinValue(value)\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    const existing = xinValue(xin[fullPath])\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  },\n})\n\nconst observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: string | ObserverCallbackFunction\n): Listener => {\n  const func = typeof callback === 'function' ? callback : xin[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(\n      `observe expects a function or path to a function, ${\n        callback as string\n      } is neither`\n    )\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings,\n}\n","export const settings = {\n  debug: false,\n  perf: false,\n}\n","import {\n  PathTestFunction,\n  ObserverCallbackFunction,\n  AnyFunction,\n} from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: AnyFunction\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor(\n    test: string | RegExp | PathTestFunction,\n    callback: string | ObserverCallbackFunction\n  ) {\n    const callbackDescription =\n      typeof callback === 'string'\n        ? `\"${callback}\"`\n        : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = (t) =>\n        typeof t === 'string' &&\n        t !== '' &&\n        (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter((listener) => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" at \"${path}\"`\n          )\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach((listener) => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(\n            `Listener ${listener.description} threw \"${\n              e as string\n            }\" handling \"${path}\"`\n          )\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise((resolve) => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (\n    touchedPaths.find((touchedPath) => path.startsWith(touchedPath)) == null\n  ) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (\n  test: string | RegExp | PathTestFunction,\n  callback: ObserverCallbackFunction\n): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","import { XinObject, XinProxy, XinBinding, XinEventHandler } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T>(x: T): T {\n  // eslint-disable-next-line\n  return (\n    typeof x === 'object' && x !== null\n      ? (x as unknown as XinProxy)[XIN_VALUE] || x\n      : x\n  ) as T\n}\n\nexport interface DataBinding<T = HTMLElement> {\n  path: string\n  binding: XinBinding<T>\n  options?: XinObject\n}\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> =\n  new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element),\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement\n    ? element.content.childNodes\n    : element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { XinObject, XinArray, AnyFunction } from './xin-types'\n\ntype Scalar = string | boolean | number | AnyFunction\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone(obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string =>\n  new Date(parseInt('1000000000', 36) + Date.now())\n    .valueOf()\n    .toString(36)\n    .slice(1)\nlet _seq = 0\nconst seq = (): string =>\n  (parseInt('10000', 36) + ++_seq).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts(path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap(array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[(item._auto_ as string) + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[(getByPath(item, idPath) as string) + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap(array: XinObject[], idPath: string): IdPathMap {\n  if (\n    idPathMaps.get(array) === undefined ||\n    idPathMaps.get(array)[idPath] === undefined\n  ) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex(array: XinObject[], idPath: string, idValue: any): number {\n  idValue = (idValue as string) + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (\n    idx === undefined ||\n    (getByPath(array[idx], idPath) as string) + '' !== idValue\n  ) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey(obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath(\n  array: any[],\n  idPath: string,\n  idValue: string,\n  valueToInsert?: any\n): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (\n      idPath !== '' &&\n      (getByPath(valueToInsert, idPath) as string) + '' === idValue + ''\n    ) {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray(obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject(obj: any): void {\n  if (obj == null || !(obj instanceof Object)) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath(obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath(\n  orig: XinObject | XinArray,\n  path: string,\n  val: any\n): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while (obj != null && parts.length > 0) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(\n          obj as any[],\n          idPath,\n          idValue,\n          parts.length > 0 ? _newObject_ : val\n        )\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            ;(obj as XinArray)[idx] = val\n          } else {\n            ;(obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && part.length > 0) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if (part.length > 0 || parts.length > 0) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey(obj as XinObject, key, part.length > 0 ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            ;(obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath(orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error =>\n  new Error(messages.map(stringify).join(' '))\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM(element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM(element: HTMLElement) {\n      return getValue(element as ValueElement)\n    },\n  },\n\n  text: {\n    toDOM(element: HTMLElement, value: any) {\n      element.textContent = value\n    },\n  },\n\n  enabled: {\n    toDOM(element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      ;(element as HTMLInputElement).disabled = !value\n    },\n  },\n\n  disabled: {\n    toDOM(element: HTMLElement, value: any) {\n      ;(element as HTMLInputElement).disabled = Boolean(value)\n    },\n  },\n\n  style: {\n    toDOM(element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error typescript has a strange/incorrect idea of what element.style is\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    },\n  },\n\n  list: {\n    toDOM(element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    },\n  },\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport {\n  cloneWithBindings,\n  elementToItem,\n  elementToBindings,\n  BOUND_SELECTOR,\n  DataBinding,\n  xinValue,\n  xinPath,\n} from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number; width?: number }\n  hiddenProp?: symbol | string\n  visibleProp?: symbol | string\n}\n\ninterface VirtualListSlice {\n  items: any[]\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings(element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor(boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error(\n        'ListBinding expects an element with exactly one child element'\n      )\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error(\n          'ListBinding expects a template with exactly one child element'\n        )\n      }\n      this.template = cloneWithBindings(\n        template.content.children[0]\n      ) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice(): VirtualListSlice {\n    const { virtual, hiddenProp, visibleProp } = this.options\n    let visibleArray = this._array\n    if (hiddenProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[hiddenProp] !== true)\n    }\n    if (visibleProp !== undefined) {\n      visibleArray = visibleArray.filter((item) => item[visibleProp] === true)\n    }\n    let firstItem = 0\n    let lastItem = visibleArray.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns =\n        virtual.width != null\n          ? Math.max(1, Math.floor(width / virtual.width))\n          : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(visibleArray.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = Math.max(\n        totalRows * virtual.height - height - topBuffer,\n        0\n      )\n    }\n\n    return {\n      items: visibleArray,\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer,\n    }\n  }\n\n  update(array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance, hiddenProp, visibleProp } =\n      this.options\n\n    const arrayPath: string = xinPath(array) as string\n\n    const slice = this.visibleSlice()\n    this.boundElement.classList.toggle(\n      '-xin-empty-list',\n      slice.items.length === 0\n    )\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (\n      hiddenProp === undefined &&\n      visibleProp === undefined &&\n      isSlice === true &&\n      previousSlice != null &&\n      firstItem === previousSlice.firstItem &&\n      lastItem === previousSlice.lastItem\n    ) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = slice.items.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = slice.items[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(xinValue(item))\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(xinValue(item), element)\n          elementToItem.set(element, xinValue(item))\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        } else {\n          const itemPath = `${arrayPath}[${i}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(\n            element,\n            insertionPoint.nextElementSibling\n          )\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\ninterface ListBoundElement extends HTMLElement {\n  [listBindingRef]?: ListBinding\n}\n\nexport const getListBinding = (\n  boundElement: ListBoundElement,\n  options?: ListBindingOptions\n): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding === undefined) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (\n    element instanceof HTMLSelectElement &&\n    element.hasAttribute('multiple')\n  ) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      ;(element as HTMLInputElement).checked =\n        (element as HTMLInputElement).value === newValue\n      break\n    case 'checkbox':\n      ;(element as HTMLInputElement).checked = !!newValue\n      break\n    case 'date':\n      ;(element as HTMLInputElement).valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [\n        ...(element as HTMLSelectElement).querySelectorAll('option'),\n      ] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      ;(element as HTMLInputElement).value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio': {\n      const radio = element.parentElement?.querySelector(\n        `[name=\"${element.name}\"]:checked`\n      ) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      return (element as HTMLInputElement).checked\n    case 'date':\n      return (element as HTMLInputElement).valueAsDate?.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')].reduce(\n        (map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        },\n        {}\n      )\n    default:\n      return element.value\n  }\n}\n\nconst { ResizeObserver } = globalThis\nexport const resizeObserver =\n  ResizeObserver != null\n    ? new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const element = entry.target\n          dispatch(element, 'resize')\n        }\n      })\n    : {\n        observe() {},\n        unobserve() {},\n      }\n\nexport const appendContentToElement = (\n  elt: Element | ShadowRoot | null | undefined,\n  content: ContentType | null | undefined,\n  cloneElements = true\n): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach((node) => {\n        elt.append(\n          node instanceof Node && cloneElements ? cloneWithBindings(node) : node\n        )\n      })\n    } else if (content instanceof Node) {\n      elt.append(cloneElements ? cloneWithBindings(content) : content)\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleSheet, XinStyleRule, XinStyleMap } from './css-types'\n\nexport function StyleNode(styleSheet: XinStyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet))\n}\n\nconst numericProps = [\n  'animation-iteration-count',\n  'flex',\n  'flex-base',\n  'flex-grow',\n  'flex-shrink',\n  'gap',\n  'opacity',\n  'order',\n  'tab-size',\n  'widows',\n  'z-index',\n  'zoom',\n]\nconst renderProp = (\n  indentation: string,\n  cssProp: string,\n  value: string | number | undefined\n): string => {\n  if (value === undefined) {\n    return ''\n  } else if (typeof value === 'string' || numericProps.includes(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value};`\n  } else {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n}\n\nconst renderStatement = (\n  key: string,\n  value: string | number | XinStyleRule | undefined,\n  indentation = ''\n): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value)\n      .map((innerKey) =>\n        renderStatement(innerKey, value[innerKey], `${indentation}  `)\n      )\n      .join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else {\n    return renderProp(indentation, cssProp, value)\n  }\n}\n\nexport const css = (\n  obj: XinStyleSheet | XinStyleMap,\n  indentation = ''\n): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map((prop) => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: {\n  [key: string]: string | number\n}): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] =\n      typeof value === 'number' && value !== 0 ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (\n      typeof value === 'string' &&\n      value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null\n    ) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (target[prop] == null) {\n        prop = prop.replace(/[A-Z]/g, (x) => `-${x.toLocaleLowerCase()}`)\n        const [, _varName, , isNegative, scaleText, method] = prop.match(\n          /^([^\\d_]*)((_)?(\\d+)(\\w*))?$/\n        ) as string[]\n        const varName = `--${_varName}`\n        if (scaleText != null) {\n          const scale =\n            isNegative == null\n              ? Number(scaleText) / 100\n              : -Number(scaleText) / 100\n          switch (method) {\n            case 'b': // brighten\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).brighten(scale).rgba\n                    : Color.fromCss(baseColor).darken(-scale).rgba\n              }\n              break\n            case 's': // saturate\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] =\n                  scale > 0\n                    ? Color.fromCss(baseColor).saturate(scale).rgba\n                    : Color.fromCss(baseColor).desaturate(-scale).rgba\n              }\n              break\n            case 'h': // hue\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n                console.log(\n                  Color.fromCss(baseColor).hsla,\n                  Color.fromCss(baseColor).rotate(scale).hsla\n                )\n              }\n              break\n            case 'o': // alpha\n              {\n                const baseColor = getComputedStyle(\n                  document.body\n                ).getPropertyValue(varName)\n                target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n              }\n              break\n            case '':\n              target[prop] = `calc(var(${varName}) * ${scale})`\n              break\n            default:\n              console.error(method)\n              throw new Error(\n                `Unrecognized method ${method} for css variable ${varName}`\n              )\n          }\n        } else {\n          target[prop] = `var(${varName})`\n        }\n      }\n      return target[prop]\n    },\n  }\n)\n\ntype CssVarBuilder = (val: string | number) => string\n\nexport const varDefault = new Proxy<{ [key: string]: CssVarBuilder }>(\n  {},\n  {\n    get(target, prop: string) {\n      if (target[prop] === undefined) {\n        const varName = `--${prop.replace(\n          /[A-Z]/g,\n          (x) => `-${x.toLocaleLowerCase()}`\n        )}`\n        target[prop] = (val: string | number) => `var(${varName}, ${val})`\n      }\n      return target[prop]\n    },\n  }\n)\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string =>\n  ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor(r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h =\n      s !== 0\n        ? l === r\n          ? (g - b) / s\n          : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n        : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nconst span =\n  globalThis.document !== undefined\n    ? globalThis.document.createElement('span')\n    : undefined\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss(spec: string): Color {\n    let converted = spec\n    if (span instanceof HTMLSpanElement) {\n      span.style.color = spec\n      document.body.appendChild(span)\n      converted = getComputedStyle(span).color\n      span.remove()\n    }\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl(h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(\n      `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n        0\n      )}%, ${a.toFixed(2)})`\n    )\n  }\n\n  constructor(r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : (a = 1)\n  }\n\n  get inverse(): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance(): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb(): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba(): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(\n      2\n    )})`\n  }\n\n  get RGBA(): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB(): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl(): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl(): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%)`\n  }\n\n  get hsla(): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(\n      0\n    )}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono(): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness(): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html(): string {\n    return this.a === 1\n      ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b)\n      : '#' +\n          hex2(this.r) +\n          hex2(this.g) +\n          hex2(this.b) +\n          hex2(Math.floor(255 * this.a))\n  }\n\n  brighten(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  darken(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const lClamped = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, lClamped, this.a)\n  }\n\n  saturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  desaturate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const sClamped = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, sClamped, l, this.a)\n  }\n\n  rotate(amount: number): Color {\n    const { h, s, l } = this._hsl\n    const hClamped = (h + 360 + amount) % 360\n    return Color.fromHsl(hClamped, s, l, this.a)\n  }\n\n  opacity(alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch(): void {\n    const { r, g, b, a } = this\n    console.log(\n      `%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`,\n      `background-color: rgba(${r}, ${g}, ${b}, ${a})`,\n      'background-color: #eee'\n    )\n  }\n\n  blend(otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp(min: number, v: number, max: number): number {\n  return v < min ? min : v > max ? max : v\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n\nexport const MoreMath = {\n  clamp,\n  lerp,\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport {\n  ElementPart,\n  ElementProps,\n  ElementCreator,\n  SwissArmyElement,\n  StringMap,\n} from './xin-types'\nimport { camelToKabob } from './string-case'\n\nconst MATH = 'http://www.w3.org/1998/Math/MathML'\nconst SVG = 'http://www.w3.org/2000/svg'\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nconst templates: { [key: string]: Element } = {}\n\nconst create = (\n  tagType: string,\n  ...contents: ElementPart[]\n): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    const [tag, namespace] = tagType.split('|')\n    if (namespace === undefined) {\n      templates[tagType] = globalThis.document.createElement(tag)\n    } else {\n      templates[tagType] = globalThis.document.createElementNS(namespace, tag)\n    }\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (\n      item instanceof Element ||\n      item instanceof DocumentFragment ||\n      typeof item === 'string' ||\n      typeof item === 'number'\n    ) {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // worst case, the style won't work\n            ;(elt.style as unknown as { [key: string]: string })[prop] = value[\n              prop\n            ] as string\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key === 'bind') {\n      const binding =\n        typeof value.binding === 'string'\n          ? bindings[value.binding]\n          : value.binding\n      if (binding !== undefined && value.value !== undefined) {\n        bind(\n          elt,\n          value.value,\n          value.binding instanceof Function\n            ? { toDOM: value.binding }\n            : value.binding\n        )\n      } else {\n        throw new Error(`bad binding`)\n      }\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(\n          `${key} is not allowed, bindings.${bindingType} is not defined`\n        )\n      }\n    } else if ((elt as { [key: string]: any })[key] !== undefined) {\n      // MathML is only supported on 91% of browsers, and not on the Raspberry Pi Chromium\n      const { MathMLElement } = globalThis\n      if (\n        elt instanceof SVGElement ||\n        (MathMLElement !== undefined && elt instanceof MathMLElement)\n      ) {\n        elt.setAttribute(key, value)\n      } else {\n        ;(elt as { [key: string]: any })[key] = value\n      }\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      } else if ((elt as { [key: string]: any })[attr] !== undefined) {\n        ;(elt as StringMap)[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (\n  ...contents: ElementPart[]\n) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\n/**\n * elements is a proxy that produces ElementCreators, e.g.\n * elements.div() creates <div> elements and\n * elements.myElement() creates <my-element> elements.\n */\nexport const elements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      tagName = tagName.replace(/[A-Z]/g, (c) => `-${c.toLocaleLowerCase()}`)\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(tagName, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as ElementsProxy\n\ninterface SVGElementsProxy {\n  [key: string]: ElementCreator<SVGElement>\n}\n\nexport const svgElements = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${SVG}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as SVGElementsProxy\n\ninterface MathMLElementsProxy {\n  [key: string]: ElementCreator<MathMLElement>\n}\n\nexport const mathML = new Proxy(\n  { fragment },\n  {\n    get(target, tagName: string) {\n      if ((target as StringMap)[tagName] === undefined) {\n        ;(target as StringMap)[tagName] = (...contents: ElementPart[]) =>\n          create(`${tagName}|${MATH}`, ...contents)\n      }\n      return (target as StringMap)[tagName]\n    },\n    set() {\n      throw new Error('You may not add new properties to elements')\n    },\n  }\n) as unknown as MathMLElementsProxy\n","export function camelToKabob(s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel(s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { css } from './css'\nimport { XinStyleSheet } from './css-types'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nlet anonymousElementCount = 0\n\nfunction anonElementTag(): string {\n  return `custom-elt${(anonymousElementCount++).toString(36)}`\n}\nlet instanceCount = 0\n\ninterface ElementCreatorOptions extends ElementDefinitionOptions {\n  tag?: string\n  styleSpec?: XinStyleSheet\n}\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  isSlotted?: boolean;\n  [key: string]: any\n\n  static StyleNode(styleSpec: XinStyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator(options: ElementCreatorOptions = {}): ElementCreator {\n    if (this._elementCreator == null) {\n      const { tag, styleSpec } = options\n      let tagName = options != null ? tag : null\n      if (tagName == null) {\n        if (typeof this.name === 'string' && this.name !== '') {\n          tagName = camelToKabob(this.name)\n          if (tagName.startsWith('-')) {\n            tagName = tagName.slice(1)\n          }\n        } else {\n          tagName = anonElementTag()\n        }\n      }\n      if (customElements.get(tagName) != null) {\n        console.warn(`${tagName} is already defined`)\n      }\n      if (tagName.match(/\\w+(-\\w+)+/) == null) {\n        console.warn(`${tagName} is not a legal tag for a custom-element`)\n        tagName = anonElementTag()\n      }\n      while (customElements.get(tagName) !== undefined) {\n        tagName = anonElementTag()\n      }\n      window.customElements.define(\n        tagName,\n        this as unknown as CustomElementConstructor,\n        options\n      )\n      this._elementCreator = elements[tagName]\n      if (styleSpec !== undefined) {\n        let cssSource = css(styleSpec)\n        if (tag !== undefined && tagName !== tag) {\n          cssSource = cssSource.replace(\n            new RegExp(`\\\\b${tag}\\\\b`, 'g'),\n            tagName\n          )\n        }\n        document.head.append(elements.style({ id: tagName }, cssSource))\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes(...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues: { [key: string]: any } = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        triggerRender = !!(\n          mutation.attributeName &&\n          attributeNames.includes(kabobToCamel(mutation.attributeName))\n        )\n      })\n      if (triggerRender && this.queueRender !== undefined)\n        this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach((attributeName) => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get() {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            } else if (attributeValues[attributeName] !== undefined) {\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set(value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (\n              typeof value === 'object' ||\n              `${value as string}` !== `${this[attributeName] as string}`\n            ) {\n              if (\n                value === null ||\n                value === undefined ||\n                typeof value === 'object'\n              ) {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              attributeValues[attributeName] = value\n            }\n          }\n        },\n      })\n    })\n  }\n\n  private initValue(): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (\n      valueDescriptor === undefined ||\n      valueDescriptor.get !== undefined ||\n      valueDescriptor.set !== undefined\n    ) {\n      return\n    }\n    let value = this.hasAttribute('value')\n      ? this.getAttribute('value')\n      : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get() {\n        return value\n      },\n      set(newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      },\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs(): { [key: string]: SwissArmyElement } {\n    console.warn(\n      'refs and data-ref are deprecated, use the part attribute and .parts instead'\n    )\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy(\n        {},\n        {\n          get(target: { [key: string]: SwissArmyElement }, ref: string) {\n            if (target[ref] === undefined) {\n              let element = root.querySelector(\n                `[part=\"${ref}\"],[data-ref=\"${ref}\"]`\n              )\n              if (element == null) {\n                element = root.querySelector(ref)\n              }\n              if (element == null)\n                throw new Error(`elementRef \"${ref}\" does not exist!`)\n              element.removeAttribute('data-ref')\n              target[ref] = element as SwissArmyElement\n            }\n            return target[ref]\n          },\n        }\n      )\n    }\n    return this._refs\n  }\n\n  get parts(): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy(\n        {},\n        {\n          get(target: { [key: string]: SwissArmyElement }, ref: string) {\n            if (target[ref] === undefined) {\n              let element = root.querySelector(`[part=\"${ref}\"]`)\n              if (element == null) {\n                element = root.querySelector(ref)\n              }\n              if (element == null)\n                throw new Error(`elementRef \"${ref}\" does not exist!`)\n              element.removeAttribute('data-ref')\n              target[ref] = element as SwissArmyElement\n            }\n            return target[ref]\n          },\n        }\n      )\n    }\n    return this._refs\n  }\n\n  constructor() {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback(): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback(): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender(triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate(): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const cloneElements = typeof this.content !== 'function'\n      const _content: ContentType | null =\n        typeof this.content === 'function' ? this.content() : this.content\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, _content, cloneElements)\n      } else if (_content !== null) {\n        const existingChildren = [...this.childNodes]\n        appendContentToElement(this as HTMLElement, _content, cloneElements)\n        this.isSlotted = this.querySelector('slot,xin-slot') !== undefined\n        const slots = [...this.querySelectorAll('slot')]\n        if (slots.length > 0) {\n          slots.forEach(XinSlot.replaceSlot)\n        }\n        if (existingChildren.length > 0) {\n          const slotMap: { [key: string]: Element } = { '': this }\n          ;[...this.querySelectorAll('xin-slot')].forEach((slot) => {\n            slotMap[(slot as XinSlot).name] = slot\n          })\n          existingChildren.forEach((child) => {\n            const defaultSlot = slotMap['']\n            const destSlot =\n              child instanceof Element ? slotMap[child.slot] : defaultSlot\n            ;(destSlot !== undefined ? destSlot : defaultSlot).append(child)\n          })\n        }\n      }\n      this._hydrated = true\n    }\n  }\n\n  render(): void {}\n}\n\nclass XinSlot extends Component {\n  name = ''\n  content = null\n\n  static replaceSlot(slot: HTMLSlotElement): void {\n    const _slot = document.createElement('xin-slot')\n    if (slot.name !== '') {\n      _slot.setAttribute('name', slot.name)\n    }\n    slot.replaceWith(_slot)\n  }\n\n  constructor() {\n    super()\n    this.initAttributes('name')\n  }\n}\n\nexport const xinSlot = XinSlot.elementCreator({ tag: 'xin-slot' })\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport {\n  XinObject,\n  PathTestFunction,\n  ObserverCallbackFunction,\n} from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","import { Component } from './component'\nimport { elements } from './elements'\n\nconst { span, slot } = elements\n\ntype TestExpression = () => Promise<boolean> | boolean\n\nexport class XinTest extends Component {\n  test: TestExpression = () => true\n  delay = 0\n  statis = ''\n  expect = true\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms)\n    })\n  }\n\n  styleNode = Component.StyleNode({\n    ':host': {\n      display: 'flex',\n      gap: '5px',\n      alignItems: 'center',\n    },\n    ':host [part=\"outcome\"]': {\n      display: 'inline-block',\n      borderRadius: '99px',\n      padding: '0 12px',\n      fontSize: '80%',\n    },\n    ':host .waiting': {\n      background: '#ff04',\n    },\n    ':host .running': {\n      background: '#f804',\n    },\n    ':host .success': {\n      background: '#0f04',\n    },\n    ':host .failed': {\n      background: '#f004',\n    },\n    ':host .exception': {\n      color: 'white',\n      background: 'red',\n    },\n  })\n\n  private timeout?: number\n\n  content = [span({ part: 'description' }, slot()), span({ part: 'outcome' })]\n\n  constructor() {\n    super()\n    this.initAttributes('description', 'delay', 'status')\n  }\n\n  run = () => {\n    clearTimeout(this.timeout)\n    this.status = 'waiting'\n    this.timeout = setTimeout(async () => {\n      this.status = 'running'\n      try {\n        const outcome = JSON.stringify(await this.test())\n        if (outcome === JSON.stringify(this.expect)) {\n          this.status = 'success'\n        } else {\n          this.status = `failed: got ${outcome}, expected ${this.expect}`\n        }\n      } catch (err) {\n        this.status = `exception: ${err}`\n      }\n    }, this.delay)\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.run()\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback()\n    this.class\n    clearTimeout(this.timeout)\n  }\n\n  render(): void {\n    super.render()\n    const { outcome } = this.parts\n    outcome.textContent = this.status\n    outcome.setAttribute('class', this.status.match(/\\w+/)[0])\n  }\n}\n\nexport const xinTest = XinTest.elementCreator({ tag: 'xin-test' })\n","import { XIN_PATH, XIN_VALUE } from './metadata'\nimport { XinStyleRule } from './css-types'\n\nexport type AnyFunction = (...args: any[]) => any | Promise<any>\n\nexport type AnyObject = { [key: string | symbol | number]: any }\n\nexport type XinScalar = string | boolean | number | symbol | AnyFunction\n\nexport type XinArray = any[]\n\nexport interface XinObject {\n  [key: string | number | symbol]: any\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport interface XinProps {\n  [XIN_VALUE]: XinObject | XinObject | XinScalar\n  [XIN_PATH]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]:\n    | XinProxyObject\n    | XinProxyArray\n    | XinObject\n    | XinArray\n    | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (\n    | XinProxyObject[]\n    | XinScalar[]\n  )\nexport type XinProxy = XinProps & (XinObject | XinArray)\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\nexport type XinTouchableType = string | XinProps\nexport type XinEventHandler<T = Event> =\n  | ((evt: T) => void)\n  | ((evt: T) => Promise<void>)\n  | string\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction =\n  | ((path: string) => void)\n  | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType | any\n  [key: string]: any\n}\n\nexport type XinBindingSetter<T = HTMLElement> = (\n  element: T,\n  value: any,\n  options?: XinObject\n) => void\nexport type XinBindingGetter<T = HTMLElement> = (\n  element: T,\n  options?: XinObject\n) => any\n\nexport interface XinBinding<T = HTMLElement> {\n  toDOM?: XinBindingSetter<T>\n  fromDOM?: XinBindingGetter<T>\n}\n\nexport interface XinInlineBinding {\n  value: XinTouchableType\n  binding: XinBinding | string\n}\n\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bind?: XinInlineBinding\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  style?: XinStyleRule\n  class?: string\n  apply?: (element: HTMLElement) => void | Promise<void>\n  [key: string]: any\n}\n\nexport interface StringMap {\n  [key: string]: any\n}\n\nexport type ValueElement =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement\nexport type SwissArmyElement = HTMLElement\nexport type ElementPart =\n  | Element\n  | DocumentFragment\n  | ElementProps\n  | string\n  | number\nexport type HTMLElementCreator<T extends Node = SwissArmyElement> = (\n  ...contents: ElementPart[]\n) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = SwissArmyElement> = (\n  ...contents: ElementPart[]\n) => T\nexport type ContentPart = Element | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n","import { XinProxyObject, AnyObject } from './xin-types'\nimport { xin } from './xin'\n\nexport function xinProxy<T extends AnyObject>(obj: T): T {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    // eslint-disable-next-line\n    xin[key] = (obj as { [key: string]: any })[key]\n    registered[key] = xin[key] as XinProxyObject\n  })\n  return registered as T\n}\n"],"names":[],"version":3,"file":"module.js.map"}