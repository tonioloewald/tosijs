{"mappings":"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","sources":["src/index.ts","src/more-math.ts","src/xin.ts","src/settings.ts","src/path-listener.ts","src/metadata.ts","src/deep-clone.ts","src/by-path.ts","src/make-error.ts","src/register.ts","src/hot-reload.ts","src/throttle.ts","src/component.ts","src/css.ts","src/color.ts","src/elements.ts","src/bind.ts","src/bindings.ts","src/list-binding.ts","src/dom.ts","src/string-case.ts","src/xin-types.ts"],"sourcesContent":["// workaround for https://github.com/parcel-bundler/parcel/issues/5911\nimport * as _MoreMath from './more-math'\n\nexport { xin, observe, unobserve, touch, observerShouldBeRemoved } from './xin'\nexport { register } from './register'\nexport { hotReload } from './hot-reload'\nexport { throttle, debounce } from './throttle'\nexport { Component } from './component'\nexport { elements, makeComponent } from './elements'\nexport { settings } from './settings'\nexport { bind, on } from './bind'\nexport { bindings } from './bindings'\nexport { getListItem } from './metadata'\nexport { vars, initVars, css, darkMode } from './css'\nexport { Color } from './color'\nexport const MoreMath = _MoreMath\n\nexport * from './xin-types'\n","/*\n# more-math\n\nSome simple functions egregiously missing from `Math`\n*/\n\nexport const RADIANS_TO_DEGREES = 180 / Math.PI\nexport const DEGREES_TO_RADIANS = Math.PI / 180\n\nexport function clamp (min: number, v: number, max: number): number {\n  return v < min ? min : (v > max ? max : v)\n}\n\nexport function lerp (a: number, b: number, t: number): number {\n  t = clamp(0, t, 1)\n  return t * (b - a) + a\n}\n","import { XinProxyObject, XinProxy, XinProxyTarget, XinObject, XinArray, XinValue, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { settings } from './settings'\nimport { Listener, touch, observe as _observe, unobserve, updates, observerShouldBeRemoved } from './path-listener'\nimport { getByPath, setByPath } from './by-path'\nimport { XIN_VALUE, XIN_PATH } from './metadata'\n\ninterface ProxyConstructor {\n  revocable: <T extends object, P extends object>(\n    target: T,\n    handler: ProxyHandler<P>,\n  ) => { proxy: P, revoke: () => void }\n  new <T extends object>(target: T, handler: ProxyHandler<T>): T\n  new <T extends object, P extends object>(target: T, handler: ProxyHandler<P>): P\n}\ndeclare let Proxy: ProxyConstructor\n\n// list of Array functions that change the array\nconst ARRAY_MUTATIONS = ['sort', 'splice', 'copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'unshift']\n\nconst registry: XinObject = {}\nconst debugPaths = true\nconst validPath = /^\\.?([^.[\\](),])+(\\.[^.[\\](),]+|\\[\\d+\\]|\\[[^=[\\](),]*=[^[\\]()]+\\])*$/\n\nconst isValidPath = (path: string): boolean => validPath.test(path)\n\nconst extendPath = (path = '', prop = ''): string => {\n  if (path === '') {\n    return prop\n  } else {\n    if (prop.match(/^\\d+$/) !== null || prop.includes('=')) {\n      return `${path}[${prop}]`\n    } else {\n      return `${path}.${prop}`\n    }\n  }\n}\n\nconst regHandler = (path = ''): ProxyHandler<XinObject> => ({\n  // TODO figure out how to correctly return array[Symbol.iterator] so that for(const foo of xin.foos) works\n  // as you'd expect\n  get (target: XinObject | XinArray, _prop: string | symbol): XinValue {\n    if (_prop === XIN_PATH) {\n      return path\n    } else if (_prop === XIN_VALUE) {\n      return target\n    }\n    if (typeof _prop === 'symbol') {\n      // @ts-expect-error\n      return target[_prop]\n    }\n    let prop = _prop\n    const compoundProp = prop.match(/^([^.[]+)\\.(.+)$/) ?? // basePath.subPath (omit '.')\n                        prop.match(/^([^\\]]+)(\\[.+)/) ?? // basePath[subPath\n                        prop.match(/^(\\[[^\\]]+\\])\\.(.+)$/) ?? // [basePath].subPath (omit '.')\n                        prop.match(/^(\\[[^\\]]+\\])\\[(.+)$/) // [basePath][subPath\n    if (compoundProp !== null) {\n      const [, basePath, subPath] = compoundProp\n      const currentPath = extendPath(path, basePath)\n      const value = getByPath(target, basePath)\n      return value !== null && typeof value === 'object' ? new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath))[subPath] : value\n    }\n    if (prop.startsWith('[') && prop.endsWith(']')) {\n      prop = prop.substring(1, prop.length - 1)\n    }\n    if (\n      (!Array.isArray(target) && target[prop] !== undefined) ||\n      (Array.isArray(target) && prop.includes('='))\n    ) {\n      let value: XinValue\n      if (prop.includes('=')) {\n        const [idPath, needle] = prop.split('=')\n        value = (target as XinObject[]).find(\n          (candidate: XinObject) => `${getByPath(candidate, idPath) as string}` === needle\n        )\n      } else {\n        value = (target as XinArray)[prop as unknown as number]\n      }\n      if (value !== null && typeof value === 'object') {\n        const currentPath = extendPath(path, prop)\n        return new Proxy<XinObject, XinProxyObject>(value, regHandler(currentPath)) as XinValue\n      } else if (typeof value === 'function') {\n        return value.bind(target)\n      } else {\n        return value\n      }\n    } else if (Array.isArray(target)) {\n      const value = target[prop as unknown as number]\n      return typeof value === 'function'\n        ? (...items: any[]) => {\n            // @ts-expect-error\n            const result = (Array.prototype[prop]).apply(target, items)\n            if (ARRAY_MUTATIONS.includes(prop)) {\n              touch(path)\n            }\n            return result\n          }\n        : typeof value === 'object'\n          ? new Proxy<XinProxyTarget, XinObject>(value, regHandler(extendPath(path, prop)))\n          : value\n    } else {\n      return target[prop]\n    }\n  },\n  set (_, prop: string, value: any) {\n    // eslint-disable-next-line\n    if (value != null && value[XIN_PATH]) {\n      value = value[XIN_VALUE]\n    }\n    const fullPath = extendPath(path, prop)\n    if (debugPaths && !isValidPath(fullPath)) {\n      throw new Error(`setting invalid path ${fullPath}`)\n    }\n    let existing = xin[fullPath] as XinProxy\n    // eslint-disable-next-line\n    if (existing != null && existing[XIN_VALUE] != null) {\n      existing = existing[XIN_VALUE] as XinProxy\n    }\n    if (existing !== value && setByPath(registry, fullPath, value)) {\n      touch(fullPath)\n    }\n    return true\n  }\n})\n\nconst observe = (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction): Listener => {\n  const func = typeof callback === 'function' ? callback : (xin)[callback]\n\n  if (typeof func !== 'function') {\n    throw new Error(`observe expects a function or path to a function, ${callback as string} is neither`)\n  }\n\n  return _observe(test, func as ObserverCallbackFunction)\n}\n\nconst xin = new Proxy<XinObject, XinProxyObject>(registry, regHandler())\n\nexport {\n  xin,\n  updates,\n  touch,\n  observe,\n  unobserve,\n  observerShouldBeRemoved,\n  isValidPath,\n  settings\n}\n","export const settings = {\n  debug: false,\n  perf: false\n}\n","import { PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { xinPath } from './metadata'\nimport { settings } from './settings'\n\nexport const observerShouldBeRemoved = Symbol('observer should be removed')\nexport const listeners: Listener[] = [] // { path_string_or_test, callback }\nconst touchedPaths: string[] = []\nlet updateTriggered: number | boolean = false\nlet updatePromise: Promise<undefined>\nlet resolveUpdate: Function\n\nexport class Listener {\n  description: string\n  test: PathTestFunction\n  callback: ObserverCallbackFunction\n\n  constructor (test: string | RegExp | PathTestFunction, callback: string | ObserverCallbackFunction) {\n    const callbackDescription = typeof callback === 'string' ? `\"${callback}\"` : `function ${callback.name}`\n    let testDescription\n    if (typeof test === 'string') {\n      this.test = t => typeof t === 'string' && t !== '' && (test.startsWith(t) || t.startsWith(test))\n      testDescription = `test = \"${test}\"`\n    } else if (test instanceof RegExp) {\n      this.test = test.test.bind(test)\n      testDescription = `test = \"${test.toString()}\"`\n    } else if (test instanceof Function) {\n      this.test = test\n      testDescription = `test = function ${test.name}`\n    } else {\n      throw new Error(\n        'expect listener test to be a string, RegExp, or test function'\n      )\n    }\n    this.description = `${testDescription}, ${callbackDescription}`\n    if (typeof callback === 'function') {\n      this.callback = callback\n    } else {\n      throw new Error('expect callback to be a path or function')\n    }\n    listeners.push(this)\n  }\n}\n\nexport const updates = async (): Promise<void> => {\n  if (updatePromise === undefined) {\n    return\n  }\n  await updatePromise\n}\n\nconst update = (): void => {\n  if (settings.perf) {\n    console.time('xin async update')\n  }\n  const paths = [...touchedPaths]\n\n  for (const path of paths) {\n    listeners\n      .filter(listener => {\n        let heard\n        try {\n          heard = listener.test(path)\n        } catch (e) {\n          throw new Error(`Listener ${listener.description} threw \"${e as string}\" at \"${path}\"`)\n        }\n        if (heard === observerShouldBeRemoved) {\n          unobserve(listener)\n          return false\n        }\n        return heard as boolean\n      })\n      .forEach(listener => {\n        let outcome\n        try {\n          outcome = listener.callback(path)\n        } catch (e) {\n          console.error(`Listener ${listener.description} threw \"${e as string}\" handling \"${path}\"`)\n        }\n        if (outcome === observerShouldBeRemoved) {\n          unobserve(listener)\n        }\n      })\n  }\n\n  touchedPaths.splice(0)\n  updateTriggered = false\n  if (typeof resolveUpdate === 'function') {\n    resolveUpdate()\n  }\n  if (settings.perf) {\n    console.timeEnd('xin async update')\n  }\n}\n\nexport const touch = (touchable: any): void => {\n  const path = typeof touchable === 'string' ? touchable : xinPath(touchable)\n\n  if (path === undefined) {\n    console.error('touch was called on an invalid target', touchable)\n    throw new Error('touch was called on an invalid target')\n  }\n\n  if (updateTriggered === false) {\n    updatePromise = new Promise(resolve => {\n      resolveUpdate = resolve\n    })\n    updateTriggered = setTimeout(update)\n  }\n\n  if (touchedPaths.find(touchedPath => path.startsWith(touchedPath)) == null) {\n    touchedPaths.push(path)\n  }\n}\n\nexport const observe = (test: string | RegExp | PathTestFunction, callback: ObserverCallbackFunction): Listener => {\n  return new Listener(test, callback)\n}\n\nexport const unobserve = (listener: Listener): void => {\n  const index = listeners.indexOf(listener)\n  if (index > -1) {\n    listeners.splice(index, 1)\n  } else {\n    throw new Error('unobserve failed, listener not found')\n  }\n}\n","import { XinBinding, XinObject, XinProxy } from './xin-types'\nimport { deepClone } from './deep-clone'\n\nexport const BOUND_CLASS = '-xin-data'\nexport const BOUND_SELECTOR = `.${BOUND_CLASS}`\nexport const EVENT_CLASS = '-xin-event'\nexport const EVENT_SELECTOR = `.${EVENT_CLASS}`\n\nexport const XIN_PATH = Symbol('xin-path')\nexport const XIN_VALUE = Symbol('xin-value')\n\nexport const xinPath = (x: any): string | undefined => {\n  return x[XIN_PATH]\n}\n\nexport function xinValue<T extends {}> (x: T): T {\n  // eslint-disable-next-line\n  return (typeof x === 'object' && x !== null ? (x as unknown as XinProxy)[XIN_VALUE] || x : x) as T\n}\n\nexport interface DataBinding {\n  path: string\n  binding: XinBinding\n  options?: XinObject\n}\n\nexport type XinEventHandler = ((event: Event) => void) | string\n\nexport type DataBindings = DataBinding[]\n\nexport interface XinEventBindings {\n  [eventType: string]: XinEventHandler[]\n}\n\nexport const elementToHandlers: WeakMap<Element, XinEventBindings> = new WeakMap()\nexport const elementToBindings: WeakMap<Element, DataBindings> = new WeakMap()\n\ninterface ElementMetadata {\n  eventBindings?: XinEventBindings\n  dataBindings?: DataBindings\n}\n\nexport const getElementBindings = (element: Element): ElementMetadata => {\n  return {\n    eventBindings: elementToHandlers.get(element),\n    dataBindings: elementToBindings.get(element)\n  }\n}\n\nexport const cloneWithBindings = (element: Node): Node => {\n  const cloned = element.cloneNode()\n  if (cloned instanceof HTMLElement) {\n    const dataBindings = elementToBindings.get(element as HTMLElement)\n    const eventHandlers = elementToHandlers.get(element as HTMLElement)\n    if (dataBindings != null) {\n      // @ts-expect-error-error\n      elementToBindings.set(cloned, deepClone(dataBindings))\n    }\n    if (eventHandlers != null) {\n      // @ts-expect-error-error\n      elementToHandlers.set(cloned, deepClone(eventHandlers))\n    }\n  }\n  for (const node of element instanceof HTMLTemplateElement ? element.content.childNodes : element.childNodes) {\n    if (node instanceof HTMLElement || node instanceof DocumentFragment) {\n      cloned.appendChild(cloneWithBindings(node))\n    } else {\n      cloned.appendChild(node.cloneNode())\n    }\n  }\n  return cloned\n}\n\nexport const elementToItem: WeakMap<HTMLElement, XinObject> = new WeakMap()\n\nexport const getListItem = (element: HTMLElement): any => {\n  const html = document.body.parentElement\n  while (element.parentElement != null && element.parentElement !== html) {\n    const item = elementToItem.get(element)\n    if (item != null) {\n      return item\n    }\n    element = element.parentElement\n  }\n  return false\n}\n","import { XinObject, XinArray } from './xin-types'\n\ntype Scalar = string | boolean | number | Function\ntype Cloneable = Scalar | XinObject | XinArray\n\nexport function deepClone (obj: Cloneable): Cloneable | Cloneable[] {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n  if (Array.isArray(obj)) {\n    // @ts-expect-error-error\n    return obj.map(deepClone)\n  }\n  const clone: XinObject = {}\n  for (const key in obj) {\n    const val = obj[key]\n    if (obj != null && typeof obj === 'object') {\n      clone[key] = deepClone(val) as XinObject\n    } else {\n      clone[key] = val\n    }\n  }\n  return clone\n}\n","// unique tokens passed to set by path to delete or create properties\n\nimport { XinObject, XinArray, XinScalar } from './xin-types'\nimport { makeError } from './make-error'\n\nconst now36 = (): string => new Date(parseInt('1000000000', 36) + Date.now()).valueOf().toString(36).slice(1)\nlet _seq = 0\nconst seq = (): string => (parseInt('10000', 36) + (++_seq)).toString(36).slice(-5)\nconst id = (): string => now36() + seq()\n\nconst _delete_ = {}\nconst _newObject_ = {}\n\ntype Part = string | string[]\ntype PartArray = Part[]\n\nfunction pathParts (path: string | PartArray): PartArray {\n  if (path === '') {\n    return []\n  }\n\n  if (Array.isArray(path)) {\n    return path\n  } else {\n    const parts: PartArray = []\n    while (path.length > 0) {\n      let index = path.search(/\\[[^\\]]+\\]/)\n      if (index === -1) {\n        parts.push(path.split('.'))\n        break\n      } else {\n        const part = path.slice(0, index)\n        path = path.slice(index)\n        if (part !== '') {\n          parts.push(part.split('.'))\n        }\n        index = path.indexOf(']') + 1\n        parts.push(path.slice(1, index - 1))\n        // handle paths dereferencing array element like foo[0].id\n        if (path.slice(index, index + 1) === '.') {\n          index += 1\n        }\n        path = path.slice(index)\n      }\n    }\n    return parts\n  }\n}\n\nconst idPathMaps = new WeakMap()\n\ninterface IdPathMap {\n  [key: string]: number\n}\n\nfunction buildIdPathValueMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined) {\n    idPathMaps.set(array, {})\n  }\n  if (idPathMaps.get(array)[idPath] === undefined) {\n    idPathMaps.get(array)[idPath] = {}\n  }\n  const map = idPathMaps.get(array)[idPath]\n\n  if (idPath === '_auto_') {\n    array.forEach((item, idx) => {\n      if (item._auto_ === undefined) item._auto_ = id()\n      map[item._auto_ as string + ''] = idx\n    })\n  } else {\n    array.forEach((item, idx) => {\n      map[getByPath(item, idPath) as string + ''] = idx\n    })\n  }\n  return map\n}\n\nfunction getIdPathMap (array: XinObject[], idPath: string): IdPathMap {\n  if (idPathMaps.get(array) === undefined || idPathMaps.get(array)[idPath] === undefined) {\n    return buildIdPathValueMap(array, idPath)\n  } else {\n    return idPathMaps.get(array)[idPath]\n  }\n}\n\nfunction keyToIndex (array: XinObject[], idPath: string, idValue: any): number {\n  idValue = idValue as string + ''\n  let idx = getIdPathMap(array, idPath)[idValue]\n  if (idx === undefined || getByPath(array[idx], idPath) as string + '' !== idValue) {\n    idx = buildIdPathValueMap(array, idPath)[idValue]\n  }\n  return idx\n}\n\nfunction byKey (obj: XinObject, key: string, valueToInsert?: any): any {\n  if (obj[key] === undefined && valueToInsert !== undefined) {\n    obj[key] = valueToInsert\n  }\n  return obj[key]\n}\n\nfunction byIdPath (array: any[], idPath: string, idValue: string, valueToInsert?: any): any {\n  let idx = idPath !== '' ? keyToIndex(array, idPath, idValue) : idValue\n  if (valueToInsert === _delete_) {\n    array.splice(idx as number, 1)\n    idPathMaps.delete(array)\n    return Symbol('deleted')\n  } else if (valueToInsert === _newObject_) {\n    if (idPath === '' && array[idx as number] === undefined) {\n      array[idx as number] = {}\n    }\n  } else if (valueToInsert !== undefined) {\n    if (idx !== undefined) {\n      array[idx as number] = valueToInsert\n    } else if (idPath !== '' && getByPath(valueToInsert, idPath) as string + '' === idValue + '') {\n      array.push(valueToInsert)\n      idx = array.length - 1\n    } else {\n      throw new Error(`byIdPath insert failed at [${idPath}=${idValue}]`)\n    }\n  }\n  return array[idx as number]\n}\n\nfunction expectArray (obj: any): void {\n  if (!Array.isArray(obj)) {\n    throw makeError('setByPath failed: expected array, found', obj)\n  }\n}\n\nfunction expectObject (obj: any): void {\n  if ((obj == null) || obj.constructor !== Object) {\n    throw makeError('setByPath failed: expected Object, found', obj)\n  }\n}\n\nfunction getByPath (obj: XinObject | XinArray, path: string): any {\n  const parts = pathParts(path)\n  let found: XinObject | XinArray | XinScalar = obj\n  let i, iMax, j, jMax\n  for (i = 0, iMax = parts.length; found !== undefined && i < iMax; i++) {\n    const part = parts[i]\n    if (Array.isArray(part)) {\n      for (j = 0, jMax = part.length; found !== undefined && j < jMax; j++) {\n        const key = part[j]\n        found = (found as XinObject)[key]\n      }\n    } else {\n      if ((found as XinArray).length === 0) {\n        // @ts-expect-error-error\n        found = (found as XinArray)[part.slice(1)]\n        if (part[0] !== '=') {\n          return undefined\n        }\n      } else if (part.includes('=')) {\n        const [idPath, ...tail] = part.split('=')\n        found = byIdPath(found as any[], idPath, tail.join('='))\n      } else {\n        j = parseInt(part, 10)\n        found = (found as XinArray)[j]\n      }\n    }\n  }\n  return found\n}\n\nfunction setByPath (orig: XinObject | XinArray, path: string, val: any): boolean {\n  let obj: XinObject | XinArray | XinScalar = orig\n  const parts = pathParts(path)\n\n  while ((obj != null) && (parts.length > 0)) {\n    const part = parts.shift()\n    if (typeof part === 'string') {\n      const equalsOffset = part.indexOf('=')\n      if (equalsOffset > -1) {\n        if (equalsOffset === 0) {\n          expectObject(obj)\n        } else {\n          expectArray(obj)\n        }\n        const idPath = part.slice(0, equalsOffset)\n        const idValue = part.slice(equalsOffset + 1)\n        obj = byIdPath(obj as any[], idPath, idValue, (parts.length > 0) ? _newObject_ : val)\n        if (parts.length === 0) {\n          return true\n        }\n      } else {\n        expectArray(obj)\n        const idx = parseInt(part, 10)\n        if (parts.length > 0) {\n          obj = (obj as XinArray)[idx]\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinArray)[idx] === val) {\n              return false\n            }\n            (obj as XinArray)[idx] = val\n          } else {\n            (obj as XinArray).splice(idx, 1)\n          }\n          return true\n        }\n      }\n    } else if (Array.isArray(part) && (part.length > 0)) {\n      expectObject(obj)\n      while (part.length > 0) {\n        const key = part.shift() as string\n        if ((part.length > 0) || (parts.length > 0)) {\n          // if we're at the end of part.length then we need to insert an array\n          obj = byKey((obj as XinObject), key, (part.length > 0) ? {} : [])\n        } else {\n          if (val !== _delete_) {\n            if ((obj as XinObject)[key] === val) {\n              return false\n            }\n            (obj as XinObject)[key] = val\n          } else {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n              return false\n            }\n            // eslint-disable-next-line\n            delete (obj as XinObject)[key]\n          }\n          return true\n        }\n      }\n    } else {\n      throw new Error(`setByPath failed, bad path ${path}`)\n    }\n  }\n\n  // eslint-disable-next-line\n  throw new Error(`setByPath(${orig}, ${path}, ${val}) failed`)\n}\n\nfunction deleteByPath (orig: XinObject, path: string): void {\n  if (getByPath(orig, path) !== null) {\n    setByPath(orig, path, _delete_)\n  }\n}\n\nexport { getByPath, setByPath, deleteByPath, pathParts }\n","const stringify = (x: any): string => {\n  try {\n    return JSON.stringify(x)\n  } catch (_) {\n    return '{has circular references}'\n  }\n}\n\nexport const makeError = (...messages: any[]): Error => new Error(messages.map(stringify).join(' '))\n","import { XinProxyObject } from './xin-types'\nimport { xin } from './xin'\n\nexport function register<T extends {}> (obj: T): T {\n  const registered: { [key: string]: any } = {}\n  Object.keys(obj).forEach((key: string) => {\n    // eslint-disable-next-line\n    xin[key] = (obj as {[key: string]: any})[key]\n    registered[key] = xin[key] as XinProxyObject\n  })\n  return registered as T\n}\n","import { xin, observe } from './xin'\nimport { XIN_VALUE } from './metadata'\nimport { XinObject, PathTestFunction, ObserverCallbackFunction } from './xin-types'\nimport { debounce } from './throttle'\n\n// TODO reimplement using IndexedDB\n\nexport const hotReload = (test: PathTestFunction = () => true): void => {\n  const savedState = localStorage.getItem('xin-state')\n  if (savedState != null) {\n    const state = JSON.parse(savedState)\n    for (const key of Object.keys(state).filter(test)) {\n      if (xin[key] !== undefined) {\n        Object.assign(xin[key], state[key])\n      } else {\n        xin[key] = state[key]\n      }\n    }\n  }\n\n  const saveState = debounce(() => {\n    const obj: XinObject = {}\n    const state = xin[XIN_VALUE] as XinObject\n    for (const key of Object.keys(state).filter(test)) {\n      obj[key] = state[key]\n    }\n    localStorage.setItem('xin-state', JSON.stringify(obj))\n    console.log('xin state saved to localStorage')\n  }, 500)\n\n  observe(test, saveState as ObserverCallbackFunction)\n}\n","type VoidFunc = (...args: any[]) => void\n\nexport const debounce = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  return (...args: any[]) => {\n    if (debounceId !== undefined) clearTimeout(debounceId)\n    debounceId = setTimeout(() => {\n      origFn(...args)\n    }, minInterval)\n  }\n}\n\nexport const throttle = (origFn: VoidFunc, minInterval = 250): VoidFunc => {\n  let debounceId: number\n  let previousCall = Date.now() - minInterval\n  let inFlight = false\n  return (...args: any[]) => {\n    clearTimeout(debounceId)\n    debounceId = setTimeout(async () => {\n      origFn(...args)\n      previousCall = Date.now()\n    }, minInterval)\n    if (!inFlight && Date.now() - previousCall >= minInterval) {\n      inFlight = true\n      try {\n        origFn(...args)\n        previousCall = Date.now()\n      } finally {\n        inFlight = false\n      }\n    }\n  }\n}\n","import { css, XinStyleSheet } from './css'\nimport { deepClone } from './deep-clone'\nimport { appendContentToElement, dispatch, resizeObserver } from './dom'\nimport { elements, ElementsProxy } from './elements'\nimport { camelToKabob, kabobToCamel } from './string-case'\nimport { ElementCreator, SwissArmyElement, ContentType } from './xin-types'\n\nlet instanceCount = 0\n\nexport abstract class Component extends HTMLElement {\n  static elements: ElementsProxy = elements\n  private static _elementCreator?: ElementCreator\n  instanceId: string\n  styleNode?: HTMLStyleElement\n  content: ContentType | (() => ContentType) | null = elements.slot()\n  value?: any\n  [key: string]: any\n\n  static StyleNode (styleSpec: XinStyleSheet): HTMLStyleElement {\n    return elements.style(css(styleSpec))\n  }\n\n  static elementCreator (options?: ElementDefinitionOptions & { tag?: string }): ElementCreator {\n    if (this._elementCreator == null) {\n      let desiredTag = options != null ? options.tag : null\n      if (desiredTag == null) {\n        desiredTag = camelToKabob(this.name)\n        if (desiredTag.startsWith('-')) {\n          desiredTag = desiredTag.substring(1)\n        }\n        if (!desiredTag.includes('-')) {\n          desiredTag += '-elt'\n        }\n      }\n      let attempts = 0\n      while (this._elementCreator == null) {\n        attempts += 1\n        const tag = attempts === 1 ? desiredTag : `${desiredTag}-${attempts}`\n        try {\n          window.customElements.define(tag, this as unknown as CustomElementConstructor, options)\n          this._elementCreator = elements[tag]\n        } catch (e) {\n          throw new Error(`could not define ${this.name} as <${tag}>: ${String(e)}`)\n        }\n      }\n    }\n    return this._elementCreator\n  }\n\n  initAttributes (...attributeNames: string[]): void {\n    const attributes: { [key: string]: any } = {}\n    const attributeValues = {}\n    const observer = new MutationObserver((mutationsList) => {\n      let triggerRender = false\n      mutationsList.forEach((mutation) => {\n        // eslint-disable-next-line\n        triggerRender = !!(mutation.attributeName && attributeNames.includes(kabobToCamel(mutation.attributeName)))\n      })\n      if (triggerRender && this.queueRender !== undefined) this.queueRender(false)\n    })\n    observer.observe(this, { attributes: true })\n    attributeNames.forEach(attributeName => {\n      attributes[attributeName] = deepClone(this[attributeName])\n      const attributeKabob = camelToKabob(attributeName)\n      Object.defineProperty(this, attributeName, {\n        enumerable: false,\n        get () {\n          if (typeof attributes[attributeName] === 'boolean') {\n            return this.hasAttribute(attributeKabob)\n          } else {\n            // eslint-disable-next-line\n            if (this.hasAttribute(attributeKabob)) {\n              return typeof attributes[attributeName] === 'number'\n                ? parseFloat(this.getAttribute(attributeKabob))\n                : this.getAttribute(attributeKabob)\n            // @ts-expect-error\n            } else if (attributeValues[attributeName] !== undefined) {\n            // @ts-expect-error\n              return attributeValues[attributeName]\n            } else {\n              return attributes[attributeName]\n            }\n          }\n        },\n        set (value) {\n          if (typeof attributes[attributeName] === 'boolean') {\n            if (value !== this[attributeName]) {\n              // eslint-disable-next-line\n              if (value) {\n                this.setAttribute(attributeKabob, '')\n              } else {\n                this.removeAttribute(attributeKabob)\n              }\n              this.queueRender()\n            }\n          } else if (typeof attributes[attributeName] === 'number') {\n            if (value !== parseFloat(this[attributeName])) {\n              this.setAttribute(attributeKabob, value)\n              this.queueRender()\n            }\n          } else {\n            if (typeof value === 'object' || `${value as string}` !== `${this[attributeName] as string}`) {\n              if (value === null || value === undefined || typeof value === 'object') {\n                this.removeAttribute(attributeKabob)\n              } else {\n                this.setAttribute(attributeKabob, value)\n              }\n              this.queueRender()\n              // @ts-expect-error\n              attributeValues[attributeName] = value\n            }\n          }\n        }\n      })\n    })\n  }\n\n  private initValue (): void {\n    const valueDescriptor = Object.getOwnPropertyDescriptor(this, 'value')\n    if (valueDescriptor === undefined || valueDescriptor.get !== undefined || valueDescriptor.set !== undefined) {\n      return\n    }\n    let value = this.hasAttribute('value') ? this.getAttribute('value') : deepClone(this.value)\n    delete this.value\n    Object.defineProperty(this, 'value', {\n      enumerable: false,\n      get () {\n        return value\n      },\n      set (newValue: any) {\n        if (value !== newValue) {\n          value = newValue\n          this.queueRender(true)\n        }\n      }\n    })\n  }\n\n  private _refs?: { [key: string]: SwissArmyElement }\n  get refs (): { [key: string]: SwissArmyElement } {\n    const root = this.shadowRoot != null ? this.shadowRoot : this\n    if (this._refs == null) {\n      this._refs = new Proxy({}, {\n        get (target: { [key: string]: SwissArmyElement }, ref: string) {\n          if (target[ref] === undefined) {\n            let element = root.querySelector(`[data-ref=\"${ref}\"]`)\n            if (element == null) {\n              element = root.querySelector(ref)\n            }\n            if (element == null) throw new Error(`elementRef \"${ref}\" does not exist!`)\n            element.removeAttribute('data-ref')\n            target[ref] = element as SwissArmyElement\n          }\n          return target[ref]\n        }\n      })\n    }\n    return this._refs\n  }\n\n  constructor () {\n    super()\n    instanceCount += 1\n    this.initAttributes('hidden')\n    this.instanceId = `${this.tagName.toLocaleLowerCase()}-${instanceCount}`\n    this._value = deepClone(this.defaultValue)\n  }\n\n  connectedCallback (): void {\n    this.hydrate()\n    // super annoyingly, chrome loses its shit if you set *any* attributes in the constructor\n    if (this.role != null) this.setAttribute('role', this.role)\n    if (this.onResize !== undefined) {\n      resizeObserver.observe(this)\n      if (this._onResize == null) {\n        this._onResize = this.onResize.bind(this)\n      }\n      this.addEventListener('resize', this._onResize)\n    }\n    if (this.value != null && this.getAttribute('value') != null) {\n      this._value = this.getAttribute('value')\n    }\n    this.queueRender()\n  }\n\n  disconnectedCallback (): void {\n    resizeObserver.unobserve(this)\n  }\n\n  private _changeQueued = false\n  private _renderQueued = false\n  queueRender (triggerChangeEvent = false): void {\n    if (!this._hydrated) return\n    if (!this._changeQueued) this._changeQueued = triggerChangeEvent\n    if (!this._renderQueued) {\n      this._renderQueued = true\n      requestAnimationFrame(() => {\n        // TODO add mechanism to allow component developer to have more control over\n        // whether input vs. change events are emitted\n        if (this._changeQueued) dispatch(this, 'change')\n        this._changeQueued = false\n        this._renderQueued = false\n        this.render()\n      })\n    }\n  }\n\n  private _hydrated = false\n  private hydrate (): void {\n    if (!this._hydrated) {\n      this.initValue()\n      const _content: ContentType | null = typeof this.content === 'function' ? this.content() : this.content\n      if (this.styleNode !== undefined) {\n        const shadow = this.attachShadow({ mode: 'open' })\n        shadow.appendChild(this.styleNode)\n        appendContentToElement(shadow, _content)\n      } else {\n        appendContentToElement(this as HTMLElement, _content)\n      }\n      this._hydrated = true\n    }\n  }\n\n  render (): void {}\n}\n","import { Color } from './color'\nimport { elements } from './elements'\nimport { camelToKabob } from './string-case'\nimport { XinStyleRule, XinStyleMap } from './xin-types'\n\nexport interface XinStyleSheet {\n  [key: string]: XinStyleRule | XinStyleMap | string\n}\n\nexport function StyleNode (styleSheet: XinStyleSheet): HTMLStyleElement {\n  return elements.style(css(styleSheet))\n}\n\nconst dimensionalProps = ['left', 'right', 'top', 'bottom', 'gap']\nconst isDimensional = (cssProp: string): boolean => {\n  return (cssProp.match(/(width|height|size|margin|padding|radius|spacing|top|left|right|bottom)/) != null) || dimensionalProps.includes(cssProp)\n}\n\nconst renderStatement = (key: string, value: string | number | XinStyleRule | undefined, indentation = ''): string => {\n  const cssProp = camelToKabob(key)\n  if (typeof value === 'object') {\n    const renderedRule = Object.keys(value).map(innerKey => renderStatement(innerKey, value[innerKey], `${indentation}  `)).join('\\n')\n    return `${indentation}  ${key} {\\n${renderedRule}\\n${indentation}  }`\n  } else if (typeof value === 'number' && isDimensional(cssProp)) {\n    return `${indentation}  ${cssProp}: ${value}px;`\n  }\n  return value !== undefined ? `${indentation}  ${cssProp}: ${value};` : ''\n}\n\nexport const css = (obj: XinStyleSheet | XinStyleMap, indentation = ''): string => {\n  const selectors = Object.keys(obj).map((selector) => {\n    const body = obj[selector]\n    if (typeof body === 'string') {\n      if (selector === '@import') {\n        return `@import url('${body}');`\n      }\n      throw new Error('top-level string value only allowed for `@import`')\n    }\n    const rule = Object.keys(body)\n      .map(prop => renderStatement(prop, body[prop]))\n      .join('\\n')\n    return `${indentation}${selector} {\\n${rule}\\n}`\n  })\n  return selectors.join('\\n\\n')\n}\n\nexport const initVars = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    const value = obj[key]\n    const kabobKey = camelToKabob(key)\n    rule[`--${kabobKey}`] = typeof value === 'number' && isDimensional(kabobKey) ? String(value) + 'px' : value\n  }\n  return rule\n}\n\nexport const darkMode = (obj: XinStyleRule): XinStyleRule => {\n  const rule: XinStyleRule = {}\n  for (const key of Object.keys(obj)) {\n    let value = obj[key]\n    if (typeof value === 'string' && value.match(/^(#|rgb[a]?\\(|hsl[a]?\\()/) != null) {\n      value = Color.fromCss(value).inverseLuminance.html\n      rule[`--${camelToKabob(key)}`] = value\n    }\n  }\n  return rule\n}\n\nexport const vars = new Proxy<{ [key: string]: string }>({}, {\n  get (target, prop: string) {\n    if (target[prop] == null) {\n      prop = prop.replace(/[A-Z]/g, x => `-${x.toLocaleLowerCase()}`)\n      let [,varName,, isNegative, scaleText, method] = prop.match(/^([^\\d_]*)((_)?(\\d+)(\\w*))?$/) as string[]\n      varName = `--${varName}`\n      if (scaleText != null) {\n        const scale = isNegative == null ? Number(scaleText) / 100 : -Number(scaleText) / 100\n        switch (method) {\n          case 'b': // brighten\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).brighten(scale).rgba : Color.fromCss(baseColor).darken(-scale).rgba\n            }\n            break\n          case 's': // saturate\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = scale > 0 ? Color.fromCss(baseColor).saturate(scale).rgba : Color.fromCss(baseColor).desaturate(-scale).rgba\n            }\n            break\n          case 'h': // hue\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).rotate(scale * 100).rgba\n              console.log(Color.fromCss(baseColor).hsla, Color.fromCss(baseColor).rotate(scale).hsla)\n            }\n            break\n          case 'o': // alpha\n            {\n              const baseColor = getComputedStyle(document.body).getPropertyValue(varName)\n              target[prop] = Color.fromCss(baseColor).opacity(scale).rgba\n            }\n            break\n          case '':\n            target[prop] = `calc(var(${varName}) * ${scale})`\n            break\n          default:\n            console.error(method)\n            throw new Error(`Unrecognized method ${method} for css variable ${varName}`)\n        }\n      } else {\n        target[prop] = `var(${varName})`\n      }\n    }\n    return target[prop]\n  }\n})\n","import { lerp, clamp } from './more-math'\n\nconst hex2 = (n: number): string => ('00' + Math.round(Number(n)).toString(16)).slice(-2)\n\nconst span = globalThis.document != null ? globalThis.document.createElement('span') : { style: { color: '' } }\n\nclass HslColor {\n  h: number\n  s: number\n  l: number\n\n  constructor (r: number, g: number, b: number) {\n    r /= 255\n    g /= 255\n    b /= 255\n    const l = Math.max(r, g, b)\n    const s = l - Math.min(r, g, b)\n    const h = s !== 0\n      ? l === r\n        ? (g - b) / s\n        : l === g\n          ? 2 + (b - r) / s\n          : 4 + (r - g) / s\n      : 0\n\n    this.h = 60 * h < 0 ? 60 * h + 360 : 60 * h\n    this.s = s !== 0 ? (l <= 0.5 ? s / (2 * l - s) : s / (2 - (2 * l - s))) : 0\n    this.l = (2 * l - s) / 2\n  }\n}\n\nexport class Color {\n  r: number\n  g: number\n  b: number\n  a: number\n\n  static fromCss (spec: string): Color {\n    span.style.color = spec\n    const converted = span.style.color\n    const [r, g, b, a] = converted.match(/[\\d.]+/g) as string[]\n    return new Color(Number(r), Number(g), Number(b), a == null ? 1 : Number(a))\n  }\n\n  static fromHsl (h: number, s: number, l: number, a = 1): Color {\n    return Color.fromCss(`hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${a.toFixed(2)})`)\n  }\n\n  constructor (r: number, g: number, b: number, a = 1) {\n    this.r = clamp(0, r, 255)\n    this.g = clamp(0, g, 255)\n    this.b = clamp(0, b, 255)\n    this.a = a !== undefined ? clamp(0, a, 1) : a = 1\n  }\n\n  get inverse (): Color {\n    return new Color(255 - this.r, 255 - this.g, 255 - this.b, this.a)\n  }\n\n  get inverseLuminance (): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, 1 - l, this.a)\n  }\n\n  get rgb (): string {\n    const { r, g, b } = this\n    return `rgb(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)})`\n  }\n\n  get rgba (): string {\n    const { r, g, b, a } = this\n    return `rgba(${r.toFixed(0)},${g.toFixed(0)},${b.toFixed(0)},${a.toFixed(2)})`\n  }\n\n  get RGBA (): number[] {\n    return [this.r / 255, this.g / 255, this.b / 255, this.a]\n  }\n\n  get ARGB (): number[] {\n    return [this.a, this.r / 255, this.g / 255, this.b / 255]\n  }\n\n  _hslCached?: HslColor\n\n  get _hsl (): HslColor {\n    if (this._hslCached == null) {\n      this._hslCached = new HslColor(this.r, this.g, this.b)\n    }\n    return this._hslCached\n  }\n\n  get hsl (): string {\n    const { h, s, l } = this._hsl\n    return `hsl(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%)`\n  }\n\n  get hsla (): string {\n    const { h, s, l } = this._hsl\n    return `hsla(${h.toFixed(0)}, ${(s * 100).toFixed(0)}%, ${(l * 100).toFixed(0)}%, ${this.a.toFixed(2)})`\n  }\n\n  get mono (): Color {\n    const v = this.brightness * 255\n    return new Color(v, v, v)\n  }\n\n  get brightness (): number {\n    // http://www.itu.int/rec/R-REC-BT.601\n    return (0.299 * this.r + 0.587 * this.g + 0.114 * this.b) / 255\n  }\n\n  get html (): string {\n    return this.a === 1 ? '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) : '#' + hex2(this.r) + hex2(this.g) + hex2(this.b) + hex2(Math.floor(255 * this.a))\n  }\n\n  brighten (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l + amount * (1 - l), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  darken (amount: number): Color {\n    let { h, s, l } = this._hsl\n    l = clamp(0, l * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  saturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s + amount * (1 - s), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  desaturate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    s = clamp(0, s * (1 - amount), 1)\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  rotate (amount: number): Color {\n    let { h, s, l } = this._hsl\n    h = (h + 360 + amount) % 360\n    return Color.fromHsl(h, s, l, this.a)\n  }\n\n  opacity (alpha: number): Color {\n    const { h, s, l } = this._hsl\n    return Color.fromHsl(h, s, l, alpha)\n  }\n\n  swatch (): void {\n    const { r, g, b, a } = this\n    console.log(`%c   %c ${this.html}, rgba(${r}, ${g}, ${b}, ${a}), ${this.hsla}`, `background-color: rgba(${r}, ${g}, ${b}, ${a})`, 'background-color: #eee')\n  }\n\n  blend (otherColor: Color, t: number): Color {\n    return new Color(\n      lerp(this.r, otherColor.r, t),\n      lerp(this.g, otherColor.g, t),\n      lerp(this.b, otherColor.b, t),\n      lerp(this.a, otherColor.a, t)\n    )\n  }\n}\n","import { bind, on } from './bind'\nimport { bindings } from './bindings'\nimport { ElementPart, ElementProps, ElementCreator, SwissArmyElement } from '../src/xin-types'\nimport { camelToKabob } from './string-case'\n\nconst templates: { [key: string]: HTMLElement } = {}\n\nexport const makeComponent = (...componentParts: ElementPart[]) => {\n  return (...args: ElementPart[]) => elements.div(...args, ...componentParts)\n}\n\nexport const create = (tagType: string, ...contents: ElementPart[]): SwissArmyElement => {\n  if (templates[tagType] === undefined) {\n    templates[tagType] = globalThis.document.createElement(tagType)\n  }\n  const elt = templates[tagType].cloneNode() as SwissArmyElement\n  const elementProps: ElementProps = {}\n  for (const item of contents) {\n    if (item instanceof Element || item instanceof DocumentFragment || typeof item === 'string' || typeof item === 'number') {\n      if (elt instanceof HTMLTemplateElement) {\n        elt.content.append(item as Node)\n      } else {\n        elt.append(item as Node)\n      }\n    } else {\n      Object.assign(elementProps, item)\n    }\n  }\n  for (const key of Object.keys(elementProps)) {\n    const value: any = elementProps[key]\n    if (key === 'apply') {\n      value(elt)\n    } else if (key === 'style') {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          if (prop.startsWith('--')) {\n            elt.style.setProperty(prop, value[prop])\n          } else {\n            // @ts-expect-error\n            elt.style[prop] = value[prop]\n          }\n        }\n      } else {\n        elt.setAttribute('style', value)\n      }\n    } else if (key.match(/^on[A-Z]/) != null) {\n      const eventType = key.substring(2).toLowerCase()\n      on(elt, eventType, value)\n    } else if (key.match(/^bind[A-Z]/) != null) {\n      const bindingType = key.substring(4, 5).toLowerCase() + key.substring(5)\n      const binding = bindings[bindingType]\n      if (binding !== undefined) {\n        bind(elt, value, binding)\n      } else {\n        throw new Error(`${key} is not allowed, bindings.${bindingType} is not defined`)\n      }\n    } else {\n      const attr = camelToKabob(key)\n\n      if (attr === 'class') {\n        value.split(' ').forEach((className: string) => {\n          elt.classList.add(className)\n        })\n      // @ts-expect-error-error\n      } else if (elt[attr] !== undefined) {\n        // @ts-expect-error-error\n        elt[attr] = value\n      } else if (typeof value === 'boolean') {\n        value ? elt.setAttribute(attr, '') : elt.removeAttribute(attr)\n      } else {\n        elt.setAttribute(attr, value)\n      }\n    }\n  }\n  return elt\n}\n\nconst fragment: ElementCreator<DocumentFragment> = (...contents: ElementPart[]) => {\n  const frag = globalThis.document.createDocumentFragment()\n  for (const item of contents) {\n    frag.append(item as Node)\n  }\n  return frag\n}\n\nexport interface ElementsProxy {\n  a: ElementCreator<HTMLAnchorElement>\n  abbr: ElementCreator\n  acronym: ElementCreator\n  address: ElementCreator\n  area: ElementCreator<HTMLAreaElement>\n  article: ElementCreator\n  aside: ElementCreator\n  audio: ElementCreator<HTMLAudioElement>\n  b: ElementCreator\n  base: ElementCreator<HTMLBaseElement>\n  basefont: ElementCreator\n  bdi: ElementCreator\n  bdo: ElementCreator\n  big: ElementCreator\n  blockquote: ElementCreator<HTMLQuoteElement>\n  body: ElementCreator<HTMLBodyElement>\n  br: ElementCreator<HTMLBRElement>\n  button: ElementCreator<HTMLButtonElement>\n  canvas: ElementCreator<HTMLCanvasElement>\n  caption: ElementCreator\n  center: ElementCreator\n  cite: ElementCreator\n  code: ElementCreator\n  col: ElementCreator<HTMLTableColElement>\n  colgroup: ElementCreator<HTMLTableColElement>\n  data: ElementCreator<HTMLDataElement>\n  datalist: ElementCreator<HTMLDataListElement>\n  dd: ElementCreator\n  del: ElementCreator\n  details: ElementCreator<HTMLDetailsElement>\n  dfn: ElementCreator\n  dialog: ElementCreator<HTMLDialogElement>\n  div: ElementCreator<HTMLDivElement>\n  dl: ElementCreator\n  dt: ElementCreator\n  em: ElementCreator\n  embed: ElementCreator<HTMLEmbedElement>\n  fieldset: ElementCreator<HTMLFieldSetElement>\n  figcaption: ElementCreator\n  figure: ElementCreator\n  font: ElementCreator\n  footer: ElementCreator\n  form: ElementCreator<HTMLFormElement>\n  frame: ElementCreator\n  frameset: ElementCreator\n  head: ElementCreator<HTMLHeadElement>\n  header: ElementCreator\n  hgroup: ElementCreator\n  h1: ElementCreator<HTMLHeadingElement>\n  h2: ElementCreator<HTMLHeadingElement>\n  h3: ElementCreator<HTMLHeadingElement>\n  h4: ElementCreator<HTMLHeadingElement>\n  h5: ElementCreator<HTMLHeadingElement>\n  h6: ElementCreator<HTMLHeadingElement>\n  hr: ElementCreator<HTMLHRElement>\n  html: ElementCreator<HTMLHtmlElement>\n  i: ElementCreator\n  iframe: ElementCreator<HTMLIFrameElement>\n  img: ElementCreator<HTMLImageElement>\n  input: ElementCreator<HTMLInputElement>\n  ins: ElementCreator<HTMLModElement>\n  kbd: ElementCreator\n  keygen: ElementCreator<HTMLUnknownElement>\n  label: ElementCreator<HTMLLabelElement>\n  legend: ElementCreator<HTMLLegendElement>\n  li: ElementCreator<HTMLLIElement>\n  link: ElementCreator<HTMLLinkElement>\n  main: ElementCreator\n  map: ElementCreator<HTMLMapElement>\n  mark: ElementCreator\n  menu: ElementCreator<HTMLMenuElement>\n  menuitem: ElementCreator<HTMLUnknownElement>\n  meta: ElementCreator<HTMLMetaElement>\n  meter: ElementCreator<HTMLMeterElement>\n  nav: ElementCreator\n  noframes: ElementCreator\n  noscript: ElementCreator\n  object: ElementCreator<HTMLObjectElement>\n  ol: ElementCreator<HTMLOListElement>\n  optgroup: ElementCreator<HTMLOptGroupElement>\n  option: ElementCreator<HTMLOptionElement>\n  output: ElementCreator<HTMLOutputElement>\n  p: ElementCreator<HTMLParagraphElement>\n  param: ElementCreator\n  picture: ElementCreator<HTMLPictureElement>\n  pre: ElementCreator<HTMLPreElement>\n  progress: ElementCreator<HTMLProgressElement>\n  q: ElementCreator<HTMLQuoteElement>\n  rp: ElementCreator\n  rt: ElementCreator\n  ruby: ElementCreator\n  s: ElementCreator\n  samp: ElementCreator\n  script: ElementCreator<HTMLScriptElement>\n  section: ElementCreator\n  select: ElementCreator<HTMLSelectElement>\n  slot: ElementCreator<HTMLSlotElement>\n  small: ElementCreator\n  source: ElementCreator<HTMLSourceElement>\n  span: ElementCreator<HTMLSpanElement>\n  strike: ElementCreator\n  strong: ElementCreator\n  style: ElementCreator<HTMLStyleElement>\n  sub: ElementCreator\n  summary: ElementCreator\n  svg: ElementCreator<SVGElement>\n  table: ElementCreator<HTMLTableElement>\n  tbody: ElementCreator<HTMLTableSectionElement>\n  td: ElementCreator<HTMLTableCellElement>\n  template: ElementCreator<HTMLTemplateElement>\n  textarea: ElementCreator<HTMLTextAreaElement>\n  tfoot: ElementCreator<HTMLTableSectionElement>\n  th: ElementCreator<HTMLTableCellElement>\n  thead: ElementCreator<HTMLTableSectionElement>\n  time: ElementCreator<HTMLTimeElement>\n  title: ElementCreator<HTMLTitleElement>\n  tr: ElementCreator<HTMLTableRowElement>\n  track: ElementCreator<HTMLTrackElement>\n  tt: ElementCreator\n  u: ElementCreator\n  ul: ElementCreator<HTMLUListElement>\n  var: ElementCreator\n  video: ElementCreator<HTMLVideoElement>\n  wbr: ElementCreator\n  [key: string | symbol]: ElementCreator<any>\n}\n\nexport const elements = new Proxy({ fragment }, {\n  get (target, tagName: string) {\n    tagName = tagName.replace(/[A-Z]/g, c => `-${c.toLocaleLowerCase()}`)\n    if (tagName.match(/^\\w+(-\\w+)*$/) == null) {\n      throw new Error(`${tagName} does not appear to be a valid element tagName`)\n      // @ts-expect-error\n    } else if (target[tagName] === undefined) {\n      // @ts-expect-error\n      target[tagName] = (...contents: ElementPart[]) => create(tagName, ...contents)\n    }\n    // @ts-expect-error\n    return target[tagName]\n  },\n  set () {\n    throw new Error('You may not add new properties to elements')\n  }\n}) as unknown as ElementsProxy\n","import { xin, touch, observe } from './xin'\nimport {\n  getListItem, elementToBindings, elementToHandlers, DataBindings, BOUND_CLASS, BOUND_SELECTOR,\n  EVENT_CLASS, EVENT_SELECTOR, XinEventBindings, XinEventHandler, XIN_PATH, XIN_VALUE\n} from './metadata'\nimport { XinObject, XinTouchableType, XinBinding, XinProxy, XinBindingSpec } from './xin-types'\n\nconst { document, MutationObserver } = globalThis\n\nexport const touchElement = (element: HTMLElement, changedPath?: string): void => {\n  const dataBindings = elementToBindings.get(element) as DataBindings\n  for (const dataBinding of dataBindings) {\n    let { path, binding, options } = dataBinding\n    const { toDOM } = binding\n    if (toDOM != null) {\n      if (path.startsWith('^')) {\n        const dataSource = getListItem(element)\n        if (dataSource != null && (dataSource as XinProxy)[XIN_PATH] != null) {\n          path = dataBinding.path = `${(dataSource as XinProxy)[XIN_PATH]}${path.substring(1)}`\n        } else {\n          console.error(`Cannot resolve relative binding ${path}`, element, 'is not part of a list')\n          throw new Error(`Cannot resolve relative binding ${path}`)\n        }\n      }\n      if (changedPath == null || path.startsWith(changedPath)) {\n        toDOM(element, xin[path], options)\n      }\n    }\n  }\n}\n\n// this is just to allow bind to be testable in node\nif (MutationObserver != null) {\n  const observer = new MutationObserver((mutationsList) => {\n    mutationsList.forEach((mutation) => {\n      [...mutation.addedNodes].forEach(node => {\n        if (node instanceof HTMLElement) {\n          [...node.querySelectorAll(BOUND_SELECTOR)].forEach(element => touchElement(element as HTMLElement))\n        }\n      })\n    })\n  })\n  observer.observe(document.body, { subtree: true, childList: true })\n}\n\nobserve(() => true, (changedPath: string) => {\n  const boundElements = document.querySelectorAll(BOUND_SELECTOR)\n\n  for (const element of boundElements) {\n    touchElement(element as HTMLElement, changedPath)\n  }\n})\n\nconst handleChange = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event.target.closest(BOUND_SELECTOR)\n  while (target != null) {\n    const dataBindings = elementToBindings.get(target) as DataBindings\n    for (const dataBinding of dataBindings) {\n      const { binding, path } = dataBinding\n      const { fromDOM } = binding\n      if (fromDOM != null) {\n        let value\n        try {\n          value = fromDOM(target, dataBinding.options)\n        } catch (e) {\n          console.error('Cannot get value from', target, 'via', dataBinding)\n          throw new Error('Cannot obtain value fromDOM')\n        }\n        if (value != null) {\n          const existing = xin[path]\n          // eslint-disable-next-line\n          if (existing == null) {\n            xin[path] = value\n          } else {\n            // @ts-expect-error-error\n            const existingActual = existing[XIN_PATH] != null ? (existing as XinProxy)[XIN_VALUE] : existing\n            const valueActual = value[XIN_PATH] != null ? value[XIN_VALUE] : value\n            if (existingActual !== valueActual) {\n              xin[path] = valueActual\n            }\n          }\n        }\n      }\n    }\n    target = target.parentElement.closest(BOUND_SELECTOR)\n  }\n}\n\nif (globalThis.document != null) {\n  document.body.addEventListener('change', handleChange, true)\n  document.body.addEventListener('input', handleChange, true)\n}\n\nexport const bind = (element: HTMLElement | DocumentFragment, what: XinTouchableType | XinBindingSpec, binding: XinBinding, options?: XinObject): HTMLElement => {\n  if (element instanceof DocumentFragment) {\n    throw new Error('bind cannot bind to a DocumentFragment')\n  }\n  let path: string\n  if (typeof what === 'object' && (what as XinProxy)[XIN_PATH] === undefined && options === undefined) {\n    const { value } = what as XinBindingSpec\n    path = typeof value === 'string' ? value : value[XIN_PATH]\n    options = what as XinObject\n    delete options.value\n  } else {\n    path = typeof what === 'string' ? what : (what as XinProxy)[XIN_PATH]\n  }\n  if (path == null) {\n    throw new Error('bind requires a path or object with xin Proxy')\n  }\n  const { toDOM } = binding\n\n  element.classList.add(BOUND_CLASS)\n  let dataBindings = elementToBindings.get(element)\n  if (dataBindings == null) {\n    dataBindings = []\n    elementToBindings.set(element, dataBindings)\n  }\n  dataBindings.push({ path, binding, options })\n\n  if (toDOM != null && !path.startsWith('^')) {\n    touch(path)\n  }\n\n  return element\n}\n\nconst handledEventTypes: Set<string> = new Set()\n\nconst handleBoundEvent = (event: Event): void => {\n  // @ts-expect-error-error\n  let target = event?.target.closest(EVENT_SELECTOR)\n  let propagationStopped = false\n\n  const wrappedEvent = new Proxy(event, {\n    get (target, prop) {\n      if (prop === 'stopPropagation') {\n        return () => {\n          event.stopPropagation()\n          propagationStopped = true\n        }\n      } else {\n        // @ts-expect-error-error\n        const value = target[prop]\n        return typeof value === 'function' ? value.bind(target) : value\n      }\n    }\n  })\n  // eslint-disable-next-line no-unmodified-loop-condition\n  while (!propagationStopped && target != null) {\n    const eventBindings = elementToHandlers.get(target) as XinEventBindings\n    // eslint-disable-next-line\n    const handlers = eventBindings[event.type] || [] as XinEventHandler[]\n    for (const handler of handlers) {\n      if (typeof handler === 'function') {\n        handler(wrappedEvent)\n      } else {\n        const func = xin[handler]\n        if (typeof func === 'function') {\n          func(wrappedEvent)\n        } else {\n          throw new Error(`no event handler found at path ${handler}`)\n        }\n      }\n      if (propagationStopped) {\n        continue\n      }\n    }\n    target = target.parentElement != null ? target.parentElement.closest(EVENT_SELECTOR) : null\n  }\n}\n\nexport const on = (element: HTMLElement, eventType: string, eventHandler: XinEventHandler): void => {\n  let eventBindings = elementToHandlers.get(element)\n  element.classList.add(EVENT_CLASS)\n  if (eventBindings == null) {\n    eventBindings = {}\n    elementToHandlers.set(element, eventBindings)\n  }\n  // eslint-disable-next-line\n  if (!eventBindings[eventType]) {\n    eventBindings[eventType] = []\n  }\n  if (!eventBindings[eventType].includes(eventHandler)) {\n    eventBindings[eventType].push(eventHandler)\n  }\n  if (!handledEventTypes.has(eventType)) {\n    handledEventTypes.add(eventType)\n    document.body.addEventListener(eventType, handleBoundEvent, true)\n  }\n}\n","import { XinObject, XinBinding, ValueElement } from './xin-types'\nimport { getListBinding } from './list-binding'\nimport { getValue, setValue } from './dom'\n\nexport const bindings: { [key: string | symbol]: XinBinding } = {\n  value: {\n    toDOM (element: HTMLElement, value: any) {\n      setValue(element, value)\n    },\n\n    fromDOM (element: HTMLElement) {\n      return getValue(element as ValueElement)\n    }\n  },\n\n  text: {\n    toDOM (element: HTMLElement, value: any) {\n      element.textContent = value\n    }\n  },\n\n  enabled: {\n    toDOM (element: HTMLElement, value: any) {\n      // eslint-disable-next-line\n      (element as HTMLInputElement).disabled = !value\n    }\n  },\n\n  disabled: {\n    toDOM (element: HTMLElement, value: any) {\n      (element as HTMLInputElement).disabled = Boolean(value)\n    }\n  },\n\n  style: {\n    toDOM (element: HTMLElement, value: any) {\n      if (typeof value === 'object') {\n        for (const prop of Object.keys(value)) {\n          // @ts-expect-error\n          element.style[prop] = value[prop]\n        }\n      } else if (typeof value === 'string') {\n        element.setAttribute('style', value)\n      } else {\n        throw new Error('style binding expects either a string or object')\n      }\n    }\n  },\n\n  list: {\n    toDOM (element: HTMLElement, value: any[], options?: XinObject) {\n      const listBinding = getListBinding(element, options)\n      listBinding.update(value)\n    }\n  }\n}\n","import { settings } from './settings'\nimport { resizeObserver } from './dom'\nimport { throttle } from './throttle'\nimport { xin } from './xin'\nimport { cloneWithBindings, elementToItem, elementToBindings, BOUND_SELECTOR, DataBinding, XIN_VALUE, XIN_PATH } from './metadata'\nimport { XinObject } from './xin-types'\n\nconst listBindingRef = Symbol('list-binding')\nconst SLICE_INTERVAL_MS = 16 // 60fps\n\ndeclare global {\n  interface HTMLElement {\n    [listBindingRef]?: ListBinding\n  }\n}\n\ninterface ListBindingOptions {\n  idPath?: string\n  initInstance?: (element: HTMLElement, value: any) => void\n  updateInstance?: (element: HTMLElement, value: any) => void\n  virtual?: { height: number, width?: number }\n}\n\ninterface VirtualListSlice {\n  firstItem: number\n  lastItem: number\n  topBuffer: number\n  bottomBuffer: number\n}\n\nfunction updateRelativeBindings (element: HTMLElement, path: string): void {\n  const boundElements = [...element.querySelectorAll(BOUND_SELECTOR)]\n  if (element.matches(BOUND_SELECTOR)) {\n    boundElements.unshift(element)\n  }\n  for (const boundElement of boundElements) {\n    const bindings = elementToBindings.get(boundElement) as DataBinding[]\n    for (const binding of bindings) {\n      if (binding.path.startsWith('^')) {\n        binding.path = `${path}${binding.path.substring(1)}`\n      }\n      if (binding.binding.toDOM != null) {\n        binding.binding.toDOM(boundElement as HTMLElement, xin[binding.path])\n      }\n    }\n  }\n}\n\nclass ListBinding {\n  boundElement: HTMLElement\n  listTop: HTMLElement\n  listBottom: HTMLElement\n  template: HTMLElement\n  options: ListBindingOptions\n  itemToElement: WeakMap<XinObject, HTMLElement>\n  private _array: any[] = []\n  private readonly _update?: VoidFunction\n  private _previousSlice?: VirtualListSlice\n\n  constructor (boundElement: HTMLElement, options: ListBindingOptions = {}) {\n    this.boundElement = boundElement\n    this.itemToElement = new WeakMap()\n    if (boundElement.children.length !== 1) {\n      throw new Error('ListBinding expects an element with exactly one child element')\n    }\n    if (boundElement.children[0] instanceof HTMLTemplateElement) {\n      const template = boundElement.children[0]\n      if (template.content.children.length !== 1) {\n        throw new Error('ListBinding expects a template with exactly one child element')\n      }\n      this.template = cloneWithBindings(template.content.children[0]) as HTMLElement\n    } else {\n      this.template = boundElement.children[0] as HTMLElement\n      this.template.remove()\n    }\n    this.listTop = document.createElement('div')\n    this.listBottom = document.createElement('div')\n    this.boundElement.append(this.listTop)\n    this.boundElement.append(this.listBottom)\n    this.options = options\n    if (options.virtual != null) {\n      resizeObserver.observe(this.boundElement)\n      this._update = throttle(() => {\n        this.update(this._array, true)\n      }, SLICE_INTERVAL_MS)\n      this.boundElement.addEventListener('scroll', this._update)\n      this.boundElement.addEventListener('resize', this._update)\n    }\n  }\n\n  private visibleSlice (): VirtualListSlice {\n    const { virtual } = this.options\n    let firstItem = 0\n    let lastItem = this._array.length - 1\n    let topBuffer = 0\n    let bottomBuffer = 0\n\n    if (virtual != null) {\n      const width = this.boundElement.offsetWidth\n      const height = this.boundElement.offsetHeight\n\n      const visibleColumns = virtual.width != null ? Math.max(1, Math.floor(width / virtual.width)) : 1\n      const visibleRows = Math.ceil(height / virtual.height) + 1\n      const totalRows = Math.ceil(this._array.length / visibleColumns)\n      const visibleItems = visibleColumns * visibleRows\n      let topRow = Math.floor(this.boundElement.scrollTop / virtual.height)\n      if (topRow > totalRows - visibleRows + 1) {\n        topRow = Math.max(0, totalRows - visibleRows + 1)\n      }\n      firstItem = topRow * visibleColumns\n      lastItem = firstItem + visibleItems - 1\n\n      topBuffer = topRow * virtual.height\n      bottomBuffer = totalRows * virtual.height - height - topBuffer\n    }\n\n    return {\n      firstItem,\n      lastItem,\n      topBuffer,\n      bottomBuffer\n    }\n  }\n\n  update (array?: any[], isSlice?: boolean): void {\n    if (array == null) {\n      array = []\n    }\n    this._array = array\n\n    const { initInstance, updateInstance } = this.options\n    // @ts-expect-error\n    const arrayPath: string = array[XIN_PATH]\n\n    const slice = this.visibleSlice()\n    const previousSlice = this._previousSlice\n    const { firstItem, lastItem, topBuffer, bottomBuffer } = slice\n    if (isSlice === true && previousSlice != null && firstItem === previousSlice.firstItem && lastItem === previousSlice.lastItem) {\n      return\n    }\n    this._previousSlice = slice\n\n    let removed = 0\n    let moved = 0\n    let created = 0\n\n    for (const element of [...this.boundElement.children]) {\n      if (element === this.listTop || element === this.listBottom) {\n        continue\n      }\n      const proxy = elementToItem.get(element as HTMLElement)\n      if (proxy == null) {\n        element.remove()\n      } else {\n        const idx = array.indexOf(proxy)\n        if (idx < firstItem || idx > lastItem) {\n          element.remove()\n          this.itemToElement.delete(proxy)\n          elementToItem.delete(element as HTMLElement)\n          removed++\n        }\n      }\n    }\n\n    this.listTop.style.height = String(topBuffer) + 'px'\n    this.listBottom.style.height = String(bottomBuffer) + 'px'\n\n    // build a complete new set of elements in the right order\n    const elements: HTMLElement[] = []\n    const { idPath } = this.options\n    for (let i = firstItem; i <= lastItem; i++) {\n      const item = array[i]\n      if (item === undefined) {\n        continue\n      }\n      let element = this.itemToElement.get(item[XIN_VALUE])\n      if (element == null) {\n        created++\n        element = cloneWithBindings(this.template) as HTMLElement\n        if (typeof item === 'object') {\n          this.itemToElement.set(item[XIN_VALUE], element)\n          elementToItem.set(element, item[XIN_VALUE])\n        }\n        this.boundElement.insertBefore(element, this.listBottom)\n        if (idPath != null) {\n          const idValue = item[idPath] as string\n          const itemPath = `${arrayPath}[${idPath}=${idValue}]`\n          updateRelativeBindings(element, itemPath)\n        }\n        if (initInstance != null) {\n          // eslint-disable-next-line\n          initInstance(element, item)\n        }\n      }\n      if (updateInstance != null) {\n        // eslint-disable-next-line\n        updateInstance(element, item)\n      }\n      elements.push(element)\n    }\n\n    // make sure all the elements are in the DOM and in the correct location\n    let insertionPoint: HTMLElement | null = null\n    for (const element of elements) {\n      if (element.previousElementSibling !== insertionPoint) {\n        moved++\n        if (insertionPoint?.nextElementSibling != null) {\n          this.boundElement.insertBefore(element, insertionPoint.nextElementSibling)\n        } else {\n          this.boundElement.insertBefore(element, this.listBottom)\n        }\n      }\n      insertionPoint = element\n    }\n\n    if (settings.perf) {\n      console.log(arrayPath, 'updated', { removed, created, moved })\n    }\n  }\n}\n\nexport const getListBinding = (boundElement: HTMLElement, options?: ListBindingOptions): ListBinding => {\n  let listBinding = boundElement[listBindingRef]\n  if (listBinding == null) {\n    listBinding = new ListBinding(boundElement, options)\n    boundElement[listBindingRef] = listBinding\n  }\n  return listBinding\n}\n","import { cloneWithBindings } from './metadata'\nimport { ContentType, ValueElement } from './xin-types'\n\nexport const dispatch = (target: Element, type: string): void => {\n  const event = new Event(type)\n  target.dispatchEvent(event)\n}\n\nconst valueType = (element: HTMLElement): string => {\n  if (element instanceof HTMLInputElement) {\n    return element.type\n  } else if (element instanceof HTMLSelectElement && element.hasAttribute('multiple')) {\n    return 'multi-select'\n  } else {\n    return 'other'\n  }\n}\n\nexport const setValue = (element: HTMLElement, newValue: any): void => {\n  switch (valueType(element)) {\n    case 'radio':\n      // @ts-expect-error\n      element.checked = element.value === newValue\n      break\n    case 'checkbox':\n      // @ts-expect-error\n      element.checked = newValue\n      break\n    case 'date':\n      // @ts-expect-error\n      element.valueAsDate = new Date(newValue)\n      break\n    case 'multi-select':\n      for (const option of [...element.querySelectorAll('option')] as HTMLOptionElement[]) {\n        option.selected = newValue[option.value]\n      }\n      break\n    default:\n      // @ts-expect-error\n      element.value = newValue\n  }\n}\n\ninterface PickMap {\n  [key: string]: boolean\n}\nexport const getValue = (element: ValueElement): any => {\n  switch (valueType(element)) {\n    case 'radio':\n    {\n      const radio = element.parentElement?.querySelector(`[name=\"${element.name}\"]:checked`) as HTMLInputElement\n      return radio != null ? radio.value : null\n    }\n    case 'checkbox':\n      // @ts-expect-error\n      return element.checked\n    case 'date':\n      // @ts-expect-error\n      return element.valueAsDate.toISOString()\n    case 'multi-select':\n      return [...element.querySelectorAll('option')]\n        .reduce((map: PickMap, option: HTMLOptionElement): PickMap => {\n          map[option.value] = option.selected\n          return map\n        }, {})\n    default:\n      return element.value\n  }\n}\n\n/* global ResizeObserver */\nconst { ResizeObserver } = globalThis\nexport const resizeObserver = ResizeObserver != null\n  ? new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const element = entry.target\n      dispatch(element, 'resize')\n    }\n  })\n  : {\n      observe () {},\n      unobserve () {}\n    }\n\nexport const appendContentToElement = (elt: Element | ShadowRoot | null | undefined, content: ContentType | null | undefined): void => {\n  if (elt != null && content != null) {\n    if (typeof content === 'string') {\n      elt.textContent = content\n    } else if (Array.isArray(content)) {\n      content.forEach(node => {\n        elt.append(node instanceof Node ? cloneWithBindings(node) : node)\n      })\n    } else if (content instanceof HTMLElement) {\n      elt.append(cloneWithBindings(content))\n    } else {\n      throw new Error('expect text content or document node')\n    }\n  }\n}\n","export function camelToKabob (s: string): string {\n  return s.replace(/[A-Z]/g, (c: string): string => {\n    return `-${c.toLocaleLowerCase()}`\n  })\n}\n\nexport function kabobToCamel (s: string): string {\n  return s.replace(/-([a-z])/g, (_: string, c: string): string => {\n    return c.toLocaleUpperCase()\n  })\n}\n","import { XIN_PATH, XIN_VALUE } from './metadata'\n\nexport type XinScalar = string | boolean | number | Function\n\nexport type XinArray = XinObject[] | XinScalar[]\n\nexport interface XinObject {\n  [key: string]: XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyTarget = XinObject | XinArray\n\nexport type XinValue = XinObject | XinArray | XinScalar | null | undefined\n\nexport interface XinProps {\n  [XIN_VALUE]: XinObject | XinObject | XinScalar\n  [XIN_PATH]: string\n}\n\nexport type XinProxyObject = XinProps & {\n  [key: string]: XinProxyObject | XinProxyArray | XinObject | XinArray | XinScalar\n}\n\nexport type XinProxyArray = XinProps & { [key: string]: XinProxyObject } & (XinProxyObject[] | XinScalar[])\n\nexport type XinProxy = XinProps & (XinObject | XinArray)\n\nexport type XinProxyValue = XinProxy | XinScalar | null | undefined\n\nexport type XinTouchableType = string | XinProps\n\nexport type XinEventHandler<T=Event> = ((evt: T) => void) | ((evt: T) => Promise<void> | string | Promise<string>)\n\nexport type XinBindingShortcut = XinTouchableType | XinBindingSpec\n\ntype _BooleanFunction = () => boolean\ntype _PathTestFunction = (path: string) => boolean | Symbol\nexport type PathTestFunction = _BooleanFunction | _PathTestFunction\n\ntype OptionalSymbol = Symbol | undefined\ntype _CallbackFunction = (() => void) | (() => OptionalSymbol)\ntype _PathCallbackFunction = ((path: string) => void) | ((path: string) => OptionalSymbol)\nexport type ObserverCallbackFunction = _PathCallbackFunction | _CallbackFunction\n\nexport interface XinBindingSpec {\n  value: XinTouchableType\n  [key: string]: any\n}\n\nexport interface XinBinding {\n  toDOM?: (element: HTMLElement, value: any, options?: XinObject) => void\n  fromDOM?: (element: HTMLElement, options?: XinObject) => any\n}\n\nexport interface XinStyleRule {\n  alignContent?: string | number\n  alignItems?: string | number\n  alignSelf?: string | number\n  all?: string | number\n  animation?: string | number\n  animationDelay?: string | number\n  animationDirection?: string | number\n  animationDuration?: string | number\n  animationFillMode?: string | number\n  animationIterationCount?: string | number\n  animationName?: string | number\n  animationPlayState?: string | number\n  animationTimingFunction?: string | number\n  backfaceVisibility?: string | number\n  background?: string | number\n  backgroundAttachment?: string | number\n  backgroundBlendMode?: string | number\n  backgroundClip?: string | number\n  backgroundColor?: string | number\n  backgroundImage?: string | number\n  backgroundOrigin?: string | number\n  backgroundPosition?: string | number\n  backgroundRepeat?: string | number\n  backgroundSize?: string | number\n  border?: string | number\n  borderBottom?: string | number\n  borderBottomColor?: string | number\n  borderBottomLeftRadius?: string | number\n  borderBottomRightRadius?: string | number\n  borderBottomStyle?: string | number\n  borderBottomWidth?: string | number\n  borderCollapse?: string | number\n  borderColor?: string | number\n  borderImage?: string | number\n  borderImageOutset?: string | number\n  borderImageRepeat?: string | number\n  borderImageSlice?: string | number\n  borderImageSource?: string | number\n  borderImageWidth?: string | number\n  borderLeft?: string | number\n  borderLeftColor?: string | number\n  borderLeftStyle?: string | number\n  borderLeftWidth?: string | number\n  borderRadius?: string | number\n  borderRight?: string | number\n  borderRightColor?: string | number\n  borderRightStyle?: string | number\n  borderRightWidth?: string | number\n  borderSpacing?: string | number\n  borderStyle?: string | number\n  borderTop?: string | number\n  borderTopColor?: string | number\n  borderTopLeftRadius?: string | number\n  borderTopRightRadius?: string | number\n  borderTopStyle?: string | number\n  borderTopWidth?: string | number\n  borderWidth?: string | number\n  bottom?: string | number\n  boxShadow?: string | number\n  boxSizing?: string | number\n  captionSide?: string | number\n  caretColor?: string | number\n  clear?: string | number\n  clip?: string | number\n  clipPath?: string | number\n  color?: string | number\n  columnCount?: string | number\n  columnFill?: string | number\n  columnGap?: string | number\n  columnRule?: string | number\n  columnRuleColor?: string | number\n  columnRuleStyle?: string | number\n  columnRuleWidth?: string | number\n  columnSpan?: string | number\n  columnWidth?: string | number\n  columns?: string | number\n  content?: string | number\n  counterIncrement?: string | number\n  counterReset?: string | number\n  cursor?: string | number\n  direction?: string | number\n  display?: string | number\n  emptyCells?: string | number\n  filter?: string | number\n  flex?: string | number\n  flexBasis?: string | number\n  flexDirection?: string | number\n  flexFlow?: string | number\n  flexGrow?: string | number\n  flexShrink?: string | number\n  flexWrap?: string | number\n  float?: string | number\n  font?: string | number\n  fontFamily?: string | number\n  fontKerning?: string | number\n  fontSize?: string | number\n  fontSizeAdjust?: string | number\n  fontStretch?: string | number\n  fontStyle?: string | number\n  fontVariant?: string | number\n  fontWeight?: string | number\n  grid?: string | number\n  gridArea?: string | number\n  gridAutoColumns?: string | number\n  gridAutoFlow?: string | number\n  gridAutoRows?: string | number\n  gridColumn?: string | number\n  gridColumnEnd?: string | number\n  gridColumnGap?: string | number\n  gridColumnStart?: string | number\n  gridGap?: string | number\n  gridRow?: string | number\n  gridRowEnd?: string | number\n  gridRowGap?: string | number\n  gridRowStart?: string | number\n  gridTemplate?: string | number\n  gridTemplateAreas?: string | number\n  gridTemplateColumns?: string | number\n  gridTemplateRows?: string | number\n  height?: string | number\n  hyphens?: string | number\n  justifyContent?: string | number\n  left?: string | number\n  letterSpacing?: string | number\n  lineHeight?: string | number\n  listStyle?: string | number\n  listStyleImage?: string | number\n  listStylePosition?: string | number\n  listStyleType?: string | number\n  margin?: string | number\n  marginBottom?: string | number\n  marginLeft?: string | number\n  marginRight?: string | number\n  marginTop?: string | number\n  maxHeight?: string | number\n  maxWidth?: string | number\n  minHeight?: string | number\n  minWidth?: string | number\n  objectFit?: string | number\n  objectPosition?: string | number\n  opacity?: string | number\n  order?: string | number\n  outline?: string | number\n  outlineColor?: string | number\n  outlineOffset?: string | number\n  outlineStyle?: string | number\n  outlineWidth?: string | number\n  overflow?: string | number\n  overflowX?: string | number\n  overflowY?: string | number\n  padding?: string | number\n  paddingBottom?: string | number\n  paddingLeft?: string | number\n  paddingRight?: string | number\n  paddingTop?: string | number\n  pageBreakAfter?: string | number\n  pageBreakBefore?: string | number\n  pageBreakInside?: string | number\n  perspective?: string | number\n  perspectiveOrigin?: string | number\n  pointerEvents?: string | number\n  position?: string | number\n  quotes?: string | number\n  right?: string | number\n  scrollBehavior?: string | number\n  tableLayout?: string | number\n  textAlign?: string | number\n  textAlignLast?: string | number\n  textDecoration?: string | number\n  textDecorationColor?: string | number\n  textDecorationLine?: string | number\n  textDecorationStyle?: string | number\n  textIndent?: string | number\n  textJustify?: string | number\n  textOverflow?: string | number\n  textShadow?: string | number\n  textTransform?: string | number\n  top?: string | number\n  transform?: string | number\n  transformOrigin?: string | number\n  transformStyle?: string | number\n  transition?: string | number\n  transitionDelay?: string | number\n  transitionDuration?: string | number\n  transitionProperty?: string | number\n  transitionTimingFunction?: string | number\n  userSelect?: string | number\n  verticalAlign?: string | number\n  visibility?: string | number\n  whiteSpace?: string | number\n  width?: string | number\n  wordBreak?: string | number\n  wordSpacing?: string | number\n  wordWrap?: string | number\n  writingMode?: string | number\n  zIndex?: string | number\n  [key: string]: string | number | undefined\n}\nexport interface XinStyleMap {\n  [key: string]: XinStyleRule\n}\nexport interface ElementProps {\n  onClick?: XinEventHandler<MouseEvent>\n  onInput?: XinEventHandler\n  onChange?: XinEventHandler\n  onSubmit?: XinEventHandler\n  bindValue?: XinBindingShortcut\n  bindText?: XinBindingShortcut\n  bindList?: XinBindingShortcut\n  bindEnabled?: XinBindingShortcut\n  bindDisabled?: XinBindingShortcut\n  bindStyle?: XinBindingShortcut\n  style?: XinStyleRule\n  [key: string]: any\n}\n\nexport type ValueElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\nexport type SwissArmyElement = HTMLElement & HTMLInputElement & HTMLCanvasElement\nexport type ElementPart = HTMLElement | DocumentFragment | ElementProps | string | number\nexport type HTMLElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type FragmentCreator = (...contents: ElementPart[]) => DocumentFragment\nexport type ElementCreator<T extends Node = SwissArmyElement> = (...contents: ElementPart[]) => T\nexport type ContentPart = HTMLElement | DocumentFragment | string\nexport type ContentType = ContentPart | ContentPart[]\n"],"names":[],"version":3,"file":"module.js.map"}